(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 2));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance");}function _iterableToArrayLimit(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}

var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function isFn(fn) {
  return typeof fn === 'function';
}

function isStr(str) {
  return typeof str === 'string';
}

function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

function noop() {}

/**
                    * Create a cached version of a pure function.
                    */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
   * Camelize a hyphen-delimited string.
   */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});
});

var HOOKS = [
'invoke',
'success',
'fail',
'complete',
'returnValue'];


var globalInterceptors = {};
var scopedInterceptors = {};

function mergeHook(parentVal, childVal) {
  var res = childVal ?
  parentVal ?
  parentVal.concat(childVal) :
  Array.isArray(childVal) ?
  childVal : [childVal] :
  parentVal;
  return res ?
  dedupeHooks(res) :
  res;
}

function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}

function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}

function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}

function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}

function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}

function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}

function wrapperHook(hook) {
  return function (data) {
    return hook(data) || data;
  };
}

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}

function queue(hooks, data) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.then(wrapperHook(hook));
    } else {
      var res = hook(data);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {} };

      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    } };

}

function wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}

function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}

function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}

function invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}

var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return res.then(function (res) {
      return res[1];
    }).catch(function (res) {
      return res[0];
    });
  } };


var SYNC_API_RE =
/^\$|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;

var CONTEXT_API_RE = /^create|Manager$/;

var CALLBACK_API_RE = /^on/;

function isContextApi(name) {
  return CONTEXT_API_RE.test(name);
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name);
}

function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}

function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).
  catch(function (err) {return [err];});
}

function shouldPromise(name) {
  if (
  isContextApi(name) ||
  isSyncApi(name) ||
  isCallbackApi(name))
  {
    return false;
  }
  return true;
}

function promisify(name, api) {
  if (!shouldPromise(name)) {
    return api;
  }
  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject })].concat(
      params));
      /* eslint-disable no-extend-native */
      if (!Promise.prototype.finally) {
        Promise.prototype.finally = function (callback) {
          var promise = this.constructor;
          return this.then(
          function (value) {return promise.resolve(callback()).then(function () {return value;});},
          function (reason) {return promise.resolve(callback()).then(function () {
              throw reason;
            });});

        };
      }
    })));
  };
}

var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;

function checkDeviceWidth() {var _wx$getSystemInfoSync =




  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}

function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }

  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      return 1;
    } else {
      return 0.5;
    }
  }
  return number < 0 ? -result : result;
}

var interceptors = {
  promiseInterceptor: promiseInterceptor };




var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  interceptors: interceptors,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor });


var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(
      function (item, index) {return index < currentIndex ? item !== urls[currentIndex] : true;});

    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false };

  } };


var protocols = {
  previewImage: previewImage };

var todos = [
'vibrate'];

var canIUses = [];

var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];

function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}

function processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {// 不支持的参数
          console.warn("\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F ".concat(methodName, "\u6682\u4E0D\u652F\u6301").concat(key));
        } else if (isStr(keyOption)) {// 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}

function processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {// 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}

function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {// 暂不支持的 api
      return function () {
        console.error("\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F \u6682\u4E0D\u652F\u6301".concat(methodName));
      };
    }
    return function (arg1, arg2) {// 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }

      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);

      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      var returnValue = wx[options.name || methodName].apply(wx, args);
      if (isSyncApi(methodName)) {// 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}

var todoApis = Object.create(null);

var TODOS = [
'onTabBarMidButtonTap',
'subscribePush',
'unsubscribePush',
'onPush',
'offPush',
'share'];


function createTodoApi(name) {
  return function todoApi(_ref)


  {var fail = _ref.fail,complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail:\u6682\u4E0D\u652F\u6301 ").concat(name, " \u65B9\u6CD5") };

    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}

TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});

var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin'] };


function getProvider(_ref2)




{var service = _ref2.service,success = _ref2.success,fail = _ref2.fail,complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service] };

    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail:服务[' + service + ']不存在' };

    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}

var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider });


var getEmitter = function () {
  if (typeof getUniEmitter === 'function') {
    /* eslint-disable no-undef */
    return getUniEmitter;
  }
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();

function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}

function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}

var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit });




var api = /*#__PURE__*/Object.freeze({
  __proto__: null });


var MPPage = Page;
var MPComponent = Component;

var customizeRE = /:/g;

var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});

function initTriggerEvent(mpInstance) {
  {
    if (!wx.canIUse('nextTick')) {
      return;
    }
  }
  var oldTriggerEvent = mpInstance.triggerEvent;
  mpInstance.triggerEvent = function (event) {for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {args[_key3 - 1] = arguments[_key3];}
    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));
  };
}

function initHook(name, options) {
  var oldHook = options[name];
  if (!oldHook) {
    options[name] = function () {
      initTriggerEvent(this);
    };
  } else {
    options[name] = function () {
      initTriggerEvent(this);for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}
      return oldHook.apply(this, args);
    };
  }
}

Page = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  initHook('onLoad', options);
  return MPPage(options);
};

Component = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  initHook('created', options);
  return MPComponent(options);
};

var PAGE_EVENT_HOOKS = [
'onPullDownRefresh',
'onReachBottom',
'onShareAppMessage',
'onPageScroll',
'onResize',
'onTabItemTap'];


function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}

function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }

  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }

  vueOptions = vueOptions.default || vueOptions;

  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super &&
    vueOptions.super.options &&
    Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }

  if (isFn(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});
  }
}

function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}

function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
    vueOptions = VueComponent.extendOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  return [VueComponent, vueOptions];
}

function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}

function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;

  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}

function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};

  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }

  if (!isPlainObject(data)) {
    data = {};
  }

  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });

  return data;
}

var PROP_TYPES = [String, Number, Boolean, Object, Array, null];

function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions['behaviors'];
  var vueExtends = vueOptions['extends'];
  var vueMixins = vueOptions['mixins'];

  var vueProps = vueOptions['props'];

  if (!vueProps) {
    vueOptions['props'] = vueProps = [];
  }

  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps['name'] = {
            type: String,
            default: '' };

          vueProps['value'] = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: '' };

        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(
    initBehavior({
      properties: initProperties(vueExtends.props, true) }));


  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(
        initBehavior({
          properties: initProperties(vueMixin.props, true) }));


      }
    });
  }
  return behaviors;
}

function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}

function initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: '' };

    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots });

      } };

  }
  if (Array.isArray(props)) {// ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key) };

    });
  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {// title:{type:String,default:''}
        var value = opts['default'];
        if (isFn(value)) {
          value = value();
        }

        opts.type = parsePropType(key, opts.type);

        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key) };

      } else {// content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key) };

      }
    });
  }
  return properties;
}

function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}

  event.stopPropagation = noop;
  event.preventDefault = noop;

  event.target = event.target || {};

  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }

  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }

  return event;
}

function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];

      var vFor = dataPath ? vm.__get_value(dataPath, context) : context;

      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }

      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}

function processEventExtra(vm, extra, event) {
  var extraObj = {};

  if (Array.isArray(extra) && extra.length) {
    /**
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *'test'
                                              */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {// model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {// $event
            extraObj['$' + index] = event;
          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }

  return extraObj;
}

function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}

function processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象
  if (isCustom) {// 自定义事件
    isCustomMPEvent = event.currentTarget &&
    event.currentTarget.dataset &&
    event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {// 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return event.detail.__args__ || event.detail;
    }
  }

  var extraObj = processEventExtra(vm, extra, event);

  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {// input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(event.detail.__args__[0]);
        } else {// wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });

  return ret;
}

var ONCE = '~';
var CUSTOM = '^';

function isMatchEventType(eventType, optType) {
  return eventType === optType ||

  optType === 'regionchange' && (

  eventType === 'begin' ||
  eventType === 'end');


}

function handleEvent(event) {var _this = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn("\u4E8B\u4EF6\u4FE1\u606F\u4E0D\u5B58\u5728");
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn("\u4E8B\u4EF6\u4FE1\u606F\u4E0D\u5B58\u5728");
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;

  var ret = [];

  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];

    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;

    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this.$vm;
          if (
          handlerCtx.$options.generic &&
          handlerCtx.$parent &&
          handlerCtx.$parent.$parent)
          {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = handlerCtx.$parent.$parent;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx,
            processEventArgs(
            _this.$vm,
            event,
            eventArray[1],
            eventArray[2],
            isCustom,
            methodName));

            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            throw new Error(" _vm.".concat(methodName, " is not a function"));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          ret.push(handler.apply(handlerCtx, processEventArgs(
          _this.$vm,
          event,
          eventArray[1],
          eventArray[2],
          isCustom,
          methodName)));

        }
      });
    }
  });

  if (
  eventType === 'input' &&
  ret.length === 1 &&
  typeof ret[0] !== 'undefined')
  {
    return ret[0];
  }
}

var hooks = [
'onShow',
'onHide',
'onError',
'onPageNotFound'];


function parseBaseApp(vm, _ref3)


{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }

  _vue.default.prototype.mpHost = "mp-weixin";

  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }

      this.mpType = this.$options.mpType;

      this.$mp = _defineProperty({
        data: {} },
      this.mpType, this.$options.mpInstance);


      this.$scope = this.$options.mpInstance;

      delete this.$options.mpType;
      delete this.$options.mpInstance;

      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    } });


  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (!wx.canIUse('nextTick')) {// 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }

      this.$vm = vm;

      this.$vm.$mp = {
        app: this };


      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;

      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);

      this.$vm.__call_hook('onLaunch', args);
    } };


  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }

  initHooks(appOptions, hooks);

  return appOptions;
}

var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];

function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}

function initBehavior(options) {
  return Behavior(options);
}

function isPage() {
  return !!this.route;
}

function initRelation(detail) {
  this.triggerEvent('__l', detail);
}

function initRefs(vm) {
  var mpInstance = vm.$scope;
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      var components = mpInstance.selectAllComponents('.vue-ref');
      components.forEach(function (component) {
        var ref = component.dataset.ref;
        $refs[ref] = component.$vm || component;
      });
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || component);
      });
      return $refs;
    } });

}

function handleLink(event) {var _ref4 =



  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;

  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }

  if (!parentVm) {
    parentVm = this.$vm;
  }

  vueOptions.parent = parentVm;
}

function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs });

}

function createApp(vm) {
  App(parseApp(vm));
  return vm;
}

function parseBaseComponent(vueComponentOptions)


{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =
  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];

  var options = {
    multipleSlots: true,
    addGlobalClass: true };


  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin']['options']) {
      Object.assign(options, vueOptions['mp-weixin']['options']);
    }
  }

  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;

        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties };


        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options });


        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm.$destroy();
      } },

    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      } },

    methods: {
      __l: handleLink,
      __e: handleEvent } };



  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }

  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}

function parseComponent(vueComponentOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

var hooks$1 = [
'onShow',
'onHide',
'onUnload'];


hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);

function parseBasePage(vuePageOptions, _ref6)


{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;
  var pageOptions = parseComponent(vuePageOptions);

  initHooks(pageOptions.methods, hooks$1, vuePageOptions);

  pageOptions.methods.onLoad = function (args) {
    this.$vm.$mp.query = args; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', args);
  };

  return pageOptions;
}

function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}

function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}

todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});

canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :
  canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});

var uni = {};

if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (target[name]) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {
        return;
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    } });

} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });

  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
  }

  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });

  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });

  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}

wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;

var uni$1 = uni;var _default =

uni$1;exports.default = _default;

/***/ }),

/***/ 12:
/*!************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/UserInfoModel.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.UserInfoModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ./DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

// 包含me，userInfo: {}, telephone, me: {userId, openId}, accid, clientKey
var UserInfoModel = /*#__PURE__*/function (_DefaultModel) {_inherits(UserInfoModel, _DefaultModel);
  function UserInfoModel() {_classCallCheck(this, UserInfoModel);return _possibleConstructorReturn(this, _getPrototypeOf(UserInfoModel).call(this));

  }_createClass(UserInfoModel, [{ key: "getKey", value: function getKey()

    {
      return "UserInfoModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return UserInfoModel;}(_DefaultModel2.DefaultModel);exports.UserInfoModel = UserInfoModel;

/***/ }),

/***/ 13:
/*!***********************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/DefaultModel.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.DefaultModel = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var ModelMap = /*#__PURE__*/function () {function ModelMap() {_classCallCheck(this, ModelMap);}_createClass(ModelMap, null, [{ key: "setMap", value: function setMap(


    key, val) {
      this.map.set(key, val);
    } }, { key: "getMap", value: function getMap(

    key) {
      if (!this.map.has(key)) return null;

      return this.map.get(key);
    } }]);return ModelMap;}();_defineProperty(ModelMap, "map", new Map());var


DefaultModel = /*#__PURE__*/function () {

  // 是否是保存到本地

  function DefaultModel() {_classCallCheck(this, DefaultModel);_defineProperty(this, "key", "");_defineProperty(this, "isLocal", false);
    this.key = this.getKey();
    this.isLocal = this.getIsLocal();
  }_createClass(DefaultModel, [{ key: "setModel", value: function setModel(

    val, id) {
      var Obj = ModelMap.getMap(this.key) || {};
      if (this.isLocal) {





        Obj = uni.getStorageSync(this.key) || {};

      }
      if (id !== undefined) {
        Obj[id] = val;
      } else {
        Obj = val;
      }
      if (this.isLocal) {







        uni.setStorageSync(this.key, Obj);

      }
      ModelMap.setMap(this.key, Obj);
    } }, { key: "getModel", value: function getModel(

    id) {
      var obj = {};





      obj = uni.getStorageSync(this.key) || {};

      if (!this.isLocal) {
        obj = ModelMap.getMap(this.key) || {};
      }
      var val = obj[id] || null;
      if (id === undefined) {
        val = Object.keys(obj).length > 0 ? obj : null;
      }
      return val;
    } }, { key: "removeModel", value: function removeModel()

    {var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      if (key) {







        uni.removeStorageSync(key);

        return;
      }

      if (this.isLocal) {







        uni.removeStorageSync(this.key);

      }
    } }, { key: "clearModel", value: function clearModel()

    {
      uni.clearStorageSync();
    } }, { key: "getKey", value: function getKey()

    {
      return "";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return false;
    } }]);return DefaultModel;}();exports.DefaultModel = DefaultModel;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 14:
/*!***********************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/RedirectPage.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.RedirectPage = void 0;


var _common = __webpack_require__(/*! ./common */ 15);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var

RedirectPage = /*#__PURE__*/function () {



  function RedirectPage() {var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};_classCallCheck(this, RedirectPage);_defineProperty(this, "path", "");_defineProperty(this, "query", {});
    this.path = path;
    this.query = query;
  }

  // path映射
  _createClass(RedirectPage, [{ key: "redirectToPathMap", value: function redirectToPathMap() {
      var map = new Map()
      // B端分享
      .set("packageTool/pages/buildBook/buildBook", "pagesHouse/buildBook/buildBook") // 新盘楼书
      .set("pages/personalStore/personalStore", "pagesStore/personalStore/personalStore") // 个人微店
      .set("pages/houseDetail/houseDetail", "pagesHouse/erHouseDetail/erHouseDetail") // 二手房详情/租房详情
      .set("pages/im/im", "pagesTool/messageDetail/messageDetail") //  掌通分享优惠券
      .set("packageShare/pages/takeLook/takeLook", "pagesShare/takeLook/takeLook") // 带看
      .set("packageShare/pages/aboutLook/aboutLook", "pagesShare/aboutLook/aboutLook") // 约看

      // 以下是C端老的分享
      .set("pages/real_index/index", "pages/index/index") // 首页
      .set("pages/news/news", "pages/message/message") // 消息
      .set("pages/mine/mine", "pages/me/me") // 我的
      .set("pages/search/search", "pagesHouse/search/search") // 搜索
      .set("pages/chooseCity/chooseCity", "pages/chooseCity/chooseCity") // 选择城市
      .set("pages/list/list", "pagesHouse/erHouseList/erHouseList") // 二手房列表
      .set("pages/newHouseList/newHouseList", "pagesHouse/newHouseList/newHouseList") // 新房列表
      .set("pages/apartmentList/list", "pagesHouse/apartmentList/apartmentList") // 公寓列表
      .set("pages/leaseList/leaseList", "pagesHouse/leaseList/leaseList") // 租房列表
      .set("pages/newHouseDetail/newHouseDetail", "pagesHouse/newHouseDetail/newHouseDetail") // 新房详情
      .set("pages/apartmentDetail/apartmentDetail", "pagesHouse/apartmentDetail/apartmentDetail") // 公寓详情
      .set("packageTool/pages/map/map", "pagesHouse/nearInfoMap/nearInfoMap") // 周边地图
      .set("packageTool/pages/findHouseByMap/findHouseByMap", "pagesTool/mapFindHouse/mapFindHouse") // 地图找房
      .set("pages/entrust/entrust", "pagesEntrust/entrust/entrust") // 发布委托
      .set("pages/trustList/trustList", "pagesEntrust/trustList/trustList") // 委托列表
      .set("pages/entrustDetail/entrustDetail", "pagesEntrust/entrustDetail/entrustDetail") // 委托详情
      .set("pages/track/track", "pagesEntrust/entrustTrack/entrustTrack") // 委托跟进
      .set("pages/findHouse/findHouse", "pagesEntrust/privilegeFindHouse/privilegeFindHouse") // 特权找房
      .set("pages/trendOne/trendOne", "pagesTool/housePriceEvaluate/housePriceEvaluate") // 房价评估
      .set("pages/im/im", "pagesTool/messageDetail/messageDetail") // IM详情
      .set("packageTool/pages/collect/collect", "pagesHouse/collection/collection") // 收藏
      .set("pages/myAccount/myAccount", "pagesTool/wallet/wallet"); // 我的钱包

      if (!map.has(this.path)) {
        return null;
      }

      return map.get(this.path);
    }

    // 参数key名的映射
  }, { key: "paramsKeyMap", value: function paramsKeyMap() {
      // 需要特殊处理的可以在这配置对应的字段
      var map = {
        "pages/personalStore/personalStore": {
          "scene": "archiveId" },

        "pages/houseDetail/houseDetail": {
          "cityid": "cityId",
          "casetype": "caseType",
          "resource": "resource",
          "caseid": "caseId",
          "archive_id": "archiveId",
          "source": "pageFrom" },

        "pages/im/im": {
          "couponId": "couponId",
          "shareArchiveId": "messageId",
          "from": "accid",
          "to": "messageId" },

        "pages/search/search": {
          "fromindex": "nullKey" },

        "pages/leaseList/leaseList": {
          "caseType": "caseType" },

        "pages/newHouseDetail/newHouseDetail": {
          "cityid": "cityId",
          "buildid": "buildId" },

        "pages/apartmentDetail/apartmentDetail": {
          "apartmentUuid": "apartmentUuid",
          "roomUuid": "roomUuid",
          "rentType": "rentType" },

        "packageTool/pages/map/map": {
          "lat": "lat",
          "long": "lng",
          "buildname": "name" },

        "pages/entrust/entrust": {
          "casetype": "casetype",
          "caseType": "casetype" },

        "pages/entrustDetail/entrustDetail": {
          "pushLogId": "entrustId" },

        "pages/track/track": {
          "cityId": "cityId",
          "caseType": "caseType",
          "vipCaseId": "caseId" } };



      if (map[this.path]) {
        return map[this.path];
      }

      return {};
    } }, { key: "init", value: function init()

    {
      var newPath = this.redirectToPathMap(this.path);

      if (!newPath) {
        wx.showModal({
          title: '页面不存在',
          content: '页面不存在，是否跳转到首页？',
          confirmColor: '#5ab38e',
          success: function success(res) {
            if (res.confirm) {
              uni.switchTab({
                url: new _common.LoginApp().getEnterPage() });

            }
          } });

        return;
      }

      var params = "";
      var index = 0;
      var keyMap = this.paramsKeyMap();
      for (var key in this.query) {
        if (index > 0) {
          params += "&";
        }
        // 对key进行重定义
        params += (keyMap[key] ? keyMap[key] : key) + "=" + this.query[key];
        index++;
      }
      var url = "/" + newPath;

      if (params) {
        url += "?" + params;
      }
      var switchTabArr = [
      "pages/real_index/index",
      "pages/news/news",
      "pages/mine/mine"];

      if (switchTabArr.includes(this.path)) {
        uni.switchTab({
          url: url });

        return;
      }

      uni.reLaunch({ url: url });
    } }]);return RedirectPage;}();exports.RedirectPage = RedirectPage;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 15:
/*!*****************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/common.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.formatTimeNew = formatTimeNew;exports.DealUserInfoFromLogin = exports.compare = exports.formatDate = exports.LoginApp = exports.CheckUserStatus = void 0;

var _UserInfoModel = __webpack_require__(/*! ../model/UserInfoModel */ 12);
var _config = __webpack_require__(/*! ../config/config */ 16);
var _Const = __webpack_require__(/*! ./Const */ 17);
var _LoginSuccessModel = __webpack_require__(/*! ../model/LoginSuccessModel */ 18);
var _Notify = __webpack_require__(/*! ./Notify */ 19);
var _Notification = __webpack_require__(/*! ./Notification */ 20);
var _ImChart = __webpack_require__(/*! ./ImChart */ 21);
var _ChatListModel = __webpack_require__(/*! ../model/im/ChatListModel */ 38);
var _SetNet = __webpack_require__(/*! ../net/SetNet */ 41);
var _RequestApi = __webpack_require__(/*! ./RequestApi */ 26);
var _MsgNet = __webpack_require__(/*! ../net/MsgNet */ 42);
var _InitBaseInfo = __webpack_require__(/*! ./InitBaseInfo */ 43);
var _CustomerNet = __webpack_require__(/*! ../net/CustomerNet */ 46);
var _CommonNet = __webpack_require__(/*! ../net/CommonNet */ 44);function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}

// 检测是否已登录
var CheckUserStatus = /*#__PURE__*/function () {function CheckUserStatus() {_classCallCheck(this, CheckUserStatus);}_createClass(CheckUserStatus, null, [{ key: "isLogin", value: function isLogin()
    {var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "reLaunch";
      var clientKey = new _UserInfoModel.UserInfoModel().getModel("clientKey") || "";
      if (!clientKey && !_RequestApi.RequestTimeOut.isInLoginPage) {
        _RequestApi.RequestTimeOut.isTokenError = true;
        uni[type]({
          url: "/pagesSet/login/login" });

        return false;
      }

      return true;
    } }]);return CheckUserStatus;}();


// 登录
exports.CheckUserStatus = CheckUserStatus;var LoginApp = /*#__PURE__*/function () {function LoginApp() {_classCallCheck(this, LoginApp);}_createClass(LoginApp, [{ key: "send", value: function send(
    tel, passWord) {var _this = this;var autoLogin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var responseVal = null;
      return new _SetNet.LoginAppJava({ account: tel, passWord: passWord, deviceType: 1 }).send().
      then(function (res) {
        if (res.errCode !== _Const.Const.success) {
          return Promise.reject(res);
        }

        _RequestApi.RequestTimeOut.isTokenError = false;
        var data = res.data || {};
        _LoginSuccessModel.SetLoginModel.setBuildId(data.buildId || "0");
        _LoginSuccessModel.SetLoginModel.setBuildName(data.buildName || "");
        _LoginSuccessModel.SetLoginModel.setBuildStatus(data.buildStatus === undefined ? "" : data.buildStatus);
        _LoginSuccessModel.SetLoginModel.setClientKey(data.clientKey || "");
        _LoginSuccessModel.SetLoginModel.setCompleteMobileConfig(data.completeMobileConfig === undefined ? "" : data.completeMobileConfig);
        _LoginSuccessModel.SetLoginModel.setDistractionFree(data.distractionFree === undefined ? "" : data.distractionFree);
        _LoginSuccessModel.SetLoginModel.setPanoramaDemo(data.panoramaDemo === undefined ? "" : data.panoramaDemo);
        _LoginSuccessModel.SetLoginModel.setPayPwd(data.payPwd === undefined ? "" : data.payPwd);
        _LoginSuccessModel.SetLoginModel.setStatisticsUrl(data.statisticsUrl || "");
        _LoginSuccessModel.SetLoginModel.setSystemFlag(data.systemFlag === undefined ? "" : data.systemFlag);
        _LoginSuccessModel.SetLoginModel.setTariff(data.tariff || "");
        _LoginSuccessModel.SetLoginModel.setUserId(data.userId || "");
        _LoginSuccessModel.SetLoginModel.setUserJurisdiction(data.userJurisdiction || "");
        _LoginSuccessModel.SetLoginModel.setUserName(data.userName || "");
        _LoginSuccessModel.SetLoginModel.setUserPhoto(data.userPhoto || "");
        _LoginSuccessModel.SetLoginModel.setUserPosition(data.userPosition || "");
        _LoginSuccessModel.SetLoginModel.setYunXinToken(data.yunXinToken || "");
        _LoginSuccessModel.SetLoginModel.setAutoLogin(autoLogin);
        _LoginSuccessModel.SetLoginModel.setTelephone(tel);
        _LoginSuccessModel.SetLoginModel.setPassword(passWord);
        _ImChart.ImChart.token = "";
        var me = new _UserInfoModel.UserInfoModel().getModel("me") || {};
        me.userId = data.userId || "";
        new _UserInfoModel.UserInfoModel().setModel(me, "me");
        new _UserInfoModel.UserInfoModel().setModel(data.clientKey || "", "clientKey");
        _ImChart.ImChart.initConfig();
        _this.upContractList().then(function (res) {
          new _ChatListModel.DealChartListModel().sendMsgListNc();
        });
        responseVal = res;
        new _InitBaseInfo.InitBaseInfo().init();
        return new _SetNet.GetSetting().send();
      }).
      then(function (res) {
        _LoginSuccessModel.SetLoginModel.setAccountSource(1);
        if (res.errCode === _Const.Const.success) {
          _LoginSuccessModel.SetLoginModel.setAccountSource(2);
          _LoginSuccessModel.SetLoginModel.setUserJurisdiction("1 2 3 4 5");
          // 开发商同同步个人信息
          new _SetNet.PersonalCenter().send().
          then(function (res) {
            if (res.errCode === _Const.Const.success) {
              var data = res.data || {};
              _LoginSuccessModel.SetLoginModel.setCompAddress(data.compAddr || "");
              _LoginSuccessModel.SetLoginModel.setCompName(data.compName || "");
              _LoginSuccessModel.SetLoginModel.setCityName(data.cityName || "");
              new _Notification.Notification().postNotification(_Notify.Notify.PersonalInfoChange.Name);
            }
          });
        }
        if (res.errCode === 500) {
          _LoginSuccessModel.SetLoginModel.setAccountSource(1);
        }
        new _Notification.Notification().postNotification(_Notify.Notify.LoginSuccessChange.Name);
        return responseVal;
      });
    } }, { key: "autoLogin", value: function autoLogin()

    {
      if (!_LoginSuccessModel.GetLoginModel.getAutoLogin()) {
        return Promise.resolve(false);
      }

      if (!_LoginSuccessModel.GetLoginModel.getPassword() || !_LoginSuccessModel.GetLoginModel.getTelephone()) return Promise.resolve(false);

      return this.send(_LoginSuccessModel.GetLoginModel.getTelephone(), _LoginSuccessModel.GetLoginModel.getPassword(), _LoginSuccessModel.GetLoginModel.getAutoLogin());
    } }, { key: "upContractList", value: function upContractList()

    {var request = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};var
      ContractListItem = function ContractListItem() {_classCallCheck(this, ContractListItem);_defineProperty(this, "avatar",
        "");_defineProperty(this, "consultantId",
        "");_defineProperty(this, "consultantImId",
        "");_defineProperty(this, "consultantMobile",
        "");_defineProperty(this, "consultantName",
        "");_defineProperty(this, "firstLetter",
        "");_defineProperty(this, "firstName",
        "");} // 名字的第一个字
      ;
      new _LoginSuccessModel.ConsultantListModel().removeModel();

      // 开发商端
      if (_LoginSuccessModel.GetLoginModel.getAccountSource() == 2) {
        return new _MsgNet.GetAllUserList().send().
        then(function (res) {
          if (res.errCode !== _Const.Const.success) {
            return Promise.reject(res);
          }

          var userList = res.data ? res.data.userList || [] : [];
          var contractMap = new _LoginSuccessModel.ConsultantListModel().getModel() || {},list = [];var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {
            for (var _iterator = userList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var info = _step.value;
              if (info.userId == _LoginSuccessModel.GetLoginModel.getUserId()) continue;

              var item = new ContractListItem();
              item.avatar = info.userPhoto || _Const.Const.imDefaultHeadImg;
              item.consultantId = info.userId || "";
              item.consultantImId = info.userId ? "ld_" + info.userId : "";
              item.consultantMobile = info.userMobile || "";
              item.consultantName = info.userName || "";
              contractMap[item.consultantImId] = item;

              item.backCommssionCount = info.backCommssionCount || 0;
              item.custNum = info.custNum || 0;
              item.dealCount = info.dealCount || 0;
              item.seeCount = info.seeCount || 0;
              item.userJurisdiction = info.userJurisdiction || "";
              list.push(item);
            }} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return != null) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}
          return {
            data: {
              consultantList: list },

            errCode: _Const.Const.success,
            errMsg: res.errMsg || "",
            serverTime: res.serverTime || "",
            status: res.status || "" };

        });
      }

      // 置业顾问端
      this.getBrokeList();
      return new _MsgNet.GetConsultantList(request).send().
      then(function (res) {
        if (res.errCode !== _Const.Const.success) {
          return Promise.reject(res);
        }

        var consultantList = res.data ? res.data.consultantList || [] : [];
        var contractMap = new _LoginSuccessModel.ConsultantListModel().getModel() || {};var _iteratorNormalCompletion2 = true;var _didIteratorError2 = false;var _iteratorError2 = undefined;try {
          for (var _iterator2 = consultantList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {var info = _step2.value;
            var item = new ContractListItem();
            item.avatar = info.avatar || "";
            item.consultantId = info.consultantId || "";
            item.consultantImId = info.consultantImId || "";
            item.consultantMobile = info.consultantMobile || "";
            item.consultantName = info.consultantName || "";
            item.firstLetter = info.firstLetter || "";
            item.firstName = info.consultantName ? info.consultantName.substring(0, 1) : "";
            contractMap[item.consultantImId] = item;
          }} catch (err) {_didIteratorError2 = true;_iteratorError2 = err;} finally {try {if (!_iteratorNormalCompletion2 && _iterator2.return != null) {_iterator2.return();}} finally {if (_didIteratorError2) {throw _iteratorError2;}}}
        new _LoginSuccessModel.ConsultantListModel().setModel(contractMap);
        return res;
      });
    }

    // 获取经纪人通讯录 - 置业顾问端
  }, { key: "getBrokeList", value: function getBrokeList() {var pageOffset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;var pageRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;var keyword = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";var
      ContractListItem = function ContractListItem() {_classCallCheck(this, ContractListItem);_defineProperty(this, "avatar",
        "");_defineProperty(this, "consultantId",
        "");_defineProperty(this, "consultantImId",
        "");_defineProperty(this, "consultantMobile",
        "");_defineProperty(this, "consultantName",
        "");_defineProperty(this, "firstLetter",
        "");_defineProperty(this, "firstName",
        "");} // 名字的第一个字
      ;

      return new _CustomerNet.GetBrokerList({
        pageRows: pageRows,
        pageOffset: pageOffset,
        keyword: keyword }).
      send().then(function (res) {
        if (res.errCode !== _Const.Const.success) {
          return Promise.reject(res);
        }

        var list = res.data ? res.data.list || [] : [];
        var contractMap = new _LoginSuccessModel.ConsultantListModel().getModel() || {};var _iteratorNormalCompletion3 = true;var _didIteratorError3 = false;var _iteratorError3 = undefined;try {
          for (var _iterator3 = list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {var info = _step3.value;
            var item = new ContractListItem();
            item.avatar = info.brokerAvatarUrl || "";
            item.consultantId = info.archiveId || "";
            item.consultantImId = info.archiveId || "";
            item.consultantMobile = info.brokerMobile || "";
            item.consultantName = info.brokerName || "";
            contractMap[item.consultantImId] = item;
          }} catch (err) {_didIteratorError3 = true;_iteratorError3 = err;} finally {try {if (!_iteratorNormalCompletion3 && _iterator3.return != null) {_iterator3.return();}} finally {if (_didIteratorError3) {throw _iteratorError3;}}}
        new _LoginSuccessModel.ConsultantListModel().setModel(contractMap);
        return res;
      }).catch(function (res) {
        return res;
      });
    }

    // 获取跳转那个页面
  }, { key: "getEnterPage", value: function getEnterPage() {
      return "/pages/index/index";
    }

    // 动态设置tab
  }, { key: "upSetTab", value: function upSetTab() {
      // 动态设置tab
      if (new _UserInfoModel.UserInfoModel().getModel("clientKey")) {
        uni.setTabBarItem({
          index: 3,
          text: _LoginSuccessModel.GetLoginModel.getAccountSource() == 2 ?
          "楼盘" : "统计",
          iconPath: _LoginSuccessModel.GetLoginModel.getAccountSource() == 2 ?
          "static/images/tabbar/build_default.png" :
          "static/images/tabbar/tj_default.png",
          selectedIconPath: _LoginSuccessModel.GetLoginModel.getAccountSource() == 2 ?
          "static/images/tabbar/build_active.png" :
          "static/images/tabbar/tj_active.png" });

      }
    } }]);return LoginApp;}();


// 格式化时间
exports.LoginApp = LoginApp;var formatDate = /*#__PURE__*/function () {


  function formatDate(now) {_classCallCheck(this, formatDate);_defineProperty(this, "now", "");
    this.now = now;
  }_createClass(formatDate, [{ key: "getYear", value: function getYear()

    {
      return (this.now.getYear() + 1900).toString();
    } }, { key: "getMonth", value: function getMonth()

    {
      var month = this.now.getMonth() + 1;
      return month < 10 ? "0" + month : month.toString();
    } }, { key: "getDay", value: function getDay()

    {
      var date = this.now.getDate();
      return date < 10 ? "0" + date : date.toString();
    } }, { key: "getHour", value: function getHour()

    {
      var hour = this.now.getHours();
      return hour < 10 ? "0" + hour : hour.toString();
    } }, { key: "getMinute", value: function getMinute()

    {
      var minute = this.now.getMinutes();
      return minute < 10 ? "0" + minute : minute.toString();
    } }, { key: "getSecond", value: function getSecond()

    {
      var second = this.now.getSeconds();
      return second < 10 ? "0" + second : second.toString();
    } }, { key: "getBigTime", value: function getBigTime(
    times) {
      var formatTime = times.replace(/-/g, '/');
      var Time = new Date(formatTime);
      var timestamp = Time.getTime();
      var mistiming = Math.round((Date.now() - timestamp) / 1000);
      var arrr = ['年', '月', '周', '天', '小时', '分钟', '秒'];
      var arrn = [31536000, 2592000, 604800, 86400, 3600, 60, 1];
      for (var i = 0; i <= arrn.length; i++) {
        var inm = Math.floor(mistiming / arrn[i]);
        if (inm != 0) {
          return inm + arrr[i] + '前';
        }
      }
    } }, { key: "getTime", value: function getTime()

    {
      return this.getYear() + '-' + this.getMonth() + '-' + this.getDay() + ' ' + this.getHour() + ':' + this.getMinute() + ':' + this.getSecond();
    } }]);return formatDate;}();


// 格式化时间
exports.formatDate = formatDate;function formatNumber(n) {
  n = n.toString();
  return n[1] ? n : '0' + n;
}
function formatTimeNew() {var number = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  var formateArr = ['Y', 'M', 'D', 'h', 'm', 's'];
  var returnArr = [];
  var currentArr = [];

  //当前时间
  var date = new Date();
  var curYear = date.getFullYear();
  var curMonth = formatNumber(date.getMonth() + 1);
  var curDay = formatNumber(date.getDate());
  var curHour = formatNumber(date.getHours());
  var curMin = formatNumber(date.getMinutes());
  var curSec = formatNumber(date.getSeconds());
  //需要格式化的时间
  var targetDate = new Date(number);
  var tarYear = targetDate.getFullYear();
  var tarMonth = formatNumber(targetDate.getMonth() + 1);
  var tarDay = formatNumber(targetDate.getDate());
  var tarHour = formatNumber(targetDate.getHours());
  var tarMin = formatNumber(targetDate.getMinutes());
  var tarSec = formatNumber(targetDate.getSeconds());

  //格式化输出日期
  if (curDay == tarDay && tarHour < 12) {
    return '上午 ' + tarHour + ':' + tarMin;
  }

  if (curDay == tarDay && tarHour >= 12 && tarHour < 18) {
    return '下午 0' + (tarHour - 12) + ':' + tarMin;
  }

  if (curDay == tarDay && tarHour >= 18 && tarHour <= 24) {
    return '晚上 ' + (tarHour - 12 < 10 ? "0" + (tarHour - 12) : tarHour - 12) + ':' + tarMin;
  }

  if (curDay - tarDay == 1) {
    return '昨天 ' + tarHour + ':' + tarMin;
  }

  if (curDay - tarDay == 2) {
    return '前天 ' + tarHour + ':' + tarMin;
  }

  return tarMonth + '月' + tarDay + '日 ' + tarHour + ':' + tarMin;
}

// 比较大小
var compare = /*#__PURE__*/function () {


  function compare(prop) {_classCallCheck(this, compare);_defineProperty(this, "prop", null);_defineProperty(this, "compareBoolean", true);
    this.prop = prop;
  }_createClass(compare, [{ key: "init", value: function init()

    {
      var prop = this.prop;
      var that = this;
      return function (obj_1, obj_2) {
        var val_1 = obj_1[prop] instanceof Array ? obj_1[prop].length : obj_1[prop];
        var val_2 = obj_2[prop] instanceof Array ? obj_2[prop].length : obj_2[prop];
        if (!isNaN(Number(val_1)) && !isNaN(Number(val_2))) {
          val_1 = Number(val_1);
          val_1 = Number(val_1);
        }
        return that.initSuccess(val_1, val_2);
      };
    } }, { key: "initSuccess", value: function initSuccess(

    val_1, val_2) {
      var eventMap = {
        true: 'maxToMinEvent',
        false: 'minToMaxEvent' };


      return this[eventMap[this.compareBoolean]](val_1, val_2);
    } }, { key: "maxToMin", value: function maxToMin()

    {
      this.compareBoolean = true;
      return this.init();
    } }, { key: "minToMax", value: function minToMax()

    {
      this.compareBoolean = false;
      return this.init();
    } }, { key: "maxToMinEvent", value: function maxToMinEvent(

    val_1, val_2) {
      if (val_1 > val_2) return -1;

      if (val_1 < val_2) return 1;

      return 0;
    } }, { key: "minToMaxEvent", value: function minToMaxEvent(

    val_1, val_2) {
      if (val_1 < val_2) return -1;

      if (val_1 > val_2) return 1;

      return 0;
    } }]);return compare;}();


// 更新资料（用于蒙层授权和我的更新）
exports.compare = compare;var DealUserInfoFromLogin = /*#__PURE__*/function () {function DealUserInfoFromLogin() {_classCallCheck(this, DealUserInfoFromLogin);}_createClass(DealUserInfoFromLogin, [{ key: "init", value: function init()
    {var userInfoParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};var needNc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      return new Promise(function (resolve, reject) {

        // new UserInfoModel().setModel(userInfoParams || {}, "userInfo");
        uni.login({
          provider: 'weixin',
          success: function success(loginRes) {
            console.log("--loginRes--", loginRes);
            new _CommonNet.GetOpenIdByCode({ code: loginRes.code, source: "xfldyx" }).
            send().
            then(function (res) {
              if (res.code !== _Const.Const.success) {
                return Promise.reject(res);
              }

              resolve(res.data || "");
            }).
            catch(function (err) {
              reject(err);
            });
          },
          fail: function fail(err) {
            reject(err);
          } });


      });
    } }]);return DealUserInfoFromLogin;}();exports.DealUserInfoFromLogin = DealUserInfoFromLogin;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 16:
/*!******************************************!*\
  !*** D:/小黑项目/yx_uniapp/config/config.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.Config = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var

Config = function Config() {_classCallCheck(this, Config);};exports.Config = Config;_defineProperty(Config, "env",
"pro");_defineProperty(Config, "mask",
true);_defineProperty(Config, "java",
"https://hft.haofang.net");_defineProperty(Config, "kdbJava",
"https://api.kaidanbao.mobi");_defineProperty(Config, "kdb",
"https://zdzf.haofang.net");_defineProperty(Config, "uuweb",
"https://zdzfapi.haofang.net");_defineProperty(Config, "imKey",
"bbfa3e3f827bfb19d81b0197adb91758");_defineProperty(Config, "publicWeb",
"https://public.haofang.net");

/***/ }),

/***/ 17:
/*!****************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/Const.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.ErHouseListItem = exports.HouseListAgentItem = exports.ApartmentHouseListItem = exports.ZuHouseListItem = exports.NewHouseListItem = exports.HouseListItem = exports.Const = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

// caseType = 9 ? 旅居地产(新房)
// caseType = 6 ? 热销新房
// caseType = 2 ? 整租
// caseType = 3 ? 合租
// caseType = 1 ? 二手房
// caseType = 4 ? 新房
// caseType = 5 ? 公寓
// caseType = 7 ? 整租公寓
// caseType = 8 ? 合租公寓
var

Const = /*#__PURE__*/function () {function Const() {_classCallCheck(this, Const);}_createClass(Const, null, [{ key: "getDealCdnImgUrl",
    // 价格 面积 房源登记提示配置




















































































































































    // cdn图片自定义尺寸
    value: function getDealCdnImgUrl() {var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.houseDefaultImg;var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 180;var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 120;
      if (url.indexOf("?x-oss-process=image/resize") >= 0) return url;

      return url + "?x-oss-process=image/resize,m_fill,h_" + height + ",w_" + width;
    }
    // 房源默认图
  }]);return Const;}();exports.Const = Const;_defineProperty(Const, "areaPriceMap", { sale: { HOUSING: { area: { msg: "住宅面积不得低于5平米", minVal: 5 }, price: { msg: "价格不得低于5万元", minVal: 5 } }, VILLA: { area: { msg: "别墅面积不得低于40平米", minVal: 40 }, price: { msg: "价格不得低于5万元", minVal: 5 } }, OFFICE: { area: { msg: "写字楼面积不得低于3平米", minVal: 3 }, price: { msg: "价格不得低于5万元", minVal: 5 } }, MANUFACT: { area: { msg: "厂房面积不得低于10平米", minVal: 10 }, price: { msg: "价格不得低于5万元", minVal: 5 } }, STORE: { area: { msg: "仓库面积不得低于10平米", minVal: 10 }, price: { msg: "价格不得低于5万元", minVal: 5 } }, TRADE: { area: { msg: "商铺面积不得低于3平米", minVal: 3 }, price: { msg: "价格不得低于5万元", minVal: 5 } }, GARAGE: { area: { msg: "车库面积不得低于10平米", minVal: 10 }, price: { msg: "价格不得低于5万元", minVal: 5 } } }, lease: { HOUSING: { area: { msg: "面积不得低于3平米", minVal: 3 }, price: { msg: "价格不得低于0.1元", minVal: 0.1 } }, VILLA: { area: { msg: "面积不得低于3平米", minVal: 3 }, price: { msg: "价格不得低于0.1元", minVal: 0.1 } }, OFFICE: { area: { msg: "面积不得低于3平米", minVal: 3 }, price: { msg: "价格不得低于0.1元", minVal: 0.1 } }, MANUFACT: { area: { msg: "面积不得低于3平米", minVal: 3 }, price: { msg: "价格不得低于0.1元", minVal: 0.1 } }, STORE: { area: { msg: "面积不得低于3平米", minVal: 3 }, price: { msg: "价格不得低于0.1元", minVal: 0.1 } }, TRADE: { area: { msg: "面积不得低于3平米", minVal: 3 }, price: { msg: "价格不得低于0.1元", minVal: 0.1 } }, GARAGE: { area: { msg: "面积不得低于3平米", minVal: 3 }, price: { msg: "价格不得低于0.1元", minVal: 0.1 } } } });_defineProperty(Const, "tokenExpireCode", 400);_defineProperty(Const, "success", 200);_defineProperty(Const, "houseDefaultImg", "http://cdn.haofang.net/static/xfldDeveloper/build/default-house-img.png");_defineProperty(Const, "defaultHeadImg",

"http://cdn.haofang.net/static/xfldDeveloper/msg/default_header.png");_defineProperty(Const, "imDefaultHeadImg",

"http://cdn.haofang.net/static/xfldDeveloper/msg/default_header.png");_defineProperty(Const, "servicePhone",

"400-800-8548");_defineProperty(Const, "erHouse",
"erHouse");_defineProperty(Const, "newHouse",
"newHouse");_defineProperty(Const, "zuHouse",
"zuHouse");_defineProperty(Const, "wxAppOriginalId",

"gh_70add125ef99");_defineProperty(Const, "wxPlatformAppId",

"wx5b9bf6530fec7c52");_defineProperty(Const, "timeList",


[
{ text: '不限', id: '' },
{ text: '一天内', id: '1' },
{ text: '一周内', id: '2' },
{ text: '一月内', id: '3' },
{ text: '一季内', id: '4' }]);_defineProperty(Const, "houseTimeList",



[
{ text: '不限', id: '' },
{ text: '一天内', id: '1' },
{ text: '一周内', id: '2' },
{ text: '一月内', id: '3' },
{ text: '一季内', id: '4' },
{ text: '半年内', id: '5' },
{ text: '一年内', id: '6' }]);_defineProperty(Const, "roomList",



[
{ text: '1室', id: '1' },
{ text: '2室', id: '2' },
{ text: '3室', id: '3' },
{ text: '4室', id: '4' },
{ text: '5室', id: '5' },
{ text: '6室', id: '6' },
{ text: '7室', id: '7' },
{ text: '8室及以上', id: '8' }]);_defineProperty(Const, "sourceLsit",


[
{ text: '业主房源', id: '0' },
{ text: '经纪人', id: '1' }]);_defineProperty(Const, "areaList",


[
{ text: '不限', id: '' },
{ text: '60㎡以下', id: '0:60' },
{ text: '60-90㎡', id: '60:90' },
{ text: '90-120㎡', id: '90:120' },
{ text: '120-150㎡', id: '120:150' },
{ text: '150-180㎡', id: '150:180' },
{ text: '180-240㎡', id: '180:240' },
{ text: '240-320㎡', id: '240:320' },
{ text: '320-600㎡', id: '320:600' },
{ text: '600㎡以上', id: '600:999' }]);_defineProperty(Const, "typeLsit",


[
{ text: '住宅', id: 1 },
{ text: '别墅', id: 2 },
{ text: '商铺', id: 3 },
{ text: '写字楼', id: 4 },
{ text: '其他', id: 8 }]);_defineProperty(Const, "newHouseTypeList",


[
{ text: "不限", id: "" },
{ text: '住宅', id: 1 },
{ text: '别墅', id: 2 },
{ text: '商铺', id: 3 },
{ text: '写字楼', id: 4 },
{ text: "旅游地产", id: 5 }]);_defineProperty(Const, "specialList",



[
{ text: '两证齐全', id: 1 },
{ text: '满两年', id: 2 },
{ text: '免税', id: 3 },
{ text: '急售', id: 4 },
{ text: '顶楼花园', id: 7 },
{ text: '底楼花园', id: 8 },
{ text: '带车位', id: 64 },
{ text: '地下室', id: 96 }]);_defineProperty(Const, "zhuangXiuList",



[
{ id: '2', text: '简装' },
{ id: '3', text: '精装' },
{ id: '6', text: '豪装' },
{ id: '1', text: '毛坯' },
{ id: '7', text: '不限' }]);_defineProperty(Const, "fanWeiList",



[
{ id: '', text: '不限' },
{ id: '1', text: '收藏的房源' },
{ id: '1', text: '已联系的房源' }]);_defineProperty(Const, "aparmentChuZuTypeList",






[
{ text: '不限', id: "" },
{ text: '整租', id: 1 },
{ text: '合租', id: 2 }]);_defineProperty(Const, "aparmentRuZhuTimeList",



[
{ text: '立即入住', id: '1' },
{ text: '一周内', id: '2' },
{ text: '两周内', id: '3' }]);_defineProperty(Const, "apartmentRoomList",



[
{ text: '1室', id: '1:1' },
{ text: '2室', id: '2:2' },
{ text: '3室', id: '3:3' },
{ text: '4室', id: '4:4' },
{ text: '5室', id: '5:5' },
{ text: '5室以上', id: '5:100' }]);_defineProperty(Const, "apartmentAreaList",



[
{ text: '10以下', id: '0:10' },
{ text: '10-30', id: '10:30' },
{ text: '30-50', id: '30:50' },
{ text: '50-70', id: '50:70' },
{ text: '70-90', id: '70:90' },
{ text: '90以上', id: '90:999' }]);_defineProperty(Const, "aparmentSexList",



[
{ text: '全是妹子', id: 2 },
{ text: '全是汉子', id: 1 }]);_defineProperty(Const, "apartmentSpecialList",



[
{ text: '可月付', id: 5 },
{ text: '独卫', id: 1 },
{ text: '飘窗', id: 3 },
{ text: '阳台', id: 2 },
{ text: '空调', id: 4 },
{ text: '厨房', id: 6 }]);_defineProperty(Const, "entrustHouseTypeList",







[
{ id: 1, text: "住宅" },
{ id: 2, text: "别墅" },
{ id: 3, text: "商铺" },
{ id: 4, text: "写字楼" }]);_defineProperty(Const, "entrustZhuangXiuList",


[
{ id: '2', text: '简装' },
{ id: '3', text: '精装' },
{ id: '6', text: '豪装' },
{ id: '1', text: '毛坯' },
{ id: '7', text: '不限' }]);_defineProperty(Const, "entrustRoomList",


[
{ id: '1', text: '一室' },
{ id: '2', text: '二室' },
{ id: '3', text: '三室' },
{ id: '4', text: '四室' },
{ id: '5', text: '五室' },
{ id: '20', text: '五室以上' }]);_defineProperty(Const, "feeMap",



{
  1: [{ fee: '0.01|0.015', name: '1-1.5', unit: '%' }, { fee: '0.015|0.02', name: '1.5-2', unit: '%' }], //求购
  3: [{ fee: '0.01|0.015', name: '1-1.5', unit: '%' }, { fee: '0.015|0.02', name: '1.5-2', unit: '%' }], //求购
  4: [{ fee: '0|0.5', name: '10-15', unit: '天' }, { fee: '0.5|1', name: '15-20', unit: '天' }] //求租
});_defineProperty(Const, "sexMap",


[
{ id: 1, text: "帅哥", headImg: "https://uuweb.haofang.net/PublicC/images/publish/index/sex-man.png" },
{ id: 2, text: "美女", headImg: "https://uuweb.haofang.net/PublicC/images/publish/index/sex-woman.png" }]);_defineProperty(Const, "housePeiTaoMap",



[
{ id: 7, text: "宽带" },
{ id: 13, text: "热水器" },
{ id: 9, text: "洗衣机" },
{ id: 10, text: "冰箱" },
{ id: 21, text: "衣柜" },
{ id: 44, text: "厨房" },
{ id: 11, text: "空调" },
{ id: 27, text: "暖气" }]);_defineProperty(Const, "chuZuRoomTypeList",



[
{ id: 2, text: "次卧" },
{ id: 3, text: "主卧" },
{ id: 4, text: "单间" },
{ id: 1, text: "不限" }]);_defineProperty(Const, "zuJinTypeList",


[
{ id: 1, text: "月付" },
{ id: 2, text: "季付" },
{ id: 3, text: "半年付" },
{ id: 4, text: "年付" },
{ id: 5, text: "面议" }]);_defineProperty(Const, "houseFitmentMap",










[
{ id: '', text: "不限" },
{ id: 1, text: "毛坯" },
{ id: 2, text: "普通" },
{ id: 3, text: "精装" },
{ id: 6, text: "豪装" }]);_defineProperty(Const, "buildTypeObj",


{
  1: { value: '待售', color: '#ffb109', bgColor: 'rgba(255, 177, 9, 0.07)' },
  2: { value: '在售', color: '#0084ff', bgColor: 'rgba(0, 132, 255, 0.07)' },
  3: { value: '售罄', color: '#c0c1c3', bgColor: 'rgba(163, 165, 168, 0.07)' },
  4: { value: '招商', color: '#fa5741', bgColor: 'rgba(250, 87, 65, 0.07)' },
  5: { value: '招租', color: '#44bc6e', bgColor: 'rgba(68, 188, 110, 0.07)' } });_defineProperty(Const, "distributionTypeIds",


{
  1: '全明格局',
  2: '主卧带卫',
  3: '户型方正',
  4: '南北通透',
  5: '干湿分离',
  6: '带飘窗',
  7: '观景落地窗',
  8: '多阳台' });_defineProperty(Const, "houseTypeList",



[
{ "text": "多层", "value": "多层" },
{ "text": "电梯", "value": "电梯" },
{ "text": "平房", "value": "平房" },
{ "text": "商住两用", "value": "商住两用" },
{ "text": "写住两用", "value": "写住两用" },
{ "text": "独院", "value": "独院" },
{ "text": "板楼", "value": "板楼" },
{ "text": "塔楼", "value": "塔楼" },
{ "text": "板塔结合", "value": "板塔结合" },
{ "text": "超高层", "value": "超高层" },
{ "text": "高层", "value": "高层" },
{ "text": "小高层", "value": "小高层" },
{ "text": "独栋别墅", "value": "独栋别墅" },
{ "text": "联排别墅", "value": "联排别墅" },
{ "text": "双拼别墅", "value": "双拼别墅" },
{ "text": "叠排别墅", "value": "叠排别墅" },
{ "text": "建筑综合体", "value": "建筑综合体" },
{ "text": "其他", "value": "-" }]);_defineProperty(Const, "unitList",



[
{ "text": "万元", "value": "1" },
{ "text": "元/月", "value": "3" },
{ "text": "元/平方米/月", "value": "4" }]);var



HouseListItem = function HouseListItem() {_classCallCheck(this, HouseListItem);_defineProperty(this, "houseId",
  "");_defineProperty(this, "houseImg",
  "");_defineProperty(this, "houseTitle",
  "");_defineProperty(this, "houseTing",
  "");_defineProperty(this, "houseArea",
  "");_defineProperty(this, "houseAreaUnit",
  "");_defineProperty(this, "houseAddress",
  "");_defineProperty(this, "houseName",
  "");_defineProperty(this, "houseTags",
  []);_defineProperty(this, "houseTotalPrice",
  "");_defineProperty(this, "houseTotalPriceUnit",
  "");_defineProperty(this, "housePriceOfArea",
  "");_defineProperty(this, "housePriceOfAreaUnit",
  "");_defineProperty(this, "hasVr",
  false);_defineProperty(this, "hasVideo",
  false);_defineProperty(this, "cityId",
  "");_defineProperty(this, "caseType",
  "");_defineProperty(this, "reSource",
  "");_defineProperty(this, "trueHouse",
  false);} // 是否是真房源
;exports.HouseListItem = HouseListItem;var

NewHouseListItem = function NewHouseListItem() {_classCallCheck(this, NewHouseListItem);_defineProperty(this, "buildId",
  "");_defineProperty(this, "buildStatus",
  "");_defineProperty(this, "buildImg",
  "");_defineProperty(this, "buildTing",
  "");_defineProperty(this, "buildArea",
  "");_defineProperty(this, "buildAreaUnit",
  "");_defineProperty(this, "buildAddress",
  "");_defineProperty(this, "buildName",
  "");_defineProperty(this, "buildTags",
  []);_defineProperty(this, "buildPriceOfArea",
  "");_defineProperty(this, "buildPriceOfAreaUnit",
  "元/㎡");_defineProperty(this, "isHotSale",
  false);_defineProperty(this, "cityId",
  "");_defineProperty(this, "caseType",
  "");_defineProperty(this, "buildAreaMin",
  "");_defineProperty(this, "buildAreaMax",
  "");} // 面积最大值
;exports.NewHouseListItem = NewHouseListItem;var

ZuHouseListItem = function ZuHouseListItem() {_classCallCheck(this, ZuHouseListItem);_defineProperty(this, "houseId",
  "");_defineProperty(this, "houseImg",
  "");_defineProperty(this, "houseTitle",
  "");_defineProperty(this, "houseTing",
  "");_defineProperty(this, "houseArea",
  "");_defineProperty(this, "houseAreaUnit",
  "");_defineProperty(this, "houseAddress",
  "");_defineProperty(this, "houseName",
  "");_defineProperty(this, "houseTags",
  []);_defineProperty(this, "housePriceOfMonth",
  "");_defineProperty(this, "housePriceOfMonthUnit",
  "");_defineProperty(this, "hasVr",
  false);_defineProperty(this, "hasVideo",
  false);_defineProperty(this, "cityId",
  "");_defineProperty(this, "caseType",
  "");_defineProperty(this, "reSource",
  "");} // 来源
;exports.ZuHouseListItem = ZuHouseListItem;var

ApartmentHouseListItem = function ApartmentHouseListItem() {_classCallCheck(this, ApartmentHouseListItem);_defineProperty(this, "houseId",
  "");_defineProperty(this, "houseImg",
  "");_defineProperty(this, "houseTing",
  "");_defineProperty(this, "houseAddress",
  "");_defineProperty(this, "houseName",
  "");_defineProperty(this, "houseTags",
  []);_defineProperty(this, "houseResourceText",
  "");_defineProperty(this, "housePriceOfMonth",
  "");_defineProperty(this, "housePriceOfMonthUnit",
  "");_defineProperty(this, "apartmentUuid",
  "");_defineProperty(this, "roomUuid",
  "");_defineProperty(this, "rentType",
  "");_defineProperty(this, "caseType",
  "");_defineProperty(this, "houseSource",
  "");_defineProperty(this, "houseJianText",
  "");} // 房间名称 例如：D房间
;


// 房源列表上经纪人的字段信息
exports.ApartmentHouseListItem = ApartmentHouseListItem;var HouseListAgentItem = function HouseListAgentItem() {_classCallCheck(this, HouseListAgentItem);_defineProperty(this, "zhuangXiuStatusId",
  "");_defineProperty(this, "zhuangXiuStatusName",
  "");_defineProperty(this, "roomId",
  "");_defineProperty(this, "roomName",
  "");_defineProperty(this, "regionId",
  "");_defineProperty(this, "regionName",
  "");_defineProperty(this, "houseTypeId",
  "");_defineProperty(this, "houseTypeName",
  "");_defineProperty(this, "buildId",
  "");_defineProperty(this, "buildName",
  "");_defineProperty(this, "buildAddress",
  "");_defineProperty(this, "agentHeaderImg",
  "");_defineProperty(this, "archiveId",
  "");_defineProperty(this, "agentName",
  "");_defineProperty(this, "agentPhone",
  "");_defineProperty(this, "isExit",
  "");_defineProperty(this, "caseId",
  "");_defineProperty(this, "caseType",
  "");_defineProperty(this, "cityId",
  "");_defineProperty(this, "reSource",
  1);_defineProperty(this, "noBoxShadow",
  false);} // 不显示view 的 box-shadow style
;exports.HouseListAgentItem = HouseListAgentItem;var

ErHouseListItem = function ErHouseListItem() {_classCallCheck(this, ErHouseListItem);_defineProperty(this, "compId",
  "");_defineProperty(this, "isTopHouse",
  false);_defineProperty(this, "houseId",
  "");_defineProperty(this, "buildId",
  "");_defineProperty(this, "houseImg",
  "");_defineProperty(this, "houseTitle",
  "");_defineProperty(this, "shareTitle",
  "");_defineProperty(this, "houseTing",
  "");_defineProperty(this, "houseRoom",
  "");_defineProperty(this, "houseHall",
  "");_defineProperty(this, "houseWei",
  "");_defineProperty(this, "houseArea",
  "");_defineProperty(this, "houseAreaUnit",
  "m²");_defineProperty(this, "houseAddress",
  "");_defineProperty(this, "houseName",
  "");_defineProperty(this, "houseTags",
  []);_defineProperty(this, "houseTotalPrice",
  "");_defineProperty(this, "houseTotalPriceUnit",
  "");_defineProperty(this, "housePriceOfArea",
  "");_defineProperty(this, "housePriceOfAreaUnit",
  "");_defineProperty(this, "hasVr",
  false);_defineProperty(this, "hasVideo",
  false);_defineProperty(this, "cityId",
  "");_defineProperty(this, "caseType",
  "");_defineProperty(this, "reSource",
  "");_defineProperty(this, "trueHouse",
  false);_defineProperty(this, "isShowBrowseNum",

  "");_defineProperty(this, "houseUseage",

  "");_defineProperty(this, "houseUseageCn",
  "");_defineProperty(this, "regionName",

  "");_defineProperty(this, "sectionName",
  "");_defineProperty(this, "pageFrom",

  "");_defineProperty(this, "archiveId",
  "");} // 经纪人id
;exports.ErHouseListItem = ErHouseListItem;

/***/ }),

/***/ 18:
/*!****************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/LoginSuccessModel.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.ConsultantListModel = exports.GetLoginModel = exports.SetLoginModel = exports.LoginSuccessModel = void 0;

var _DefaultModel3 = __webpack_require__(/*! ./DefaultModel */ 13);
var _UserInfoModel = __webpack_require__(/*! ./UserInfoModel */ 12);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var

LoginSuccessModel = /*#__PURE__*/function (_DefaultModel) {_inherits(LoginSuccessModel, _DefaultModel);
  function LoginSuccessModel() {_classCallCheck(this, LoginSuccessModel);return _possibleConstructorReturn(this, _getPrototypeOf(LoginSuccessModel).call(this));

  }_createClass(LoginSuccessModel, [{ key: "getKey", value: function getKey()

    {
      return "LoginSuccessModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return LoginSuccessModel;}(_DefaultModel3.DefaultModel);


// 更新登录成功相关信息
exports.LoginSuccessModel = LoginSuccessModel;var SetLoginModel = /*#__PURE__*/function () {function SetLoginModel() {_classCallCheck(this, SetLoginModel);}_createClass(SetLoginModel, null, [{ key: "setBuildId",
    // 设置楼盘id
    value: function setBuildId(buildId) {
      var item = new LoginSuccessModel().getModel() || {};
      item.buildId = buildId;
      new LoginSuccessModel().setModel(item);
    }

    // 设置楼盘name
  }, { key: "setBuildName", value: function setBuildName(buildName) {
      var item = new LoginSuccessModel().getModel() || {};
      item.buildName = buildName;
      new LoginSuccessModel().setModel(item);
    }

    // 设置buildStatus
  }, { key: "setBuildStatus", value: function setBuildStatus(buildStatus) {
      var item = new LoginSuccessModel().getModel() || {};
      item.buildStatus = buildStatus;
      new LoginSuccessModel().setModel(item);
    }

    // 设置clientKey
  }, { key: "setClientKey", value: function setClientKey(clientKey) {
      new _UserInfoModel.UserInfoModel().setModel(clientKey, "clientKey");
    }

    // 设置completeMobileConfig
  }, { key: "setCompleteMobileConfig", value: function setCompleteMobileConfig(completeMobileConfig) {
      var item = new LoginSuccessModel().getModel() || {};
      item.completeMobileConfig = completeMobileConfig;
      new LoginSuccessModel().setModel(item);
    }

    // 设置distractionFree
  }, { key: "setDistractionFree", value: function setDistractionFree(distractionFree) {
      var item = new LoginSuccessModel().getModel() || {};
      item.distractionFree = distractionFree;
      new LoginSuccessModel().setModel(item);
    }

    // 设置panoramaDemo
  }, { key: "setPanoramaDemo", value: function setPanoramaDemo(panoramaDemo) {
      var item = new LoginSuccessModel().getModel() || {};
      item.panoramaDemo = panoramaDemo;
      new LoginSuccessModel().setModel(item);
    }

    // 设置payPwd
  }, { key: "setPayPwd", value: function setPayPwd(payPwd) {
      var item = new LoginSuccessModel().getModel() || {};
      item.payPwd = payPwd;
      new LoginSuccessModel().setModel(item);
    }

    // 设置statisticsUrl
  }, { key: "setStatisticsUrl", value: function setStatisticsUrl(statisticsUrl) {
      var item = new LoginSuccessModel().getModel() || {};
      item.statisticsUrl = statisticsUrl;
      new LoginSuccessModel().setModel(item);
    }

    // 设置systemFlag
  }, { key: "setSystemFlag", value: function setSystemFlag(systemFlag) {
      var item = new LoginSuccessModel().getModel() || {};
      item.systemFlag = systemFlag;
      new LoginSuccessModel().setModel(item);
    }

    // 设置tariff=0.08
  }, { key: "setTariff", value: function setTariff(tariff) {
      var item = new LoginSuccessModel().getModel() || {};
      item.tariff = tariff;
      new LoginSuccessModel().setModel(item);
    }

    // 设置userId=13713
  }, { key: "setUserId", value: function setUserId(userId) {
      var item = new LoginSuccessModel().getModel() || {};
      item.userId = userId;
      new LoginSuccessModel().setModel(item);
      var me = new _UserInfoModel.UserInfoModel().getModel("me") || {};
      me.userId = userId;
      new _UserInfoModel.UserInfoModel().setModel(me, "me");
      new _UserInfoModel.UserInfoModel().setModel("ld_" + userId, "accid");
    }

    // 设置userJurisdiction=1 2 3 4 5
  }, { key: "setUserJurisdiction", value: function setUserJurisdiction(userJurisdiction) {
      var item = new LoginSuccessModel().getModel() || {};
      item.userJurisdiction = userJurisdiction;
      new LoginSuccessModel().setModel(item);
    }

    // 设置userName=董大
  }, { key: "setUserName", value: function setUserName(userName) {
      var item = new LoginSuccessModel().getModel() || {};
      item.userName = userName;
      new LoginSuccessModel().setModel(item);
    }

    // 设置userPhoto=http://pic.myfun7.com/oss/online/tmp/2019/10/11/db30673e204a44209c851ac711441f0b.jpeg
  }, { key: "setUserPhoto", value: function setUserPhoto(userPhoto) {
      var item = new LoginSuccessModel().getModel() || {};
      item.userPhoto = userPhoto;
      new LoginSuccessModel().setModel(item);
    }

    // 设置userPosition=BIZ_OPER
  }, { key: "setUserPosition", value: function setUserPosition(userPosition) {
      var item = new LoginSuccessModel().getModel() || {};
      item.userPosition = userPosition;
      new LoginSuccessModel().setModel(item);
    }

    // 设置yunXinToken=0a7300db6dde5cb4db861ec95106effc
  }, { key: "setYunXinToken", value: function setYunXinToken(yunXinToken) {
      var item = new LoginSuccessModel().getModel() || {};
      item.yunXinToken = yunXinToken;
      new LoginSuccessModel().setModel(item);
      var me = new _UserInfoModel.UserInfoModel().getModel("me") || {};
      me.token = yunXinToken;
      new _UserInfoModel.UserInfoModel().setModel(me, "me");
    }

    // 设置是否自动登录
  }, { key: "setAutoLogin", value: function setAutoLogin(boolean) {
      var item = new LoginSuccessModel().getModel() || {};
      item.autoLogin = boolean;
      new LoginSuccessModel().setModel(item);
    }

    // 设置电话
  }, { key: "setTelephone", value: function setTelephone(tel) {
      var item = new LoginSuccessModel().getModel() || {};
      item.telephone = tel;
      new LoginSuccessModel().setModel(item);
    }

    // 设置密码
  }, { key: "setPassword", value: function setPassword(password) {
      var item = new LoginSuccessModel().getModel() || {};
      item.password = password;
      new LoginSuccessModel().setModel(item);
    }

    // 设置账号来源  1 置业顾问端  2 开发商端
  }, { key: "setAccountSource", value: function setAccountSource() {var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;
      var item = new LoginSuccessModel().getModel() || {};
      item.source = source;
      new LoginSuccessModel().setModel(item);
    }

    // 设置公司名称
  }, { key: "setCompName", value: function setCompName() {var compName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var item = new LoginSuccessModel().getModel() || {};
      item.compName = compName;
      new LoginSuccessModel().setModel(item);
    }

    // 设置公司地址
  }, { key: "setCompAddress", value: function setCompAddress() {var compAddress = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var item = new LoginSuccessModel().getModel() || {};
      item.compAddress = compAddress;
      new LoginSuccessModel().setModel(item);
    }

    // 设置所属区域名称
  }, { key: "setRegName", value: function setRegName() {var regName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var item = new LoginSuccessModel().getModel() || {};
      item.regName = regName;
      new LoginSuccessModel().setModel(item);
    }

    // 设置城市名称
  }, { key: "setCityName", value: function setCityName() {var cityName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var item = new LoginSuccessModel().getModel() || {};
      item.cityName = cityName;
      new LoginSuccessModel().setModel(item);
    } }]);return SetLoginModel;}();


// 获取登录成功相关参数
exports.SetLoginModel = SetLoginModel;var GetLoginModel = /*#__PURE__*/function () {function GetLoginModel() {_classCallCheck(this, GetLoginModel);}_createClass(GetLoginModel, null, [{ key: "getBuildId",
    // 楼盘id
    value: function getBuildId() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.buildId || "";
    }

    // 楼盘name
  }, { key: "getBuildName", value: function getBuildName() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.buildName || "";
    }

    // clientKey
  }, { key: "getClientKey", value: function getClientKey() {
      return new _UserInfoModel.UserInfoModel().getModel("clientKey") || "";
    }

    // completeMobileConfig
  }, { key: "getCompleteMobileConfig", value: function getCompleteMobileConfig() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.completeMobileConfig || "";
    }

    // distractionFree
  }, { key: "getDistractionFree", value: function getDistractionFree() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.distractionFree || "";
    }

    // panoramaDemo
  }, { key: "getPanoramaDemo", value: function getPanoramaDemo() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.panoramaDemo || "";
    }

    // payPwd
  }, { key: "getPayPwd", value: function getPayPwd() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.payPwd || "";
    }

    // statisticsUrl
  }, { key: "getStatisticsUrl", value: function getStatisticsUrl() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.statisticsUrl || "";
    }

    // systemFlag
  }, { key: "getSystemFlag", value: function getSystemFlag() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.systemFlag || "";
    }

    // tariff=0.08
  }, { key: "getTariff", value: function getTariff() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.tariff || "";
    }

    // userId=13713
  }, { key: "getUserId", value: function getUserId() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.userId || "";
    }

    // userJurisdiction=1 2 3 4 5
  }, { key: "getUserJurisdiction", value: function getUserJurisdiction() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.userJurisdiction || "";
    }

    // userName=董大
  }, { key: "getUserName", value: function getUserName() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.userName || "";
    }

    // userPhoto=http://pic.myfun7.com/oss/online/tmp/2019/10/11/db30673e204a44209c851ac711441f0b.jpeg
  }, { key: "getUserPhoto", value: function getUserPhoto() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.userPhoto;
    }

    // userPosition=BIZ_OPER
  }, { key: "getUserPosition", value: function getUserPosition() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.userPosition || "";
    }

    // yunXinToken=0a7300db6dde5cb4db861ec95106effc
  }, { key: "getYunXinToken", value: function getYunXinToken() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.yunXinToken || "";
    }

    // 获取是否开启自动登录
  }, { key: "getAutoLogin", value: function getAutoLogin() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.autoLogin || false;
    }

    // 获取电话
  }, { key: "getTelephone", value: function getTelephone() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.telephone || "";
    }

    // 获取密码
  }, { key: "getPassword", value: function getPassword() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.password || "";
    }

    // 获取账号来源  1 置业顾问端  2 开发商端
  }, { key: "getAccountSource", value: function getAccountSource() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.source || 2;
    }

    // 获取公司名称
  }, { key: "getCompName", value: function getCompName() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.compName || "";
    }

    // 获取公司地址
  }, { key: "getCompAddress", value: function getCompAddress() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.compAddress || "";
    }

    // 获取所属区域名称
  }, { key: "getRegName", value: function getRegName() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.regName || "";
    }

    // 获取城市名称
  }, { key: "getCityName", value: function getCityName() {
      var item = new LoginSuccessModel().getModel() || {};
      return item.cityName || "";
    } }]);return GetLoginModel;}();



// 通讯录
exports.GetLoginModel = GetLoginModel;var ConsultantListModel = /*#__PURE__*/function (_DefaultModel2) {_inherits(ConsultantListModel, _DefaultModel2);
  function ConsultantListModel() {_classCallCheck(this, ConsultantListModel);return _possibleConstructorReturn(this, _getPrototypeOf(ConsultantListModel).call(this));

  }_createClass(ConsultantListModel, [{ key: "getKey", value: function getKey()

    {
      return "ConsultantListModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return ConsultantListModel;}(_DefaultModel3.DefaultModel);exports.ConsultantListModel = ConsultantListModel;

/***/ }),

/***/ 180:
/*!****************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/im/RemindSetModel.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.GetRemindStatus = exports.UpRemindStatus = exports.RemindSetModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ../DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var


RemindSetModel = /*#__PURE__*/function (_DefaultModel) {_inherits(RemindSetModel, _DefaultModel);
  function RemindSetModel() {_classCallCheck(this, RemindSetModel);return _possibleConstructorReturn(this, _getPrototypeOf(RemindSetModel).call(this));

  }_createClass(RemindSetModel, [{ key: "getKey", value: function getKey()

    {
      return "PositionChartModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return RemindSetModel;}(_DefaultModel2.DefaultModel);


// 更新消息提醒状态
exports.RemindSetModel = RemindSetModel;var UpRemindStatus = /*#__PURE__*/function () {function UpRemindStatus() {_classCallCheck(this, UpRemindStatus);}_createClass(UpRemindStatus, null, [{ key: "voiceStatus",
    // 更新是否开启声音提醒  1 开启 2 关闭
    value: function voiceStatus() {var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      new RemindSetModel().setModel(status, "voiceStatus");
    }

    // 更新是否开启震动提醒  1 开启  2 关闭
  }, { key: "shakeStatus", value: function shakeStatus() {var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      new RemindSetModel().setModel(status, "shakeStatus");
    } }]);return UpRemindStatus;}();


// 获取im消息提醒状态
exports.UpRemindStatus = UpRemindStatus;var GetRemindStatus = /*#__PURE__*/function () {function GetRemindStatus() {_classCallCheck(this, GetRemindStatus);}_createClass(GetRemindStatus, null, [{ key: "voiceStatus",
    // 获取声音开启状态
    value: function voiceStatus() {
      var model = new RemindSetModel().getModel() || {};
      return model.voiceStatus || 1;
    }

    // 获取震动开启状态
  }, { key: "shakeStatus", value: function shakeStatus() {
      var model = new RemindSetModel().getModel() || {};
      return model.shakeStatus || 1;
    } }]);return GetRemindStatus;}();exports.GetRemindStatus = GetRemindStatus;

/***/ }),

/***/ 19:
/*!*****************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/Notify.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.Notify = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

// Name：通知名称
// Info：通知信息
var
Notify = function Notify() {_classCallCheck(this, Notify);};exports.Notify = Notify;_defineProperty(Notify, "CityInfoChanged",
{
  Name: "CityInfoChanged",
  Info: null });_defineProperty(Notify, "GpsChanged",


{
  Name: "GpsChanged",
  Info: null });_defineProperty(Notify, "ScreenShowChanged",



{
  Name: "ScreenShowChanged",
  Info: null });_defineProperty(Notify, "ScreenResultChanged",



{
  Name: "ScreenResultChanged",
  Info: null });_defineProperty(Notify, "SearchResChanged",



{
  Name: "SearchResChanged",
  Info: null });_defineProperty(Notify, "NearInfoMapBtnChanged",



{
  Name: "NearInfoMapBtnChanged",
  Info: null });_defineProperty(Notify, "UserInfoChanged",



{
  Name: "UserInfoChanged",
  Info: null });_defineProperty(Notify, "AuthonChanged",



{
  Name: "AuthonChanged",
  Info: null });_defineProperty(Notify, "HouseListAgentChanged",



{
  Name: "HouseListAgentChanged",
  Info: null });_defineProperty(Notify, "UpChartListChanged",




{
  Name: "UpChartListChanged",
  Info: null });_defineProperty(Notify, "NewMsgChanged",



{
  Name: "NewMsgChanged",
  Info: null,
  Type_entrust: "entrust" });_defineProperty(Notify, "VoicePlayChange",



{
  Name: "VoicePlayChange",
  info: null });_defineProperty(Notify, "UpChartMsgChanged",



{
  Name: "UpChartMsgChanged",
  Info: null });_defineProperty(Notify, "ClickChartDetailScroll",



{
  Name: "ClickChartDetailScroll",
  Info: null });_defineProperty(Notify, "ClickChartMoreInfo",



{
  Name: "ClickChartMoreInfo",
  Info: null });_defineProperty(Notify, "RefuseAuthSettingChanged",



{
  Name: "RefuseAuthSettingChanged",
  Info: null });_defineProperty(Notify, "MsgReadChanged",



{
  Name: "MsgReadChanged",
  Info: null });_defineProperty(Notify, "LiaoKeChartChanged",



{
  Name: "LiaoKeChartChanged",
  Info: null });_defineProperty(Notify, "CompStoreChooseChanged",



{
  Name: "CompStoreChooseChanged",
  info: null });_defineProperty(Notify, "CompStoreChooseResultParamsChanged",



{
  Name: "CompStoreChooseResultParamsChanged",
  info: null });_defineProperty(Notify, "AppTitleEventChange",



{
  Name: "AppTitleEventChange",
  info: null });_defineProperty(Notify, "ServiceRegSectionChanged",



{
  Name: "ServiceRegSectionChanged",
  info: null });_defineProperty(Notify, "LoginSuccessChange",



{
  Name: "LoginSuccessChange",
  info: null });_defineProperty(Notify, "SearchBuildChange",



{
  Name: "SearchBuildChange",
  info: null });_defineProperty(Notify, "HouseEditChange",




{
  Name: "HouseEditChange",
  info: null });_defineProperty(Notify, "PushNewHouse",



{
  Name: "PushNewHouse",
  info: null });_defineProperty(Notify, "ImLinkSuccessChange",



{
  Name: "ImLinkSuccessChange",
  info: null });_defineProperty(Notify, "ScanConfirmChange",



{
  Name: "ScanConfirmChange",
  info: null });_defineProperty(Notify, "MsgSendSuccessChange",



{
  Name: "MsgSendSuccessChange",
  info: null });_defineProperty(Notify, "VideoChart",



{
  Name: "VideoChart",
  info: null });_defineProperty(Notify, "AcceptAudioChart",



{
  Name: "AcceptAudioChart",
  info: null });_defineProperty(Notify, "AutoLoginSuccess",



{
  Name: "AutoLoginSuccess",
  info: null });_defineProperty(Notify, "RegSectionChange",



{
  Name: "RegSectionChange",
  info: null });_defineProperty(Notify, "DicMessageChange",



{
  Name: "DicMessageChange",
  info: null });_defineProperty(Notify, "PageShowChange",



{
  Name: "PageShowChange",
  info: null });_defineProperty(Notify, "PageHideChange",



{
  Name: "PageHideChange",
  info: null });_defineProperty(Notify, "PersonalInfoChange",



{
  Name: "PersonalInfoChange",
  info: null });_defineProperty(Notify, "StatisticsTimeChange",



{
  Name: "StatisticsTimeChange",
  info: null });_defineProperty(Notify, "CreateActivityChange",



{
  Name: "CreateActivityChange",
  info: null });_defineProperty(Notify, "SaveBuildChange",



{
  Name: "SaveBuildChange",
  info: null });_defineProperty(Notify, "DistributionChange",



{
  Name: "DistributionChange",
  info: null });_defineProperty(Notify, "DistributionDelChange",



{
  Name: "DistributionChange",
  info: null });_defineProperty(Notify, "PhotoChange",



{
  Name: "PhotoChange",
  info: null });_defineProperty(Notify, "RuleChange",



{
  Name: "RuleChange",
  info: null });_defineProperty(Notify, "RemindChange",



{
  Name: "RemindChange",
  info: null });_defineProperty(Notify, "CustomerConfirmMsgChange",



{
  Name: "CustomerConfirmMsgChange",
  info: null });_defineProperty(Notify, "ContractListChanged",



{
  Name: "ContractListChanged",
  info: null });

/***/ }),

/***/ 2:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    {
      if(vm.$scope && vm.$scope.is){
        return vm.$scope.is
      }
    }
    if (vm.$root === vm) {
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  // fixed by xxxxxx (nvue vuex)
  /* eslint-disable no-undef */
  if(typeof SharedObject !== 'undefined'){
    this.id = SharedObject.uid++;
  } else {
    this.id = uid++;
  }
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = typeof SharedObject !== 'undefined' ? SharedObject : {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i++, i)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  
  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);
  
  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' && 
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return  
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    vm.mpHost !== 'mp-toutiao' && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    vm.mpHost !== 'mp-toutiao' && initProvide(vm); // resolve provide after data/props
    vm.mpHost !== 'mp-toutiao' && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    if (currentValue != pre[key]) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);
  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  vm.mpHost !== 'mp-toutiao' && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err) {
    /* eslint-disable no-undef */
    var app = getApp();
    if (app && app.onError) {
      app.onError(err);
    } else {
      console.error(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      this.$scope['triggerEvent'](event, {
        __args__: toArray(arguments, 1)
      });
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string,number
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onError',
    //Page
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 20:
/*!***********************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/Notification.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.Notification = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}

/**

type {{name:[{o:object,c:string}]}}
var
NotificationMethod = /*#__PURE__*/function () {function NotificationMethod() {_classCallCheck(this, NotificationMethod);}_createClass(NotificationMethod, null, [{ key: "addObserver",
    /**
                                                                                                                                                                                        *
                                                                                                                                                                                        * @param {object}observer
                                                                                                                                                                                        * @param {string}callback --- function(name, userInfo)
                                                                                                                                                                                        * @param {string}name
                                                                                                                                                                                        */
    // 注册通知
    value: function addObserver(observer, callback, name) {
      if (getApp().globalData.notifyNames[name] === undefined) {
        getApp().globalData.notifyNames[name] = [];
        getApp().globalData.notifyNames[name + '_cnt'] = 0;
      }

      var pos = getApp().globalData.notifyNames[name].length;
      for (var i = 0; i < getApp().globalData.notifyNames[name].length; ++i) {
        if (i in getApp().globalData.notifyNames[name] && getApp().globalData.notifyNames[name][i] === undefined) {
          pos = i;
          continue;
        }
        if (i in getApp().globalData.notifyNames[name] && getApp().globalData.notifyNames[name][i] != undefined) {
          if (getApp().globalData.notifyNames[name][i]['o'] === observer) {
            getApp().globalData.notifyNames[name][i]['c'] = callback;
            getApp().globalData.notifyNames = getApp().globalData.notifyNames;
            return;
          }
        }
      }
      getApp().globalData.notifyNames[name][pos] = { 'o': observer, 'c': callback };
      getApp().globalData.notifyNames[name + '_cnt'] += 1;
      getApp().globalData.notifyNames = getApp().globalData.notifyNames;
    }

    // 移除view的指定通知
  }, { key: "removeObserver", value: function removeObserver(observer, name) {
      if (getApp().globalData.notifyNames[name] === undefined) {
        return;
      }

      for (var i = 0; i < getApp().globalData.notifyNames[name].length; ++i) {
        if (i in getApp().globalData.notifyNames[name] && getApp().globalData.notifyNames[name][i] != undefined) {
          if (getApp().globalData.notifyNames[name][i]['o'] === observer) {
            getApp().globalData.notifyNames[name][i] = undefined;
            getApp().globalData.notifyNames[name + '_cnt'] -= 1;
            getApp().globalData.notifyNames = getApp().globalData.notifyNames;

            if (getApp().globalData.notifyNames[name + '_cnt'] == 0) {
              delete getApp().globalData.notifyNames[name + '_cnt'];
              delete getApp().globalData.notifyNames[name];
              getApp().globalData.notifyNames = getApp().globalData.notifyNames;
            }
            return;
          }
        }
      }
    }

    // 移除当前view的所有通知
  }, { key: "removeObserverAllNotification", value: function removeObserverAllNotification(observer) {
      for (var name in getApp().globalData.notifyNames) {
        if (typeof getApp().globalData.notifyNames[name] != 'object') {
          continue;
        }
        this.removeObserver(observer, name);
      }
    }

    // 发送通知
    // 参数类型：
    // name：通知名称
    // userInfo：传递的信息
  }, { key: "postNotification", value: function postNotification(name, userInfo) {
      if (getApp().globalData.notifyNames[name] === undefined) {
        return;
      }

      for (var i = 0; i < getApp().globalData.notifyNames[name].length; ++i) {
        if (i in getApp().globalData.notifyNames[name] && getApp().globalData.notifyNames[name][i] != undefined) {
          if (typeof getApp().globalData.notifyNames[name][i]['o'] === 'object' &&
          typeof getApp().globalData.notifyNames[name][i]['o'][getApp().globalData.notifyNames[name][i]['c']] === 'function') {
            getApp().globalData.notifyNames[name][i]['o'][getApp().globalData.notifyNames[name][i]['c']](name, userInfo);
          } else {
            if (typeof getApp().globalData.notifyNames[name][i]['c'] === 'function' && typeof eval(getApp().globalData.notifyNames[name][i]['c']) == "function") {
              getApp().globalData.notifyNames[name][i]['c'](name, userInfo);
            }
          }
        }
      }
    }

    // 同步发送通知，暂时用不上
  }, { key: "postNotificationAsync", value: function postNotificationAsync(name, userInfo) {
      setTimeout(function () {
        if (getApp().globalData.notifyNames[name] === undefined) {
          return;
        }

        for (var i = 0; i < getApp().globalData.notifyNames[name].length; ++i) {
          if (i in getApp().globalData.notifyNames[name] && getApp().globalData.notifyNames[name][i] != undefined) {
            if (typeof getApp().globalData.notifyNames[name][i]['o'] === 'object' &&
            typeof getApp().globalData.notifyNames[name][i]['o'][getApp().globalData.notifyNames[name][i]['c']] === 'function') {
              getApp().globalData.notifyNames[name][i]['o'][getApp().globalData.notifyNames[name][i]['c']](name, userInfo);
            } else {
              getApp().globalData.notifyNames[name][i]['c'](name, userInfo);
            }
          }
        }
      }, 0);
    } }]);return NotificationMethod;}();var


Notification = /*#__PURE__*/function () {function Notification() {_classCallCheck(this, Notification);}_createClass(Notification, [{ key: "addObserver", value: function addObserver(
    observer, callback, name) {
      NotificationMethod.addObserver(observer, callback, name);
    } }, { key: "removeObserver", value: function removeObserver(

    observer, name) {
      NotificationMethod.removeObserver(oobserver, name);
    } }, { key: "removeObserverAllNotification", value: function removeObserverAllNotification(

    observer) {
      NotificationMethod.removeObserverAllNotification(observer);
    } }, { key: "postNotification", value: function postNotification(

    name, userInfo) {
      NotificationMethod.postNotification(name, userInfo);
    } }, { key: "postNotificationAsync", value: function postNotificationAsync(

    name, userInfo) {
      NotificationMethod.postNotificationAsync(name, userInfo);
    } }]);return Notification;}();exports.Notification = Notification;

/***/ }),

/***/ 205:
/*!*****************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/SetMap.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.SetMap = exports.GetStaticMapImg = exports.MapFindeHouseItem = exports.RegionMaxMinGpsItem = exports.ControlsItem = exports.SearchNearMarkerItem = exports.StaticMapItem = exports.SetMapItem = void 0;function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

var amapFile = __webpack_require__(/*! ./amap-wx.js */ 48);

// 初始化类型
var SetMapItem = function SetMapItem() {_classCallCheck(this, SetMapItem);_defineProperty(this, "zoom",
  8);_defineProperty(this, "scale",
  2);_defineProperty(this, "width",
  100);_defineProperty(this, "height",
  100);_defineProperty(this, "id",
  "");} // 地图id
;

// 静态图类型
exports.SetMapItem = SetMapItem;var StaticMapItem = function StaticMapItem() {_classCallCheck(this, StaticMapItem);_defineProperty(this, "localLan",
  0);_defineProperty(this, "localLat",
  0);_defineProperty(this, "hasMarker",
  false);};


// 搜索附近信息类型
exports.StaticMapItem = StaticMapItem;var SearchNearMarkerItem = function SearchNearMarkerItem() {_classCallCheck(this, SearchNearMarkerItem);_defineProperty(this, "adcode",
  "");_defineProperty(this, "address",
  "");_defineProperty(this, "name",
  "");_defineProperty(this, "district",
  "");_defineProperty(this, "lng",
  "");_defineProperty(this, "lat",
  "");};


// 当前定位点的类型
exports.SearchNearMarkerItem = SearchNearMarkerItem;var ControlsItem = function ControlsItem() {_classCallCheck(this, ControlsItem);_defineProperty(this, "id",
  "");_defineProperty(this, "iconPath",
  "");_defineProperty(this, "width",
  0);_defineProperty(this, "height",
  0);_defineProperty(this, "left",
  0);_defineProperty(this, "top",
  0);_defineProperty(this, "clickable",
  false);} // 能否点击
;

// 地图可视区域的最大和最小经纬度
exports.ControlsItem = ControlsItem;var RegionMaxMinGpsItem = function RegionMaxMinGpsItem() {_classCallCheck(this, RegionMaxMinGpsItem);_defineProperty(this, "minLat",
  null);_defineProperty(this, "minLng",
  null);_defineProperty(this, "maxLat",
  null);_defineProperty(this, "maxLng",
  null);};


// 地图找房marker
exports.RegionMaxMinGpsItem = RegionMaxMinGpsItem;var MapFindeHouseItem = function MapFindeHouseItem() {_classCallCheck(this, MapFindeHouseItem);_defineProperty(this, "lat",
  null);_defineProperty(this, "lng",
  null);_defineProperty(this, "id",
  "");_defineProperty(this, "iconPath",
  "");_defineProperty(this, "width",
  0);_defineProperty(this, "height",
  0);_defineProperty(this, "callout_content",


  "");_defineProperty(this, "callout_color",
  "#000000");_defineProperty(this, "callout_fontSize",
  12);_defineProperty(this, "callout_borderRadius",
  0);_defineProperty(this, "callout_bgColor",
  "transparent");_defineProperty(this, "callout_padding",
  5);_defineProperty(this, "callout_display",
  "ALWAYS");_defineProperty(this, "callout_textAlign",
  "center");};exports.MapFindeHouseItem = MapFindeHouseItem;var


GetStaticMapImg = /*#__PURE__*/function () {


  function GetStaticMapImg(lat, lng) {_classCallCheck(this, GetStaticMapImg);_defineProperty(this, "lat", 0);_defineProperty(this, "lng", 0);
    this.lat = lat;
    this.lng = lng;
  }_createClass(GetStaticMapImg, [{ key: "getImgUrl", value: function getImgUrl()

    {var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 375;var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 320;
      return "https://apis.map.qq.com/ws/staticmap/v2/?center=" +
      this.lat + "," + this.lng +
      "&zoom=16&scale=2&markers=size:large|icon:https://cd.haofang.net/Public/images/wap/icon_mylocation.png|" +
      this.lng + "," + this.lat + "&key=DGFBZ-3IFW2-PDEUL-CBLCE-XOSYK-K5B5I" +
      "&size=" + width + "*" + height;
    } }]);return GetStaticMapImg;}();exports.GetStaticMapImg = GetStaticMapImg;var


SetMap = /*#__PURE__*/function () {





  function SetMap() {var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new SetMapItem();_classCallCheck(this, SetMap);_defineProperty(this, "item", new SetMapItem());_defineProperty(this, "myAmapFun", null);_defineProperty(this, "mapContext", null);_defineProperty(this, "key", "924a344dd942f959aafba539c81e1b24");
    this.item = item;
    this.init();
  }_createClass(SetMap, [{ key: "init", value: function init()

    {
      this.myAmapFun = new amapFile.AMapWX({ key: this.key });
    }

    // 获取静态图
  }, { key: "getStaticMap", value: function getStaticMap(markerItem) {var _this = this;
      var that = this;
      return new Promise(function (resolve, reject) {
        if (markerItem === undefined) {
          throw new Error("请配置静态地图的参数");
          reject("");
          return;
        }

        if (!markerItem.localLat || !markerItem.localLan) {
          throw new Error("请配置静态地图的定位点的经纬度");
          reject("");
          return;
        }

        var url = "https://restapi.amap.com/v3/staticmap?key=".concat(_this.key, "&s=rsx&platform=WXJS") + "&appname=".concat(
        _this.key, "&sdkversion=1.2.0&logversion=2.0") + "&location=".concat(
        markerItem.localLan, ",").concat(markerItem.localLat, "&zoom=").concat(_this.item.zoom) + "&size=".concat(
        _this.item.width, "*").concat(_this.item.height) + "&scale=".concat(
        _this.item.scale);
        if (markerItem.hasMarker) {
          url = url + "&markers=mid,0x".concat(markerItem.markerColor, ",A:116.282034,40.046875");
        }
        resolve(url);
      });
    }

    // 获取周边信息
  }, { key: "getNearMarkers", value: function getNearMarkers() {
      var that = this;
      return new Promise(function (resolve, reject) {
        that.myAmapFun.getPoiAround({
          success: function success(data) {
            console.log(data);
            resolve(data);
          },
          fail: function fail(info) {
            console.log(info);
            reject(info);
          } });

      });
    }

    // 搜索附近的信息
  }, { key: "searchNearInfo", value: function searchNearInfo(keywords) {var cityId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";var lng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";var lat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";
      var that = this;
      return new Promise(function (resolve, reject) {
        var location = lng && lat ? lng + "," + lat : "";
        that.myAmapFun.getInputtips({
          keywords: keywords,
          city: cityId,
          citylimit: true,
          location: location,
          success: function success(data) {
            if (!data || !data.tips) {
              resolve([]);
              return;
            }

            var tips = data.tips || [];
            var items = [];
            for (var i = 0; i < tips.length; i++) {
              var dataItem = tips[i] || {};
              if (!dataItem.adcode || dataItem.adcode.length === 0) continue;

              var gps = dataItem.location && dataItem.location.indexOf(",") >= 0 ? dataItem.location.split(",") : ["", ""];
              var item = new SearchNearMarkerItem();
              item.adcode = dataItem.adcode || "";
              item.address = dataItem.address instanceof Array ? "暂无区域" : dataItem.address || "暂无区域";
              item.name = dataItem.name || "暂无名称";
              item.district = dataItem.district instanceof Array ? "暂无行政区域" : dataItem.district || "暂无行政区域";
              item.lng = gps[0];
              item.lat = gps[1];
              items.push(item);
            }
            resolve(items);
          },
          fail: function fail(err) {
            reject(err);
          } });

      });
    }

    // 设置地图控制点
  }, { key: "setControls", value: function setControls() {var controlsList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      return new Promise(function (resolve, reject) {
        var controls = [];
        var idMap = {};var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {
          for (var _iterator = controlsList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var item = _step.value;
            if (!item.id) {
              throw new Error("请配置控制的id");
              continue;
            }

            if (!item.iconPath) {
              throw new Error("请配置控制的图片");
              continue;
            }

            if (idMap[item.id]) {
              throw new Error("配置的id重复了");
              continue;
            }

            idMap[item.id] = true;
            controls.push({
              id: item.id,
              position: {
                left: item.left,
                top: item.top,
                width: item.width,
                height: item.height },

              iconPath: item.iconPath,
              clickable: item.clickable });

          }} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return != null) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}
        resolve(controls);
      });
    }

    // 获取地图可视区域的四个点的经纬度信息
  }, { key: "getRegion", value: function getRegion(mapContext) {var _this2 = this;
      return new Promise(function (resolve, reject) {
        if (!_this2.item.id) {
          throw new Error("\u8BF7\u914D\u7F6E\u5730\u56FEid");
        }

        // 			if(!this.mapContext) {
        // 				throw new Error(`请初始化id === ${this.item.id}的地图对象`);
        // 			}
        _this2.mapContext = mapContext;
        _this2.mapContext.getRegion({
          success: function success(res) {
            var southwest = res.southwest || {};
            var northeast = res.northeast || {};
            var item = new RegionMaxMinGpsItem();
            item.minLat = southwest.latitude || 0;
            item.minLng = southwest.longitude || 0;
            item.maxLat = northeast.latitude || 0;
            item.maxLng = northeast.longitude || 0;
            resolve(item);
          },
          fail: function fail(err) {
            reject(err);
          } });

      });
    }

    // 设置地图找房的marker点
  }, { key: "setMapFindMarkers", value: function setMapFindMarkers() {var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      return new Promise(function (resolve, reject) {
        var markers = [];var _iteratorNormalCompletion2 = true;var _didIteratorError2 = false;var _iteratorError2 = undefined;try {
          for (var _iterator2 = list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {var item = _step2.value;
            if (!item.id) continue;

            markers.push({
              id: item.id,
              latitude: item.lat,
              longitude: item.lng,
              iconPath: item.iconPath,
              title: item.callout_content,
              width: item.width,
              height: item.height,
              callout: {
                content: item.callout_content,
                color: item.callout_color,
                fontSize: item.callout_fontSize,
                borderRadius: item.callout_borderRadius,
                bgColor: item.callout_bgColor,
                padding: item.callout_padding,
                display: item.callout_display,
                textAlign: item.callout_textAlign } });


          }} catch (err) {_didIteratorError2 = true;_iteratorError2 = err;} finally {try {if (!_iteratorNormalCompletion2 && _iterator2.return != null) {_iterator2.return();}} finally {if (_didIteratorError2) {throw _iteratorError2;}}}
        resolve(markers);
      });
    } }]);return SetMap;}();exports.SetMap = SetMap;

/***/ }),

/***/ 21:
/*!******************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/ImChart.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.DealChartDetail = exports.DealReceiveMsg = exports.GetEmojiMap = exports.UpUnReadNumTab = exports.ImSendMessage = exports.ImChart = exports.WuYeHouseTextChartItem = exports.WuYeHouseChartItem = exports.EvaluateChartItem = exports.PositionChartItem = exports.ChartDetailItem = exports.ChartListItem = exports.DealLastMsgTimeStatic = exports.DealLastMsgTime = exports.ImChartConst = void 0;

var _md = _interopRequireDefault(__webpack_require__(/*! ./md5 */ 22));
var _UserInfoModel = __webpack_require__(/*! ../model/UserInfoModel.js */ 12);
var _GpsInfoModel = __webpack_require__(/*! ../model/GpsInfoModel.js */ 23);










var _NIM_Web_NIM_v = _interopRequireDefault(__webpack_require__(/*! ../static/mp-weixin/NIM_Web_NIM_v5.0.0.js */ 24));

var _config = __webpack_require__(/*! ../config/config.js */ 16);
var _ImChartNet = __webpack_require__(/*! ../net/ImChartNet */ 25);
var _Notify = __webpack_require__(/*! ../utils/Notify.js */ 19);
var _Notification = __webpack_require__(/*! ../utils/Notification.js */ 20);
var _common = __webpack_require__(/*! ../utils/common.js */ 15);
var _UnReadMsgModel = __webpack_require__(/*! ../model/im/UnReadMsgModel.js */ 29);

var _Const = __webpack_require__(/*! ../utils/Const.js */ 17);
var _LastMsgTime = __webpack_require__(/*! ../model/im/LastMsgTime.js */ 30);
var _PositionChartModel = __webpack_require__(/*! ../model/im/PositionChartModel.js */ 31);
var _UnReadMsgTimeModel = __webpack_require__(/*! ../model/im/UnReadMsgTimeModel.js */ 32);
var _MsgPush = __webpack_require__(/*! ../utils/MsgPush.js */ 33);
var _DealLiaoKeDetail = __webpack_require__(/*! ../utils/DealLiaoKeDetail.js */ 35);
var _ImEvaluateDeal = __webpack_require__(/*! ./ImEvaluateDeal */ 37);
var _ChatListModel = __webpack_require__(/*! ../model/im/ChatListModel */ 38);
var _UnReadMsgModel2 = __webpack_require__(/*! ../model/im/UnReadMsgModel */ 29);

var _LoginSuccessModel = __webpack_require__(/*! ../model/LoginSuccessModel */ 18);
var _Utils = __webpack_require__(/*! ./Utils */ 40);
var _RequestApi = __webpack_require__(/*! ./RequestApi */ 26);
var _ProjectConfigConst = __webpack_require__(/*! ./ProjectConfigConst */ 39);
var _DifferenceApi = __webpack_require__(/*! ./DifferenceApi */ 27);
var _common2 = __webpack_require__(/*! ../utils/common */ 15);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

// IM常量
var ImChartConst = function ImChartConst() {_classCallCheck(this, ImChartConst);};



// 处理最后一条消息时间
exports.ImChartConst = ImChartConst;_defineProperty(ImChartConst, "positionType", 105);var DealLastMsgTime = /*#__PURE__*/function () {function DealLastMsgTime() {_classCallCheck(this, DealLastMsgTime);}_createClass(DealLastMsgTime, null, [{ key: "setTime", value: function setTime(
    time, messageId) {
      new _LastMsgTime.LastMsgTime().setModel(time, messageId);
    } }, { key: "getTime", value: function getTime(

    messageId) {
      return new _LastMsgTime.LastMsgTime().getModel(messageId) ? parseInt(new _LastMsgTime.LastMsgTime().getModel(messageId)) : 0;
    } }, { key: "checkShowTime", value: function checkShowTime(

    messageId, time) {
      if (time - this.getTime(messageId) >= 2 * 60 * 1000) {
        return true;
      }

      return false;
    } }]);return DealLastMsgTime;}();exports.DealLastMsgTime = DealLastMsgTime;var

DealLastMsgTimeStatic = /*#__PURE__*/function () {function DealLastMsgTimeStatic() {_classCallCheck(this, DealLastMsgTimeStatic);}_createClass(DealLastMsgTimeStatic, null, [{ key: "setTime", value: function setTime(


    time) {
      this.lastTime = time;
    } }, { key: "getTime", value: function getTime()

    {
      return parseInt(this.lastTime);
    } }, { key: "checkShowTime", value: function checkShowTime(

    messageId, time) {
      return !!(time - this.getTime() >= 2 * 60 * 1000);
    } }]);return DealLastMsgTimeStatic;}();


// 聊天列表item
exports.DealLastMsgTimeStatic = DealLastMsgTimeStatic;_defineProperty(DealLastMsgTimeStatic, "lastTime", 0);var ChartListItem = function ChartListItem() {_classCallCheck(this, ChartListItem);_defineProperty(this, "messageId",
  "");_defineProperty(this, "headImg",
  "");_defineProperty(this, "name",
  "");_defineProperty(this, "lastTime_stamp",
  "");_defineProperty(this, "lastTime",
  "");_defineProperty(this, "msg",
  "");_defineProperty(this, "sendtime",
  "");_defineProperty(this, "unRead",
  0);_defineProperty(this, "isShield",
  0);_defineProperty(this, "isShowBtn",
  false);_defineProperty(this, "type",
  "");_defineProperty(this, "compName",
  "");_defineProperty(this, "isTop",
  2);} // 是否指定  1 是 2 不是
;

// 聊天详情的item
exports.ChartListItem = ChartListItem;var ChartDetailItem = function ChartDetailItem() {_classCallCheck(this, ChartDetailItem);_defineProperty(this, "type",
  "");_defineProperty(this, "content",


  "");_defineProperty(this, "mySend",
  false);_defineProperty(this, "time",
  "");_defineProperty(this, "timeStr",
  0);_defineProperty(this, "emoji",
  []);_defineProperty(this, "hasEmoji",
  false);_defineProperty(this, "voiceLength",
  1);_defineProperty(this, "voiceMd5",
  "");_defineProperty(this, "showTime",
  false);_defineProperty(this, "isRead",
  true);} // 是否是已读
;

// 位置信息的item
exports.ChartDetailItem = ChartDetailItem;var PositionChartItem = /*#__PURE__*/function () {function PositionChartItem() {_classCallCheck(this, PositionChartItem);_defineProperty(this, "name",
    "");_defineProperty(this, "address",
    "");_defineProperty(this, "lat",
    "");_defineProperty(this, "lng",
    "");_defineProperty(this, "scale",
    18);_defineProperty(this, "staticImg",
    "");}_createClass(PositionChartItem, [{ key: "getImgKey", // 图片  需要增加这个字段 ?imageView
    value: function getImgKey()
    {
      return "?imageView";
    } }, { key: "getImgKey2", value: function getImgKey2()

    {
      return "&imageView";
    } }]);return PositionChartItem;}();


// 聊天评价item
exports.PositionChartItem = PositionChartItem;var EvaluateChartItem = function EvaluateChartItem() {_classCallCheck(this, EvaluateChartItem);_defineProperty(this, "evaContent",
  "");_defineProperty(this, "evaTagIndex",
  "");_defineProperty(this, "evaStar",
  1);} // 评分
;

// 物业房源item
exports.EvaluateChartItem = EvaluateChartItem;var WuYeHouseChartItem = function WuYeHouseChartItem() {_classCallCheck(this, WuYeHouseChartItem);_defineProperty(this, "houseId",
  "");_defineProperty(this, "buildId",
  "");_defineProperty(this, "houseImg",
  "");_defineProperty(this, "houseTitle",
  "");_defineProperty(this, "houseRoof",
  "");_defineProperty(this, "houseUnit",
  "");_defineProperty(this, "houseFloor",
  "");_defineProperty(this, "houseNum",
  "");_defineProperty(this, "tipMsg",
  "");_defineProperty(this, "houseArea",
  "");_defineProperty(this, "housePrice",
  "");_defineProperty(this, "houseName",
  "");_defineProperty(this, "cityId",
  "");_defineProperty(this, "caseType",
  "");} // 房源类型  1 代表二手房
;

// 物业登记房源文案item
exports.WuYeHouseChartItem = WuYeHouseChartItem;var WuYeHouseTextChartItem = function WuYeHouseTextChartItem() {_classCallCheck(this, WuYeHouseTextChartItem);_defineProperty(this, "houseTitle",
  "");_defineProperty(this, "buildName",
  "");_defineProperty(this, "houseRoom",
  "");_defineProperty(this, "houseArea",
  "");_defineProperty(this, "housePrice",
  "");_defineProperty(this, "houseUseage",
  "");_defineProperty(this, "tipMsg",
  "");_defineProperty(this, "houseFitment",
  "");} // 装修类型
;



// 请求im的uuAccid拼接方式 = "uu_" + accid;
exports.WuYeHouseTextChartItem = WuYeHouseTextChartItem;var ImChart = /*#__PURE__*/function () {function ImChart() {_classCallCheck(this, ImChart);}_createClass(ImChart, null, [{ key: "setConnectStatus",
    // im断开后的登录地址




    // 初始化之后的val
    // 用户id
    // 是否在聊天详情中
    // 当前查看的聊天详情id
    // IM当前状态 1: 连接中 2: 断开(包括账号在其他端登录)
    // IM发送短信的初始化类
    // 是否将要初始化config
    // 连接失败回调状态 2 成功 1 失败
    // 更新链接状态
    value: function setConnectStatus(status) {
      this.imConnectStatus = status;
    }
    // 获取链接状态
  }, { key: "getConnnectStatus", value: function getConnnectStatus() {
      return this.imConnectStatus;
    }

    // 更新token
  }, { key: "setToken", value: function setToken(token) {
      this.token = token;
    }

    // 更新uuAccid
  }, { key: "setUuAccid", value: function setUuAccid(uuAccid) {
      this.uuAccid = uuAccid;
    }
    // 获取uuAccid
  }, { key: "getUuAccid", value: function getUuAccid() {
      return this.uuAccid;
    }

    // 获取im服务器链接id
  }, { key: "getServiceId", value: function getServiceId() {
      return this.serviceId;
    }



    //  --------------- 初始化部分 start ---------------------
    // 初始化用户信息
  }, { key: "initImUserInfo", value: function initImUserInfo() {
      // 更新tab
      UpUnReadNumTab.setTab();

      var me = new _UserInfoModel.UserInfoModel().getModel("me") || {};
      var that = this;
      if (!me.userId) {
        return Promise.resolve("初始化信息的参数不对userId=" + (me.userId || ""));
      }

      that.uuAccid = new _UserInfoModel.UserInfoModel().getModel("accid");
      that.setToken(_LoginSuccessModel.GetLoginModel.getYunXinToken());
      this.userId = me.userId;
      return new Promise(function (resolve, reject) {
        // 如果IM连接状态未断开则无需重新初始化
        if (that.imChartVal && that.imChartVal.connect && that.token) {
          that.imChartVal.connect();
          new _Notification.Notification().postNotification(_Notify.Notify.ImLinkSuccessChange.Name);
          getApp().globalData.imChartClass = ImChart;
          resolve("成功");
          return;
        }

        that.initConfig(function (info) {
          new _Notification.Notification().postNotification(_Notify.Notify.ImLinkSuccessChange.Name);
          getApp().globalData.imChartClass = ImChart;
          resolve(info);
        });
      });
    }

    // 重新连接
  }, { key: "againLink", value: function againLink() {
      if (this.imChartVal && this.imChartVal.disconnect &&
      this.imChartVal.setOptions && this.imChartVal.connect) {
        // 断开 IM
        this.imChartVal.disconnect();
        // 更新 token
        this.imChartVal.setOptions({
          token: this.token,
          account: this.accid });

        // 重新连接
        this.imChartVal.connect();
      }
    }

    // 初始化配置项
  }, { key: "initConfig", value: function initConfig() {var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
      var that = this;
      that.uuAccid = new _UserInfoModel.UserInfoModel().getModel("accid");
      that.accid = new _UserInfoModel.UserInfoModel().getModel("accid");
      that.setToken(_LoginSuccessModel.GetLoginModel.getYunXinToken());
      if (!this.accid || !this.token) return;










































































      this.imChartVal = _NIM_Web_NIM_v.default.getInstance({
        debug: false,
        db: false, // 是否开启本地数据库，官方建议不开启（原因：兼容性不好）
        syncSessionUnread: true,
        autoMarkRead: true, // 自动标记已读是否开启
        appKey: _config.Config.imKey, //  在云信管理后台查看应用的 appKey
        account: this.accid, // 帐号, 应用内唯一, 通过接口返回
        token: this.token, // 帐号的 token, 用于建立连接
        // 连接建立后的回调(登录成功)
        onconnect: function onconnect() {
          console.log("im连接成功");
          that.setConnectStatus(1);
          new _Notification.Notification().postNotification(_Notify.Notify.ImLinkSuccessChange.Name);
          callback("同步完成");
        },
        //会话
        onupdatesession: this.onUpdateSession,
        ondisconnect: this.onDisconnect,
        // 离线消息
        onofflinemsgs: this.onOfflineMsg,
        //消息
        onmsg: this.onMsg,
        //系统通知
        oncustomsysmsg: this.onCustomSysMsg,
        onerror: function onerror(error) {
          console.log('SDK 连接失败', error);
        },
        onsessions: this.onSessions });


    }

    // 会话更新回调
  }, { key: "onUpdateSession", value: function onUpdateSession(session) {
      // console.error("--onUpdateSession--", session);
      var messageId = ImChart.getUuAccid() == session.lastMsg.to ?
      session.lastMsg.from :
      session.lastMsg.to;

      // 已读回执
      if (session.msgReceiptTime && messageId == ImChart.messageId) {
        new _UnReadMsgTimeModel.UnReadMsgTimeModel().setModel(session.msgReceiptTime, messageId);
        new _Notification.Notification().postNotification(_Notify.Notify.MsgReadChanged.Name, session.msgReceiptTime);
      }

      // 自己的消息不需要推送
      if (session.lastMsg && session.lastMsg.from &&
      session.lastMsg.from == ImChart.getUuAccid()) {
        var updateTime = new _UnReadMsgTimeModel.UnReadMsgTimeModel().getModel(messageId) || 0;
        if (updateTime > session.updateTime || !updateTime) {
          new _UnReadMsgTimeModel.UnReadMsgTimeModel().setModel(session.updateTime, messageId);
        }
        if (ImChart.ImNeedSendShortMessage) {
          ImChart.ImNeedSendShortMessage.init();
          ImChart.ImNeedSendShortMessage.upAlreadyReply(true);
        }
        var _listMsgItem = new DealMsgPush(session).getMsg(false);
        new _ChatListModel.DealChartListModel(messageId).newMsg(_listMsgItem, session);
        return;
      }

      new _UnReadMsgTimeModel.UnReadMsgTimeModel().setModel(session.updateTime, messageId);
      ImChart.sendReadCallback(messageId, session.lastMsg);
      if (session && session.lastMsg && session.lastMsg.from &&
      session.lastMsg.from == ImChart.getUuAccid()) {
        var _listMsgItem2 = new DealMsgPush(session).getMsg(true);
        new _ChatListModel.DealChartListModel(messageId).newMsg(_listMsgItem2, session);
        new _Notification.Notification().postNotification(_Notify.Notify.UpChartListChanged.Name, session);
        return;
      }

      if (ImChart.messageId == messageId) {
        var getDetailMsgVal = new DealMsgPush(session).getDetailMsg(messageId);
        if (getDetailMsgVal) {
          if (!_ProjectConfigConst.ProjectConfigConst.getSysIds().includes(ImChart.messageId)) {
            new _Notification.Notification().postNotification(_Notify.Notify.UpChartMsgChanged.Name, getDetailMsgVal);
            new _Notification.Notification().postNotification(_Notify.Notify.MsgReadChanged.Name, session.updateTime);
          }

          var _listMsgItem3 = new DealMsgPush(session).getMsg(false);
          new _ChatListModel.DealChartListModel(messageId).newMsg(_listMsgItem3, session);
        }
        return;
      }

      var listMsgItem = new DealMsgPush(session).getMsg(true);
      new _ChatListModel.DealChartListModel(messageId).newMsg(listMsgItem, session);
      new _Notification.Notification().postNotification(_Notify.Notify.UpChartMsgChanged.Name, listMsgItem);
    } }, { key: "onDisconnect", value: function onDisconnect(

    info) {var _this = this;
      this.linkFailStatus = 1;
      console.warn("IM连接断开", info);
      if (info.callFunc && info.callFunc.indexOf("logout") >= 0) {
        return;
      }

      setTimeout(function () {
        if (_this.linkFailStatus === 2) return;

        _this.linkFailStatus = 1;
        ImChart.setConnectStatus(2);
        _RequestApi.RequestTimeOut.isTokenError = true;
        if (new _UserInfoModel.UserInfoModel().getModel("clientKey")) {
          new _UserInfoModel.UserInfoModel().setModel("", "clientKey");
          new _DifferenceApi.DifferenceApi().showToast("您的账号在其他端已登录，请重新登录");
          _RequestApi.RequestTimeOut.isInLoginPage = true;
          setTimeout(function () {
            uni.reLaunch({
              url: ImChart.imCloseLoginPath });

          }, 500);
        }
      }, 3000);
    }

    // 离线消息
  }, { key: "onOfflineMsg", value: function onOfflineMsg(info) {
      console.log('离线消息', info);
      // 离线消息更新到未读消息中
      var list = info.msgs || [];
      var mapInfo = new _UnReadMsgModel.UnReadMsgModel().getModel() || {};
      var unreadMsgObj = mapInfo[_LoginSuccessModel.GetLoginModel.getUserId()] || {};
      var unreadMsgTimeMap = new _UnReadMsgTimeModel.UnReadMsgTimeModel().getModel() || {};
      if (list.length > 0) {var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {
          for (var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var item = _step.value;
            var messageId = ImChart.getUuAccid() == item.from ?
            item.to : item.from;
            var listMsgItem = new DealMsgPush({ lastMsg: item }).getMsg(false);
            new _ChatListModel.DealChartListModel(messageId).newMsg(listMsgItem, { lastMsg: item });

            if (item.userUpdateTime) {
              unreadMsgTimeMap[item.from] = item.userUpdateTime;
            }
            if (!unreadMsgObj[item.from]) {
              unreadMsgObj[item.from] = 1;
              continue;
            }

            var unreadNum = unreadMsgObj[item.from] || 0;
            unreadNum = parseInt(unreadNum);
            unreadNum++;
            unreadMsgObj[item.from] = unreadNum;
          }} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return != null) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}
        mapInfo[_LoginSuccessModel.GetLoginModel.getUserId()] = unreadMsgObj;
        new _UnReadMsgModel.UnReadMsgModel().setModel(mapInfo);
        UpUnReadNumTab.setTab();
        new _UnReadMsgTimeModel.UnReadMsgTimeModel().setModel(unreadMsgTimeMap);
        new _ChatListModel.DealChartListModel().sendMsgListNc();
      }
    } }, { key: "onMsg", value: function onMsg(

    sysMsg) {
      console.log(sysMsg, "--onMsg--");
      if (sysMsg.type == "custom") {
        var content = sysMsg.content ? JSON.parse(sysMsg.content) : {};

        // 服务器返回的撩客类型
        var msgData = content.data || {};
        if (content.type && content.type == 123) {
          var tips = msgData.CONTENT;
          var UpAgentHouseTipsMap = _DealLiaoKeDetail.UpAgentHouseTips.getData(sysMsg.from);
          UpAgentHouseTipsMap.tips = tips;
          UpAgentHouseTipsMap.archiveId = sysMsg.from;
          _DealLiaoKeDetail.UpAgentHouseTips.setData(sysMsg.from, UpAgentHouseTipsMap);
          new _Notification.Notification().postNotification(_Notify.Notify.LiaoKeChartChanged.Name, {
            type: content.type,
            tips: tips,
            archiveId: UpAgentHouseTipsMap.archiveId });

        }

        // 动态提醒
        if (sysMsg.target === _ProjectConfigConst.ProjectConfigConst.remindMsgMessageId) {
          new _Notification.Notification().postNotification(_Notify.Notify.RemindChange.Name);
        }

        // 确认消息
        if (content.type && content.type == 180) {
          new _Notification.Notification().postNotification(_Notify.Notify.CustomerConfirmMsgChange.Name);
        }
      }
    } }, { key: "onCustomSysMsg", value: function onCustomSysMsg(

    sysMsg) {
      console.log("---onCustomSysMsg---", sysMsg);
      if (sysMsg.type == "custom") {
        var content = sysMsg.content ? JSON.parse(sysMsg.content) : {};

        // 确认消息
        if (content.type && content.type == 180) {
          new _Notification.Notification().postNotification(_Notify.Notify.CustomerConfirmMsgChange.Name);
        }
      }
    } }, { key: "onSessions", value: function onSessions(

    sessions) {
      console.log('收到会话列表', sessions);
    } }, { key: "onUpdateUser", value: function onUpdateUser(

    info) {
      console.log('用户资料更新了', info);
      ImChart.imChartVal.getUser({
        account: ["ld_13713"],
        sync: true,
        done: function done(error, users) {
          console.error("-res-", error, users);
        } });

    } }, { key: "onUsers", value: function onUsers(

    info) {
      console.log('收到用户资料列表', info);
    } }, { key: "onMyInfo", value: function onMyInfo(

    user) {
      console.log('收到我的名片', user);
    } }, { key: "onUpdateMyInfo", value: function onUpdateMyInfo(

    user) {
      console.log('我的名片更新了', user);
    } }, { key: "bindNetcallEvent", value: function bindNetcallEvent()

    {
      ImChart.netcall.on('syncDone', function (data) {
        console.log('登录成功', data);
        ImChart.syncDone = data;
        getApp().globalData.imChartClass = ImChart;
        new _Notification.Notification().postNotification(_Notify.Notify.VideoChart.Name);
      });
      ImChart.netcall.on('clientLeave', function (data) {
        console.log('有人离开了', data);
      });
      ImChart.netcall.on('clientJoin', function (data) {
        console.log('有人加入了', data);
      });
      ImChart.netcall.on('callRejected', function (data) {
        console.log('对方拒绝了', data);
      });
      ImChart.netcall.on('callAccepted', function (data) {
        console.log('对方接听了', data);
        ImChart.callAccepted = data;
        getApp().globalData.imChartClass = ImChart;
        new _Notification.Notification().postNotification(_Notify.Notify.AcceptAudioChart.Name, data);
      });
      ImChart.netcall.on('beCalling', function (data) {
        ImChart.beCalling = data;
        getApp().globalData.imChartClass = ImChart;
        var pages = getCurrentPages();
        var currentPage = pages[pages.length - 1];
        // uni.navigateTo({
        //     url: "/pages/zhiwen-livepush/zhiwen-livepush"
        // });
      });
      ImChart.netcall.on('callerAckSync', function (data) {
        console.log('callerAckSync: 其他端已经处理了', data);
      });
      ImChart.netcall.on('hangup', function (data) {
        console.log('hangup', data);
      });
      ImChart.netcall.on('control', function (data) {
        console.log('control', data);
      });
      ImChart.netcall.on('joinChannel', function (data) {
        console.log('joinChannel', data);
      });
      ImChart.netcall.on('clientUpdate', function (data) {
        console.log('有人更新了', data);
      });
      ImChart.netcall.on('error', function (error) {
        console.error('出错了', error);
      });
      ImChart.netcall.on('open', function (data) {
        console.log('socket建立成功', data);
      });
      ImChart.netcall.on('sendCommandOverTime', function (data) {
        console.log('发送命令超时', data);
      });
      ImChart.netcall.on('liveRoomClose', function (data) {
        console.log('互动直播房间解散了', data);
      });
      ImChart.netcall.on('sessionDuration', function (data) {
        console.log('===结束通话(ms)：', data);
      });
      getApp().globalData.imChartClass = ImChart;
    }
    //  --------------- 初始化部分 end ---------------------


    // 获取聊天列表 读取本地
  }, { key: "getChartList", value: function getChartList() {
      var serviceId = this.getServiceId();
      var res = new _ChatListModel.DealChartListModel(serviceId).getMsgList() || [];
      return res.sort(new _common2.compare("msg_timestamp").minToMax());
    }

    /**
       * 屏蔽和解除屏蔽
       * @param blockUserId
       * 屏蔽的id
       * @param status
       * true ? 屏蔽 : 解除屏蔽
       */ }, { key: "blockMsg", value: function blockMsg(
    blockUserId) {var status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      this.imChartVal.markInBlacklist({
        account: blockUserId,
        isAdd: status, // `true`表示加入黑名单, `false`表示从黑名单移除
        done: function done(error, obj) {
          console.log(obj);
          console.log('将' + obj.account + (
          status ? '加入黑名单' : '从黑名单移除') + (
          !error ? '成功' : '失败'));
        } });

    }

    /**
       *删除消息
       * @param removeId
       * 删除id
       */ }, { key: "DeleteMsg", value: function DeleteMsg(
    removeId) {
      if (!removeId) {
        return Promise.reject("请输入删除的id");
      }

      new _ChatListModel.DealChartListModel(removeId).deleteMsg();
      // this.imChartVal.clearServerHistoryMsgs({
      // 	account: removeId,
      // 	delRoam: false,
      // 	done: (error, obj) => {
      // 		console.log('删除服务器消息' + (!error?'成功':'失败'), error, obj);
      // 		new DealChartListModel(removeId).deleteMsg();
      // 	}
      // });
    }

    /**
       * 获取聊天信息 处理之后的
       * @param messageId
       * @param endTime
       * @param limit
       * @param callback
       */ }, { key: "getHistory", value: function getHistory(
    messageId)
    {var endTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date().getTime();var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};
      ImChart.imChartVal.getHistoryMsgs({
        scene: 'p2p',
        to: messageId,
        limit: limit,
        asc: true,
        endTime: endTime,
        done: function done(error, obj) {
          var msgs = obj.msgs || [];
          var firstLastMsg = msgs.length > 0 ? msgs[0] : {};
          var haveMoreData = true;
          if (msgs.length < limit) {
            haveMoreData = false;
          }
          var name = "";var _iteratorNormalCompletion2 = true;var _didIteratorError2 = false;var _iteratorError2 = undefined;try {
            for (var _iterator2 = msgs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {var info = _step2.value;
              if (info.from == messageId) {
                name = info.fromNick || "";
                break;
              }
            }} catch (err) {_didIteratorError2 = true;_iteratorError2 = err;} finally {try {if (!_iteratorNormalCompletion2 && _iterator2.return != null) {_iterator2.return();}} finally {if (_didIteratorError2) {throw _iteratorError2;}}}
          var list = new DealChartDetail(msgs, messageId).getList();
          callback({
            name: name,
            time: firstLastMsg.time || 0,
            haveMoreData: haveMoreData,
            list: list });

        } });

    }

    /**
       * 获取原始聊天记录
       * @param messageId
       * @param endTime
       * @param limit
       * @returns {Promise<any>}
       */ }, { key: "getHistoryOriginal", value: function getHistoryOriginal(
    messageId) {var endTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date().getTime() + 20000;var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;
      return new Promise(function (resolve, reject) {
        ImChart.imChartVal.getHistoryMsgs({
          scene: 'p2p',
          to: messageId,
          limit: limit,
          asc: true,
          endTime: endTime,
          done: function done(error, obj) {
            resolve(obj);
          } });

      });
    }

    // 判断消息是否已读
  }, { key: "checkMsgIsRead", value: function checkMsgIsRead(msg) {
      return this.imChartVal.isMsgRemoteRead(msg);
    }

    // 已读消息回执给接收方
  }, { key: "sendReadCallback", value: function sendReadCallback() {var messageId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";var msg = arguments.length > 1 ? arguments[1] : undefined;
      if (!msg) {
        this.getHistoryOriginal(messageId, new Date().getTime() + 2000, 2).
        then(function (obj) {
          var lastMsg = {};
          var list = obj.msgs || [];var _iteratorNormalCompletion3 = true;var _didIteratorError3 = false;var _iteratorError3 = undefined;try {
            for (var _iterator3 = list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {var msgItem = _step3.value;
              if (msgItem.from == messageId && Object.keys(lastMsg).length == 0) {
                lastMsg = msgItem;
              }
              if (msgItem.from != messageId) {
                ImChart.checkMsgIsRead(msgItem);
              }
            }} catch (err) {_didIteratorError3 = true;_iteratorError3 = err;} finally {try {if (!_iteratorNormalCompletion3 && _iterator3.return != null) {_iterator3.return();}} finally {if (_didIteratorError3) {throw _iteratorError3;}}}
          if (Object.keys(lastMsg).length > 0) {
            ImChart.imChartVal.sendMsgReceipt({
              msg: lastMsg,
              done: function done(error, obj) {
                console.log('发送消息已读回执' + (!error ? '成功' : '失败'), error, obj);
              } });

          }
        });
        return;
      }

      ImChart.imChartVal.sendMsgReceipt({
        msg: msg,
        done: function done(error, obj) {
          console.log('发送消息已读回执' + (!error ? '成功' : '失败'), error, obj);
        } });

    }

    // 退出登录
  }, { key: "exitLogin", value: function exitLogin() {
      if (!ImChart.imChartVal || !ImChart.imChartVal.disconnect) return;

      ImChart.imChartVal.disconnect();
    } }]);return ImChart;}();


// 发送消息
exports.ImChart = ImChart;_defineProperty(ImChart, "imCloseLoginPath", "/pagesSet/login/login");_defineProperty(ImChart, "serviceId", 618239);_defineProperty(ImChart, "token", "");_defineProperty(ImChart, "accid", "");_defineProperty(ImChart, "uuAccid", "");_defineProperty(ImChart, "imChartVal", null);_defineProperty(ImChart, "userId", "");_defineProperty(ImChart, "inChartDetail", false);_defineProperty(ImChart, "messageId", "");_defineProperty(ImChart, "imConnectStatus", 2);_defineProperty(ImChart, "ImNeedSendShortMessage", null);_defineProperty(ImChart, "willInitConfig", false);_defineProperty(ImChart, "linkFailStatus", 1);var ImSendMessage = /*#__PURE__*/function () {


  function ImSendMessage(messageId) {var imChart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;_classCallCheck(this, ImSendMessage);_defineProperty(this, "messageId", "");_defineProperty(this, "imChart", null);
    this.messageId = messageId;
    this.imChart = imChart;
  }

  // 链接状态更新 返回imChartVal
  _createClass(ImSendMessage, [{ key: "checkConnectStatus", value: function checkConnectStatus() {var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
      if (this.imChart && this.imChart.imChartVal) {
        callback(this.imChart.imChartVal);
        return;
      }

      if (ImChart.getConnnectStatus() == 1) {
        callback(ImChart.imChartVal);
        return;
      }

      if (ImChart.getConnnectStatus() == 2) {
        ImChart.initImUserInfo().
        then(function () {
          callback(ImChart.imChartVal);
        });
        return;
      }

      callback(null);
    }

    // 发送文本消息
  }, { key: "sendText", value: function sendText(text) {var _this2 = this;
      var that = this;
      return new Promise(function (resolve, reject) {
        _this2.checkConnectStatus(function (imChartVal) {
          if (!imChartVal) {
            uni.showToast({ title: "初始化IM失败", icon: "none" });
            reject("初始化IM失败");
            return;
          }

          imChartVal.sendText({
            scene: 'p2p',
            to: that.messageId,
            text: text,
            done: function done(err, msg) {
              resolve(msg);
            } });

        });
      });
    }

    // 发送图片
  }, { key: "sendImage", value: function sendImage(url) {var _this3 = this;
      var that = this;
      return new Promise(function (resolve, reject) {
        _this3.checkConnectStatus(function (imChartVal) {
          if (!imChartVal) {
            uni.showToast({ title: "初始化IM失败", icon: "none" });
            reject("初始化IM失败");
            return;
          }


          that.getImgInfo(url).then(function (imgInfo) {
            resolve({
              w: imgInfo.width,
              h: imgInfo.height,
              url: url,
              isSendUser: true });

          });
          that.previewFile(url, "image").
          then(function (file) {
            imChartVal.sendFile({
              scene: 'p2p',
              to: that.messageId,
              type: 'image',
              file: file,
              done: function done(error, msg) {
                new _Notification.Notification().postNotification(_Notify.Notify.MsgSendSuccessChange.Name, { url: url });
              } });

          });





        });
      });
    }

    // 发送语音消息
    // tempFilePath: 录音成功后返回的文件临时路径
  }, { key: "sendVoice", value: function sendVoice(tempFilePath, duration) {var _this4 = this;
      var that = this;
      return new Promise(function (resolve, reject) {
        _this4.checkConnectStatus(function (imChartVal) {
          if (!imChartVal) {
            uni.showToast({ title: "初始化IM失败", icon: "none" });
            reject("初始化IM失败");
            return;
          }

          imChartVal.sendFile({
            scene: 'p2p',
            to: that.messageId,
            wxFilePath: tempFilePath,
            type: 'audio',
            done: function done(err, msg) {
              var sendSuccess = false;
              if (!err) {
                sendSuccess = true;
              }
              new _Notification.Notification().postNotification(
              _Notify.Notify.MsgSendSuccessChange.Name,
              {
                url: tempFilePath,
                msg: msg,
                sendSuccess: sendSuccess });


            } });

          resolve({
            file: {
              url: tempFilePath,
              dur: duration },

            isSendUser: true });

        });
      });
    }

    // 发送视频消息
    // tempFilePath: 视频后返回的文件临时路径
  }, { key: "sendVideo", value: function sendVideo(tempFilePath) {var _this5 = this;
      var that = this;
      return new Promise(function (resolve, reject) {
        _this5.checkConnectStatus(function (imChartVal) {
          if (!imChartVal) {
            uni.showToast({ title: "初始化IM失败", icon: "none" });
            reject("初始化IM失败");
            return;
          }

          imChartVal.sendFile({
            scene: 'p2p',
            to: that.messageId,
            wxFilePath: tempFilePath,
            type: 'video',
            done: function done(err, msg) {
              resolve(msg);
            } });

        });
      });
    }

    // 获取图片信息
  }, { key: "getImgInfo", value: function getImgInfo(tempFilePath) {
      return new Promise(function (resolve, reject) {
        uni.getImageInfo({
          src: tempFilePath,
          success: function success(image) {
            resolve(image);
          } });

      });
    }

    // 预览文件
  }, { key: "previewFile", value: function previewFile(tempFilePath, type) {var _this6 = this;
      return new Promise(function (resolve, reject) {
        _this6.checkConnectStatus(function (imChartVal) {
          if (!imChartVal) {
            uni.showToast({ title: "初始化IM失败", icon: "none" });
            reject("初始化IM失败");
            return;
          }

          if (type === "image") {
            uni.getImageInfo({
              src: tempFilePath,
              success: function success(image) {

















                imChartVal.previewFile({
                  type: 'image',
                  wxFilePath: tempFilePath,
                  fastPass: "{w:".concat(image.width, ",h:").concat(image.height, ",md5:").concat(_md.default.hex_md5(tempFilePath)),
                  done: function done(error, file) {
                    if (!error) {
                      resolve(file);
                      return;
                    }

                    reject(error);
                  } });


















              } });

          }




        });
      });
    }

    // 再次发送
  }, { key: "againSend", value: function againSend(someMsg, tempFilePath) {var _this7 = this;
      var that = this;
      return new Promise(function (resolve, reject) {
        _this7.checkConnectStatus(function (imChartVal) {
          if (!imChartVal) {
            uni.showToast({ title: "初始化IM失败", icon: "none" });
            reject("初始化IM失败");
            return;
          }

          imChartVal.resendMsg({
            msg: someMsg,
            done: function done(err, msg) {
              var sendFail = true;
              if (!err) {
                sendFail = false;
              }
              new _Notification.Notification().postNotification(
              _Notify.Notify.MsgSendSuccessChange.Name,
              {
                url: tempFilePath,
                msg: msg,
                sendFail: sendFail });


            } });

        });
      });
    }

    // 发送地理位置
  }, { key: "sendLocation", value: function sendLocation() {var _this8 = this;var locationItem = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new PositionChartItem();
      var that = this;
      return new Promise(function (resolve, reject) {
        _this8.checkConnectStatus(function (imChartVal) {
          if (!imChartVal) {
            uni.showToast({ title: "初始化IM失败", icon: "none" });
            reject("初始化IM失败");
            return;
          }

          var imgSrc = new _Utils.Utils().getMapStaticImg(
          locationItem.lat,
          locationItem.lng,
          428, 270);

          uni.downloadFile({
            url: imgSrc,
            success: function success(res) {
              if (res.statusCode === 200) {
                that.previewFile(res.tempFilePath, "image").
                then(function (res) {
                  locationItem.staticImg = res.url;
                  locationItem.url = res.url;
                  locationItem.md5 = res.md5;
                  locationItem.size = res.size;
                  var content = {
                    type: ImChartConst.positionType,
                    data: {
                      locationAddSubTitle: locationItem.address,
                      locationAddTitle: locationItem.name,
                      locationImageUrl: locationItem.staticImg,
                      locationLatitude: locationItem.lat,
                      locationLongitude: locationItem.lng,
                      md5: locationItem.md5,
                      url: locationItem.url,
                      size: locationItem.size } };


                  imChartVal.sendCustomMsg({
                    scene: 'p2p',
                    to: that.messageId,
                    content: JSON.stringify(content),
                    done: function done(err, msg) {
                      var sendSuccess = false;
                      if (!err) {
                        sendSuccess = true;
                      }
                      new _Notification.Notification().postNotification(
                      _Notify.Notify.MsgSendSuccessChange.Name,
                      {
                        url: imgSrc,
                        type: "position",
                        msg: msg,
                        sendSuccess: sendSuccess });


                    } });

                });
              }
            } });

          resolve({
            url: imgSrc,
            locationItem: locationItem,
            isSendUser: true });

        });
      });
    }

    // 发送确认消息  不计入历史记录
  }, { key: "sendNotifyMsg", value: function sendNotifyMsg(messageId) {var _this9 = this;
      var that = this;
      return new Promise(function (resolve, reject) {
        _this9.checkConnectStatus(function (imChartVal) {
          if (!imChartVal) {
            uni.showToast({ title: "初始化IM失败", icon: "none" });
            reject("初始化IM失败");
            return;
          }

          imChartVal.sendCustomSysMsg({
            scene: 'p2p',
            to: messageId,
            sendToOnlineUsersOnly: false,
            content: JSON.stringify({ type: 180, data: { value: "确认消息,不计入历史记录" } }),
            done: function done(err, msg) {
              resolve(msg);
            } });

        });
      });
    } }]);return ImSendMessage;}();



// 处理消息push
exports.ImSendMessage = ImSendMessage;var DealMsgPush = /*#__PURE__*/function () {
  // 会话内容
  // type == text 时的文案

  function DealMsgPush() {var session = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};_classCallCheck(this, DealMsgPush);_defineProperty(this, "session", {});_defineProperty(this, "lastMsgText", "");
    this.session = session;
    if (session && session.lastMsg && session.lastMsg.type == 'text') {
      this.lastMsgText = session.lastMsg.text;
    }
  }

  // 最后一条消息列表文案显示
  _createClass(DealMsgPush, [{ key: "getLastText", value: function getLastText() {
      var type = this.session.lastMsg.type;
      var map = new Map().
      set("text", this.lastMsgText).
      set("image", "[图片]").
      set("audio", "[语音]").
      set("VIDEO", "[视频]").
      set("video", "[视频]").
      set("custom", "新消息");
      if (!map.has(type)) {
        return "你有新消息啦";
      }

      return map.get(type);
    }

    // 列表上的信息
  }, { key: "getMsg", value: function getMsg() {var needUpTab = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var messageId = this.session.lastMsg.to == ImChart.getUuAccid() ?
      this.session.lastMsg.from :
      this.session.lastMsg.to;

      var formatDateMap = new _common.formatDate(new Date(this.session.lastMsg.time));
      var newItem = new ChartListItem();
      newItem.messageId = messageId;
      newItem.headImg = "";
      newItem.name = this.session.lastMsg.to == ImChart.getUuAccid() ?
      this.session.lastMsg.fromNick : "";
      newItem.msg = this.getLastText();
      if (this.session.lastMsg.type === "custom") {
        var content = JSON.parse(this.session.lastMsg.content);
        if (content.type === ImChartConst.positionType) {
          newItem.msg = content.data && content.data.locationAddTitle ? "[\u4F4D\u7F6E] ".concat(
          content.data.locationAddTitle) :
          newItem.msg;
        }
      }
      newItem.lastTime_stamp = formatDateMap.getYear() + "/" + formatDateMap.getMonth() + "/" + formatDateMap.getDay() + " " +
      formatDateMap.getHour() + ":" + formatDateMap.getMinute() + ":" + formatDateMap.getSecond();
      newItem.sendtime = (0, _common.formatTimeNew)(this.session.lastMsg.time);
      newItem.lastTime = (0, _common.formatTimeNew)(this.session.lastMsg.time);
      newItem.unRead = 0;
      newItem.isShield = 0;
      newItem.isShowBtn = false;

      newItem.to = this.session.lastMsg.to;
      newItem.msg_type = this.session.lastMsg.type;
      newItem.msg_timestamp = formatDateMap.getYear() + "-" + formatDateMap.getMonth() + "-" + formatDateMap.getDay() + " " +
      formatDateMap.getHour() + ":" + formatDateMap.getMinute() + ":" + formatDateMap.getSecond();
      if (needUpTab) {
        var num = Number(UpUnReadNumTab.getUnReadNum(messageId) || 0);
        num++;
        var map = new _UnReadMsgModel.UnReadMsgModel().getModel(_LoginSuccessModel.GetLoginModel.getUserId()) || {};
        map[messageId] = num;
        new _UnReadMsgModel.UnReadMsgModel().setModel(map, _LoginSuccessModel.GetLoginModel.getUserId());
        UpUnReadNumTab.setTab();
      }
      return newItem;
    }

    // 详情的信息
  }, { key: "getDetailMsg", value: function getDetailMsg(id) {
      var messageId = this.session.lastMsg.to == ImChart.getUuAccid() ?
      this.session.lastMsg.from :
      this.session.lastMsg.to;

      if (messageId == id) {
        return new DealReceiveMsg(id).getItem(this.session.lastMsg);
      }

      var num = Number(UpUnReadNumTab.getUnReadNum(messageId));
      num++;
      var map = new _UnReadMsgModel.UnReadMsgModel().getModel(_LoginSuccessModel.GetLoginModel.getUserId()) || {};
      map[messageId] = num;
      new _UnReadMsgModel.UnReadMsgModel().setModel(map, _LoginSuccessModel.GetLoginModel.getUserId());
      UpUnReadNumTab.setTab();
      return false;
    } }]);return DealMsgPush;}();



// 更新未读数的角标
var UpUnReadNumTab = /*#__PURE__*/function () {function UpUnReadNumTab() {_classCallCheck(this, UpUnReadNumTab);}_createClass(UpUnReadNumTab, null, [{ key: "setTab",
    // 更新tab
    value: function setTab() {

      var mapInfo = new _UnReadMsgModel.UnReadMsgModel().getModel() || {};
      var map = mapInfo[_LoginSuccessModel.GetLoginModel.getUserId()] || {};
      var listMap = new _ChatListModel.ChatListModel().getModel(_LoginSuccessModel.GetLoginModel.getUserId()) || {};
      var allNum = 0;
      for (var key in map) {
        if (_ProjectConfigConst.ProjectConfigConst.getNoDealIds().includes(key)) continue;

        if (!listMap[key]) continue;

        allNum += Number(map[key]);
      }
      if (allNum > 0) {
        uni.setTabBarBadge({
          index: 2,
          text: allNum + "" });

        return;
      }

      this.removeTab();

    }

    // 删除指定id的未读数
  }, { key: "removeReadNum", value: function removeReadNum() {var messageId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      if (!messageId) return;

      var mapInfo = new _UnReadMsgModel.UnReadMsgModel().getModel() || {};
      var map = mapInfo[_LoginSuccessModel.GetLoginModel.getUserId()] || {};
      delete map[messageId];
      mapInfo[_LoginSuccessModel.GetLoginModel.getUserId()] = map;
      new _UnReadMsgModel.UnReadMsgModel().setModel(mapInfo);
      this.setTab();

    }

    // 移除tab文案
  }, { key: "removeTab", value: function removeTab() {

      uni.removeTabBarBadge({ index: 2 });

    }

    // 获取未读数
  }, { key: "getUnReadNum", value: function getUnReadNum() {var accid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var mapInfo = new _UnReadMsgModel.UnReadMsgModel().getModel() || {};
      var map = mapInfo[_LoginSuccessModel.GetLoginModel.getUserId()] || {};
      return map[accid] || 0;
    }

    // 更新提醒未读数
  }, { key: "upRemindUnReadNum", value: function upRemindUnReadNum() {
      var mapInfo = new _UnReadMsgModel2.UnReadRemindModel().getModel() || {};
      var num = mapInfo[_LoginSuccessModel.GetLoginModel.getUserId()] || 0;
      num++;
      mapInfo[_LoginSuccessModel.GetLoginModel.getUserId()] = num;
      new _UnReadMsgModel2.UnReadRemindModel().setModel(mapInfo, _LoginSuccessModel.GetLoginModel.getUserId());
    } }]);return UpUnReadNumTab;}();



// 表情map
exports.UpUnReadNumTab = UpUnReadNumTab;var GetEmojiMap = /*#__PURE__*/function () {function GetEmojiMap() {_classCallCheck(this, GetEmojiMap);}_createClass(GetEmojiMap, [{ key: "getMap", value: function getMap()
    {
      var emojiCommonMap = {
        "[大笑]": { file: "emoji_0.png" },
        "[可爱]": { file: "emoji_01.png" },
        "[色]": { file: "emoji_02.png" },
        "[嘘]": { file: "emoji_03.png" },
        "[亲]": { file: "emoji_04.png" },
        "[呆]": { file: "emoji_05.png" },
        "[口水]": { file: "emoji_06.png" },
        "[汗]": { file: "emoji_145.png" },
        "[呲牙]": { file: "emoji_07.png" },
        "[鬼脸]": { file: "emoji_08.png" },
        "[害羞]": { file: "emoji_09.png" },
        "[偷笑]": { file: "emoji_10.png" },
        "[调皮]": { file: "emoji_11.png" },
        "[可怜]": { file: "emoji_12.png" },
        "[敲]": { file: "emoji_13.png" },
        "[惊讶]": { file: "emoji_14.png" },
        "[流感]": { file: "emoji_15.png" },
        "[委屈]": { file: "emoji_16.png" },
        "[流泪]": { file: "emoji_17.png" },
        "[嚎哭]": { file: "emoji_18.png" },
        "[惊恐]": { file: "emoji_19.png" },
        "[怒]": { file: "emoji_20.png" },
        "[酷]": { file: "emoji_21.png" },
        "[不说]": { file: "emoji_22.png" },
        "[鄙视]": { file: "emoji_23.png" },
        "[阿弥陀佛]": { file: "emoji_24.png" },
        "[奸笑]": { file: "emoji_25.png" },
        "[睡着]": { file: "emoji_26.png" },
        "[口罩]": { file: "emoji_27.png" },
        "[努力]": { file: "emoji_28.png" },
        "[抠鼻孔]": { file: "emoji_29.png" },
        "[疑问]": { file: "emoji_30.png" },
        "[怒骂]": { file: "emoji_31.png" },
        "[晕]": { file: "emoji_32.png" },
        "[呕吐]": { file: "emoji_33.png" },
        "[拜一拜]": { file: "emoji_160.png" },
        "[惊喜]": { file: "emoji_161.png" },
        "[流汗]": { file: "emoji_162.png" },
        "[卖萌]": { file: "emoji_163.png" },
        "[默契眨眼]": { file: "emoji_164.png" },
        "[烧香拜佛]": { file: "emoji_165.png" },
        "[晚安]": { file: "emoji_166.png" },
        "[强]": { file: "emoji_34.png" },
        "[弱]": { file: "emoji_35.png" },
        "[OK]": { file: "emoji_36.png" },
        "[拳头]": { file: "emoji_37.png" },
        "[胜利]": { file: "emoji_38.png" },
        "[鼓掌]": { file: "emoji_39.png" },
        "[握手]": { file: "emoji_200.png" },
        "[发怒]": { file: "emoji_40.png" },
        "[骷髅]": { file: "emoji_41.png" },
        "[便便]": { file: "emoji_42.png" },
        "[火]": { file: "emoji_43.png" },
        "[溜]": { file: "emoji_44.png" },
        "[爱心]": { file: "emoji_45.png" },
        "[心碎]": { file: "emoji_46.png" },
        "[钟情]": { file: "emoji_47.png" },
        "[唇]": { file: "emoji_48.png" },
        "[戒指]": { file: "emoji_49.png" },
        "[钻石]": { file: "emoji_50.png" },
        "[太阳]": { file: "emoji_51.png" },
        "[有时晴]": { file: "emoji_52.png" },
        "[多云]": { file: "emoji_53.png" },
        "[雷]": { file: "emoji_54.png" },
        "[雨]": { file: "emoji_55.png" },
        "[雪花]": { file: "emoji_56.png" },
        "[爱人]": { file: "emoji_57.png" },
        "[帽子]": { file: "emoji_58.png" },
        "[皇冠]": { file: "emoji_59.png" },
        "[篮球]": { file: "emoji_60.png" },
        "[足球]": { file: "emoji_61.png" },
        "[垒球]": { file: "emoji_62.png" },
        "[网球]": { file: "emoji_63.png" },
        "[台球]": { file: "emoji_64.png" },
        "[咖啡]": { file: "emoji_65.png" },
        "[啤酒]": { file: "emoji_66.png" },
        "[干杯]": { file: "emoji_67.png" },
        "[柠檬汁]": { file: "emoji_68.png" },
        "[餐具]": { file: "emoji_69.png" },
        "[汉堡]": { file: "emoji_70.png" },
        "[鸡腿]": { file: "emoji_71.png" },
        "[面条]": { file: "emoji_72.png" },
        "[冰淇淋]": { file: "emoji_73.png" },
        "[沙冰]": { file: "emoji_74.png" },
        "[生日蛋糕]": { file: "emoji_75.png" },
        "[蛋糕]": { file: "emoji_76.png" },
        "[糖果]": { file: "emoji_77.png" },
        "[葡萄]": { file: "emoji_78.png" },
        "[西瓜]": { file: "emoji_79.png" },
        "[光碟]": { file: "emoji_80.png" },
        "[手机]": { file: "emoji_81.png" },
        "[电话]": { file: "emoji_82.png" },
        "[电视]": { file: "emoji_83.png" },
        "[声音开启]": { file: "emoji_84.png" },
        "[声音关闭]": { file: "emoji_85.png" },
        "[铃铛]": { file: "emoji_86.png" },
        "[锁头]": { file: "emoji_87.png" },
        "[放大镜]": { file: "emoji_88.png" },
        "[灯泡]": { file: "emoji_89.png" },
        "[锤头]": { file: "emoji_90.png" },
        "[烟]": { file: "emoji_91.png" },
        "[炸弹]": { file: "emoji_92.png" },
        "[枪]": { file: "emoji_93.png" },
        "[刀]": { file: "emoji_94.png" },
        "[药]": { file: "emoji_95.png" },
        "[打针]": { file: "emoji_96.png" },
        "[钱袋]": { file: "emoji_97.png" },
        "[钞票]": { file: "emoji_98.png" },
        "[银行卡]": { file: "emoji_99.png" },
        "[手柄]": { file: "emoji_100.png" },
        "[麻将]": { file: "emoji_101.png" },
        "[调色板]": { file: "emoji_102.png" },
        "[电影]": { file: "emoji_103.png" },
        "[麦克风]": { file: "emoji_104.png" },
        "[耳机]": { file: "emoji_105.png" },
        "[音乐]": { file: "emoji_106.png" },
        "[吉他]": { file: "emoji_107.png" },
        "[火箭]": { file: "emoji_108.png" },
        "[飞机]": { file: "emoji_109.png" },
        "[火车]": { file: "emoji_110.png" },
        "[公交]": { file: "emoji_111.png" },
        "[轿车]": { file: "emoji_112.png" },
        "[出租车]": { file: "emoji_113.png" },
        "[警车]": { file: "emoji_114.png" },
        "[自行车]": { file: "emoji_115.png" } };

      return JSON.parse(JSON.stringify(emojiCommonMap));
    } }, { key: "dealEmojiSwiperData", value: function dealEmojiSwiperData()

    {
      var emojiBaseUrl = 'https://zdzfapi.haofang.net/Public/wxApp/images';
      var emojiItem = this.getMap();
      var emojiTextArr = [];
      var arr = [];
      var emojiList = [];
      for (var key in emojiItem) {
        var keytext = key.replace(/\[|\]/g, '');
        emojiTextArr.push(keytext);
        var obj = {};
        obj.file = emojiItem[key].file;
        obj.img = emojiBaseUrl + "/emoji/" + emojiItem[key]['file'] + "?t=20190727";
        obj.fileName = key;
        arr.push(obj);
        if (arr.length >= 27) {
          emojiList.push(arr);
          arr = [];
        }
      }
      if (arr.length < 27) {
        emojiList.push(arr);
      }
      return {
        emojiText: emojiTextArr,
        emojiList: emojiList };

    } }]);return GetEmojiMap;}();



// 处理发送来的消息
exports.GetEmojiMap = GetEmojiMap;var DealReceiveMsg = /*#__PURE__*/function () {

  function DealReceiveMsg() {var messageId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";_classCallCheck(this, DealReceiveMsg);_defineProperty(this, "messageId", "");
    this.messageId = messageId;
  }_createClass(DealReceiveMsg, [{ key: "getItem", value: function getItem(

    item) {
      return this[this.getType(item.type == undefined ? "" : item.type).event](item);
    } }, { key: "getType", value: function getType()

    {var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var map = new Map().
      set("text", { type: "text", event: "dealText" }).
      set("image", { type: "img", event: "dealImg" }).
      set("audio", { type: "voice", event: "dealVoice" }).
      set("video", { type: "video", event: "dealVideo" }).
      set("custom", { type: "position", event: "dealPosition" });
      if (!map.has(type)) return { type: "null", event: "dealNull" };

      return map.get(type);
    } }, { key: "dealNull", value: function dealNull()

    {
      return null;
    } }, { key: "dealText", value: function dealText()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var emoji = this.dealEmoji(info.text || "");
      var item = new ChartDetailItem();
      item.type = "text";
      item.content = info.text || "";
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.emoji = emoji;
      item.timeStr = info.time;
      item.hasEmoji = emoji[1].length > 0;
      item.showTime = DealLastMsgTime.checkShowTime(this.messageId, info.time);
      DealLastMsgTime.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealImg", value: function dealImg()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var item = new ChartDetailItem();
      item.type = "img";
      item.content = info.file ? info.file.url || "" : "";
      item.time = (0, _common.formatTimeNew)(info.time);
      item.timeStr = info.time;
      item.mySend = info.from == ImChart.uuAccid;
      item.showTime = DealLastMsgTime.checkShowTime(this.messageId, info.time);
      DealLastMsgTime.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealVoice", value: function dealVoice()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var item = new ChartDetailItem();
      item.type = "voice";
      item.voiceMd5 = info.file ? info.file.md5 || "" : "";
      item.content = info.file && info.file.url ? info.file.url + "?audioTrans&type=mp3" : "";
      item.time = (0, _common.formatTimeNew)(info.time);
      item.timeStr = info.time;
      item.mySend = info.from == ImChart.uuAccid;
      item.voiceLength = info.file && info.file.dur ? Math.round(Number(info.file.dur) / 1000) : 1;
      item.showTime = DealLastMsgTime.checkShowTime(this.messageId, info.time);
      DealLastMsgTime.setTime(info.time, this.messageId);
      var unReadVoiceMap = new _UnReadMsgModel2.UnReadVoiceModel().getModel() || {};
      unReadVoiceMap[info.file.md5] = true;
      new _UnReadMsgModel2.UnReadVoiceModel().setModel(unReadVoiceMap);
      return item;
    } }, { key: "dealVideo", value: function dealVideo()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var item = new ChartDetailItem();
      item.type = "video";
      item.content = info.file ? info.file.url || "" : "";
      item.time = (0, _common.formatTimeNew)(info.time);
      item.timeStr = info.time;
      item.mySend = info.from === ImChart.uuAccid;
      item.voiceLength = info.file && info.file.dur ? Math.round(Number(info.file.dur) / 1000) : 1;
      item.showTime = DealLastMsgTime.checkShowTime(this.messageId, info.time);
      DealLastMsgTime.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealPosition", value: function dealPosition()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var positionInfo = info.content ? JSON.parse(info.content) : {};
      var positionData = positionInfo.data || {};
      var positionItem = new PositionChartItem();
      positionItem.name = positionData.locationAddTitle || "";
      positionItem.address = positionData.locationAddSubTitle || "";
      positionItem.lat = positionData.locationLatitude || 0;
      positionItem.lng = positionData.locationLongitude || 0;
      positionItem.staticImg = positionData.locationImageUrl ?
      positionData.locationImageUrl.indexOf("?") === -1 ?
      positionData.locationImageUrl + positionItem.getImgKey() :
      positionData.locationImageUrl + positionItem.getImgKey2() :
      "";

      var item = new ChartDetailItem();
      item.type = "position";
      item.content = positionItem;
      item.time = (0, _common.formatTimeNew)(info.time);
      item.timeStr = info.time;
      item.mySend = info.from == ImChart.uuAccid;
      item.showTime = DealLastMsgTime.checkShowTime(this.messageId, info.time);
      DealLastMsgTime.setTime(info.time, this.messageId);
      // 安卓时增加位置缓存
      if (info.fromClientType && info.fromClientType.indexOf("droid") >= 0) {
        var PositionChartModelMap = new _PositionChartModel.PositionChartModel().getModel(this.messageId) || {};
        PositionChartModelMap[info.time] = item;
        new _PositionChartModel.PositionChartModel().setModel(PositionChartModelMap, this.messageId);
      }
      return item;
    }

    /**
       * 通过正则替换掉文本消息中的emoji表情
       * @param text：文本消息内容
       */ }, { key: "dealEmoji", value: function dealEmoji(
    text) {
      var emoji = new GetEmojiMap().getMap();
      var re = /\[([^\]\[]*)\]/g;
      var matches = text.match(re) || [];
      var txtArr = text.split(/(\[[^\]]+\])/g);
      var emojiArr = [];
      var txtEmoji = [];
      var newTextArr = [];

      for (var j = 0, len = matches.length; j < len; ++j) {
        if (typeof emoji[matches[j]] == 'undefined') {
          delete matches[j];
          continue;
        }

        var url = "http://cdn.haofang.net/static/uuminiapp/emoji/" + emoji[matches[j]].file;

        if (emoji[matches[j]]) {
          emojiArr.push(url);
        }

        for (var i = 0, leng = txtArr.length; i < leng; ++i) {
          if (txtArr[i] == matches[j]) {
            txtArr[i] = {
              emoji: true,
              url: url };

          } else if (txtArr[i] == '') {
            delete txtArr[i];
          }
        }
      }

      txtArr.map(function (item) {
        newTextArr.push(item);
      });
      txtEmoji.push(newTextArr);
      txtEmoji.push(emojiArr);
      return txtEmoji;
    } }]);return DealReceiveMsg;}();



// 处理聊天详情
exports.DealReceiveMsg = DealReceiveMsg;var DealChartDetail = /*#__PURE__*/function () {



  function DealChartDetail() {var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];var messageId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";_classCallCheck(this, DealChartDetail);_defineProperty(this, "list", []);_defineProperty(this, "messageId", "");
    this.list = list;
    this.messageId = messageId;
    this.upTime = new _UnReadMsgTimeModel.UnReadMsgTimeModel().getModel(this.messageId) || 0;
    DealLastMsgTime.setTime(0, this.messageId);
    if (this.list.data) {
      this.list = [];
    }
  }_createClass(DealChartDetail, [{ key: "getList", value: function getList()

    {var _this10 = this;
      var list = [];
      var haveMySendMsg = null; // 是否有自己发送的消息
      var haveOtherSendMsg = null; // 是否有对方发送的消息
      DealLastMsgTimeStatic.lastTime = 0;
      this.list.map(function (item) {
        var eventVal = _this10[_this10.getType(item.type == undefined ? "" : item.type).event](item);
        if (eventVal) {
          if (eventVal.mySend) {
            haveMySendMsg = eventVal;
          } else {
            haveOtherSendMsg = eventVal;
          }
          list.push(eventVal);
        }
      });

      // 最后再更新一次
      DealLastMsgTime.setTime(DealLastMsgTimeStatic.lastTime, this.messageId);
      var unReadMsgTime = new _UnReadMsgTimeModel.UnReadMsgTimeModel().getModel(this.messageId);

      if (list.length > 0 && haveMySendMsg && haveOtherSendMsg &&
      haveMySendMsg.timeStr && (
      !unReadMsgTime || haveMySendMsg.timeStr > unReadMsgTime)) {
        new _UnReadMsgTimeModel.UnReadMsgTimeModel().setModel(haveOtherSendMsg.timeStr, this.messageId);
      }
      return list;
    } }, { key: "getType", value: function getType()

    {var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      var map = new Map().
      set("text", { type: "text", event: "dealText" }).
      set("image", { type: "img", event: "dealImg" }).
      set("audio", { type: "voice", event: "dealVoice" }).
      set(3, { type: "video", event: "dealVideo" }).
      set("custom", { type: "custom", event: "dealService" }).
      set(100, { type: "text", event: "dealService" });
      if (!map.has(type)) return { type: "null", event: "dealNull" };

      return map.get(type);
    } }, { key: "checkIsRead", value: function checkIsRead(

    time) {
      if (!this.upTime) return true;

      return !(time > this.upTime);
    } }, { key: "dealNull", value: function dealNull(

    ifno) {
      return null;
    } }, { key: "dealText", value: function dealText()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var emoji = this.dealEmoji(info.text || "");
      var item = new ChartDetailItem();
      item.type = "text";
      item.content = info.text || "";
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.emoji = emoji;
      item.isRead = this.checkIsRead(info.time);
      item.timeStr = info.time;
      item.hasEmoji = emoji[1].length > 0;
      item.showTime = DealLastMsgTimeStatic.checkShowTime(this.messageId, info.time);
      DealLastMsgTimeStatic.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealService", value: function dealService()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      info.body = JSON.parse(info.content);
      // 处理房源类型
      if (info.body && info.body.type == 14) {
        return this.dealHouse(info);
      }

      // 地理位置
      if (info.body && info.body.type == ImChartConst.positionType) {
        return this.dealPosition(info);
      }

      // 撩客 文案
      if (info.body && info.body.type == 123) {
        return this.dealText({
          body: {
            msg: info.body.data ? info.body.data.CONTENT || "" : "" },

          sendtime: info.time,
          from: info.from });

      }

      // 撩客 房源
      if (info.body && info.body.type == 130) {
        return this.dealHouseLiaoKe(info);
      }

      // 聊天评价
      if (info.body && info.body.type == new _ImEvaluateDeal.ImEvaluateDeal().evaluateMsgType) {
        return this.dealEvaluate(info);
      }

      // 物业房源
      if (info.body && info.body.type == 124) {
        return this.dealHouseWuYe(info);
      }

      // 物业房源登记文案
      if (info.body && info.body.type == 125) {
        return this.dealHouseWuYeText(info);
      }

      var emoji = this.dealEmoji(info.body && info.body.data ? info.body.data.TITLE || "" : "");
      var item = new ChartDetailItem();
      item.type = "text";
      item.content = info.body && info.body.data ? info.body.data.TITLE || "" : "";
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.timeStr = info.time;
      item.emoji = emoji;
      item.isRead = this.checkIsRead(info.time);
      item.hasEmoji = emoji[1].length > 0;
      item.showTime = DealLastMsgTime.checkShowTime(this.messageId, info.time);
      DealLastMsgTime.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealImg", value: function dealImg()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var item = new ChartDetailItem();
      item.type = "img";
      item.timeStr = info.time;
      item.isRead = this.checkIsRead(info.time);
      item.content = info.file ? info.file.url || "" : "";
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.width = info.file.w;
      item.height = info.file.h;
      item.showTime = DealLastMsgTimeStatic.checkShowTime(this.messageId, info.time);
      DealLastMsgTimeStatic.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealVoice", value: function dealVoice()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var item = new ChartDetailItem();
      item.type = "voice";
      item.isRead = this.checkIsRead(info.time);
      item.timeStr = info.time;
      item.voiceMd5 = info.file ? info.file.md5 || "" : "";
      item.content = info.file && info.file.url ? info.file.url + "?audioTrans&type=mp3" : "";
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.voiceLength = info.file && info.file.dur ? Math.round(Number(info.file.dur) / 1000) : 1;
      item.showTime = DealLastMsgTimeStatic.checkShowTime(this.messageId, info.time);
      DealLastMsgTimeStatic.setTime(info.time);
      return item;
    } }, { key: "dealVideo", value: function dealVideo()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var item = new ChartDetailItem();
      item.type = "video";
      item.isRead = this.checkIsRead(info.time);
      item.timeStr = info.time;
      item.content = info.body ? info.body.url || "" : "";
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from === ImChart.uuAccid;
      item.voiceLength = info.body && info.body.dur ? Math.round(Number(info.body.dur) / 1000) : 1;
      item.showTime = DealLastMsgTimeStatic.checkShowTime(this.messageId, info.time);
      DealLastMsgTimeStatic.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealHouse", value: function dealHouse()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var houseItem = new _Const.ErHouseListItem();
      var item = new ChartDetailItem();
      var data = info.body ? info.body.data || {} : {};
      var idInfo = info.ext ? JSON.parse(info.ext) : {};
      houseItem.houseTitle = data.TITLE || "";
      houseItem.houseTing = (data.HOUSEROOM && parseInt(data.HOUSEROOM) ? data.HOUSEROOM + "室" : "") + (
      data.HOUSEROOM && parseInt(data.HOUSEROOM) && data.HOUSETING && parseInt(data.HOUSETING) ?
      data.HOUSETING + "厅" : "");
      houseItem.houseArea = data.HOUSEAREA || "";
      houseItem.houseTotalPriceUnit = data.HOUSEPRICEUNIT || "";
      houseItem.houseName = data.BUILDNAME || "";
      houseItem.houseTotalPrice = data.HOUSEPRICE && parseInt(data.HOUSEPRICE) ?
      parseInt(data.HOUSEPRICE) || "" : "";
      houseItem.housePriceOfArea = data.HOUSEUNITPRICE && parseInt(data.HOUSEUNITPRICE) ?
      parseInt(data.HOUSEUNITPRICE) || "" : "";
      houseItem.houseImg = data.PHOTO || _Const.Const.houseDefaultImg;
      houseItem.houseId = idInfo.CASE_ID || idInfo.ASE_ID || "";
      houseItem.cityId = idInfo.cityId || new _GpsInfoModel.GpsInfoModel().getModel("cityInfo").cityId || "";
      houseItem.caseType = idInfo.CASE_TYPE || "";
      houseItem.reSource = idInfo.reSource || "";

      item.type = "house";
      item.isRead = this.checkIsRead(info.time);
      item.content = houseItem;
      item.timeStr = info.time;
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.emoji = [];
      item.hasEmoji = false;
      item.showTime = DealLastMsgTimeStatic.checkShowTime(this.messageId, info.time);
      DealLastMsgTimeStatic.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealPosition", value: function dealPosition()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var positionData = info.body ? info.body.data || {} : {};
      var positionItem = new PositionChartItem();
      positionItem.name = positionData.locationAddTitle || "";
      positionItem.address = positionData.locationAddSubTitle || "";
      positionItem.lat = positionData.locationLatitude || 0;
      positionItem.lng = positionData.locationLongitude || 0;
      positionItem.staticImg = positionData.locationImageUrl ?
      positionData.locationImageUrl.indexOf("?") === -1 ?
      positionData.locationImageUrl + positionItem.getImgKey() :
      positionData.locationImageUrl + positionItem.getImgKey2() :
      "";

      var item = new ChartDetailItem();
      item.type = "position";
      item.content = positionItem;
      item.timeStr = info.time;
      item.isRead = this.checkIsRead(info.time);
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.showTime = DealLastMsgTimeStatic.checkShowTime(this.messageId, info.time);
      DealLastMsgTimeStatic.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealHouseLiaoKe", value: function dealHouseLiaoKe()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var houseItem = new _Const.ErHouseListItem();
      var item = new ChartDetailItem();
      var data = info.body ? info.body.data || {} : {};
      var ext = info.ext ? JSON.parse(info.ext) : {};
      houseItem.houseTitle = ext.houseTitle || data.CONTENT || "";
      houseItem.houseUnitPrice = ext.houseUnitPrice ?
      parseInt(ext.houseUnitPrice) + "元/㎡" : "";
      houseItem.tingWeiText = (ext.houseRoom && parseInt(ext.houseRoom) ?
      parseInt(ext.houseRoom) + "室" : "") + (
      ext.houseRoom && ext.houseTing && parseInt(ext.houseTing) ?
      parseInt(ext.houseTing) + "厅" : "") + (
      ext.houseRoom && parseInt(ext.houseRoom) ? " | " : "") + (
      ext.houseArea && parseInt(ext.houseArea) ?
      parseInt(ext.houseArea) + "㎡" : "") + (
      ext.houseDirect && ext.houseDirect != "null" && isNaN(ext.houseDirect) ?
      " | " + ext.houseDirect : "") + (
      ext.buildName ? " | " + ext.buildName : "");
      houseItem.houseName = ext.buildName || "";
      houseItem.houseTotalPrice = ext.housePrice && parseInt(ext.housePrice) ?
      parseInt(ext.housePrice) + (ext.housePriceUnit || "") : "";
      houseItem.houseImg = !ext.housePhoto ?
      data.PHOTO || _Const.Const.houseDefaultImg :
      ext.housePhoto || _Const.Const.houseDefaultImg;
      houseItem.houseId = ext.houseId || "";
      houseItem.cityId = ext.cityId || new _GpsInfoModel.GpsInfoModel().getModel("cityInfo").cityId || "";
      houseItem.caseType = ext.caseType || "";
      houseItem.reSource = ext.contentType || "1";

      item.type = "houseLiaoKe";
      item.isRead = this.checkIsRead(info.time);
      item.content = houseItem;
      item.timeStr = info.time;
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.emoji = [];
      item.hasEmoji = false;
      item.showTime = DealLastMsgTimeStatic.checkShowTime(this.messageId, info.time);
      DealLastMsgTimeStatic.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealEvaluate", value: function dealEvaluate(

    info) {
      var ext = info.ext ? JSON.parse(info.ext) : {};
      var item = new ChartDetailItem();
      var evaluateItem = new EvaluateChartItem();
      evaluateItem.evaContent = ext.evaContent || "";
      evaluateItem.evaStar = ext.evaStar || 1;
      evaluateItem.evaTagIndex = ext.evaTagIndex || "";

      item.type = "evaluate";
      item.isRead = this.checkIsRead(info.time);
      item.content = evaluateItem;
      item.timeStr = info.time;
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.emoji = [];
      item.hasEmoji = false;
      item.showTime = DealLastMsgTimeStatic.checkShowTime(this.messageId, info.time);
      DealLastMsgTimeStatic.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealHouseWuYe", value: function dealHouseWuYe()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var houseItem = new WuYeHouseChartItem();
      var item = new ChartDetailItem();
      var data = info.ext ? JSON.parse(info.ext) : {};
      houseItem.houseTitle = data.houseSubject || "";
      houseItem.houseRoof = data.houseRoof ? data.houseRoof + "栋" : "";
      houseItem.houseUnit = data.houseUnit ? data.houseUnit + "单元" : "";
      houseItem.houseFloor = data.houseFloor ? data.houseFloor + "楼" : "";
      houseItem.houseNum = data.houseNum ? data.houseNum + "号" : "";
      houseItem.tipMsg = data.tipMsg || "";
      houseItem.houseArea = data.houseArea || "";
      houseItem.housePrice = data.housePrice || "";
      houseItem.houseName = data.houseBuildName || "";
      houseItem.houseImg = data.thumbUrl || _Const.Const.houseDefaultImg;
      houseItem.houseId = data.caseId || "";
      houseItem.cityId = data.cityId || new _GpsInfoModel.GpsInfoModel().getModel("cityInfo").cityId || "";
      houseItem.caseType = data.caseType || "";

      item.type = "houseWuYe";
      item.isRead = this.checkIsRead(info.time);
      item.content = houseItem;
      item.timeStr = info.time;
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.emoji = [];
      item.hasEmoji = false;
      item.showTime = DealLastMsgTimeStatic.checkShowTime(this.messageId, info.time);
      DealLastMsgTimeStatic.setTime(info.time, this.messageId);
      return item;
    } }, { key: "dealHouseWuYeText", value: function dealHouseWuYeText()

    {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var houseItem = new WuYeHouseTextChartItem();
      var item = new ChartDetailItem();
      var data = info.ext ? JSON.parse(info.ext) : {};
      houseItem.houseTitle = data.houseSubject || "";
      houseItem.buildName = data.houseBuildName || "";
      houseItem.tipMsg = data.tipMsg || "";
      houseItem.houseArea = data.houseArea || "";
      houseItem.housePrice = data.housePrice || "";
      houseItem.houseUseage = data.houseUseage || "";
      houseItem.houseFitment = data.houseFitment || "";

      item.type = "houseWuYeText";
      item.isRead = this.checkIsRead(info.time);
      item.content = houseItem;
      item.timeStr = info.time;
      item.time = (0, _common.formatTimeNew)(info.time);
      item.mySend = info.from == ImChart.uuAccid;
      item.emoji = [];
      item.hasEmoji = false;
      item.showTime = DealLastMsgTimeStatic.checkShowTime(this.messageId, info.time);
      DealLastMsgTimeStatic.setTime(info.time, this.messageId);
      return item;
    }

    /**
       * 通过正则替换掉文本消息中的emoji表情
       * @param text：文本消息内容
       */ }, { key: "dealEmoji", value: function dealEmoji(
    text) {
      var emoji = new GetEmojiMap().getMap();
      var re = /\[([^\]\[]*)\]/g;
      var matches = text.match(re) || [];
      var txtArr = text.split(/(\[[^\]]+\])/g);
      var emojiArr = [];
      var txtEmoji = [];
      var newTextArr = [];

      for (var j = 0, len = matches.length; j < len; ++j) {
        if (typeof emoji[matches[j]] == 'undefined') {
          delete matches[j];
          continue;
        }

        var url = "http://cdn.haofang.net/static/uuminiapp/emoji/" + emoji[matches[j]].file;

        if (emoji[matches[j]]) {
          emojiArr.push(url);
        }

        for (var i = 0, leng = txtArr.length; i < leng; ++i) {
          if (txtArr[i] == matches[j]) {
            txtArr[i] = {
              emoji: true,
              url: url };

          } else if (txtArr[i] == '') {
            delete txtArr[i];
          }
        }
      }

      txtArr.map(function (item) {
        newTextArr.push(item);
      });
      txtEmoji.push(newTextArr);
      txtEmoji.push(emojiArr);
      return txtEmoji;
    } }]);return DealChartDetail;}();exports.DealChartDetail = DealChartDetail;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 22:
/*!**************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/md5.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 /*
               * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
               * Digest Algorithm, as defined in RFC 1321.
               * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
               * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
               * Distributed under the BSD License
               * See http://pajhome.org.uk/crypt/md5 for more info.
               */

/*
                   * Configurable variables. You may need to tweak these to be compatible with
                   * the server-side, but the defaults work in most cases.
                   */
var hexcase = 0; /* hex output format. 0 - lowercase; 1 - uppercase        */
var b64pad = ""; /* base-64 pad character. "=" for strict RFC compliance   */
var chrsz = 8; /* bits per input character. 8 - ASCII; 16 - Unicode      */

/*
                                                                             * These are the functions you'll usually want to call
                                                                             * They take string arguments and return either hex or base-64 encoded strings
                                                                             */
function hex_md5(s) {return binl2hex(core_md5(str2binl(s), s.length * chrsz));}
function array_md5(s) {return binl2array(core_md5(array2binl(s), s.length * chrsz));}
function b64_md5(s) {return binl2b64(core_md5(str2binl(s), s.length * chrsz));}
function str_md5(s) {return binl2str(core_md5(str2binl(s), s.length * chrsz));}
function hex_hmac_md5(key, data) {return binl2hex(core_hmac_md5(key, data));}
function b64_hmac_md5(key, data) {return binl2b64(core_hmac_md5(key, data));}
function str_hmac_md5(key, data) {return binl2str(core_hmac_md5(key, data));}

/*
                                                                               * Perform a simple self-test to see if the VM is working
                                                                               */
function md5_vm_test()
{
  return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";
}

/*
   * Calculate the MD5 of an array of little-endian words, and a bit length
   */
function core_md5(x, len)
{
  /* append padding */
  x[len >> 5] |= 0x80 << len % 32;
  x[(len + 64 >>> 9 << 4) + 14] = len;

  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;

  for (var i = 0; i < x.length; i += 16)
  {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;

    a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
    d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);

    a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
    a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);

    a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
    c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);

    a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
    d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);

    a = safe_add(a, olda);
    b = safe_add(b, oldb);
    c = safe_add(c, oldc);
    d = safe_add(d, oldd);
  }
  return Array(a, b, c, d);

}

/*
   * These functions implement the four basic operations the algorithm uses.
   */
function md5_cmn(q, a, b, x, s, t)
{
  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
}
function md5_ff(a, b, c, d, x, s, t)
{
  return md5_cmn(b & c | ~b & d, a, b, x, s, t);
}
function md5_gg(a, b, c, d, x, s, t)
{
  return md5_cmn(b & d | c & ~d, a, b, x, s, t);
}
function md5_hh(a, b, c, d, x, s, t)
{
  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5_ii(a, b, c, d, x, s, t)
{
  return md5_cmn(c ^ (b | ~d), a, b, x, s, t);
}

/*
   * Calculate the HMAC-MD5, of a key and some data
   */
function core_hmac_md5(key, data)
{
  var bkey = str2binl(key);
  if (bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);

  var ipad = Array(16),opad = Array(16);
  for (var i = 0; i < 16; i++)
  {
    ipad[i] = bkey[i] ^ 0x36363636;
    opad[i] = bkey[i] ^ 0x5C5C5C5C;
  }

  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
  return core_md5(opad.concat(hash), 512 + 128);
}

/*
   * Add integers, wrapping at 2^32. This uses 16-bit operations internally
   * to work around bugs in some JS interpreters.
   */
function safe_add(x, y)
{
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 0xFFFF;
}

/*
   * Bitwise rotate a 32-bit number to the left.
   */
function bit_rol(num, cnt)
{
  return num << cnt | num >>> 32 - cnt;
}

/*
   * Convert a string to an array of little-endian words
   * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.
   */


function str2binl(str)
{
  var bin = Array();
  var mask = (1 << chrsz) - 1;
  for (var i = 0; i < str.length * chrsz; i += chrsz) {
    bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << i % 32;}
  return bin;
}

function array2binl(array)
{
  var bin = Array();
  var mask = (1 << chrsz) - 1;
  for (var i = 0; i < array.length * chrsz; i += chrsz) {
    bin[i >> 5] |= (array[i / chrsz] & mask) << i % 32;}
  return bin;
}

/*
   * Convert an array of little-endian words to a string
   */
function binl2str(bin)
{
  var str = "";
  var mask = (1 << chrsz) - 1;
  for (var i = 0; i < bin.length * 32; i += chrsz) {
    str += String.fromCharCode(bin[i >> 5] >>> i % 32 & mask);}
  return str;
}

/*
   * Convert an array of little-endian words to a hex string.
   */
function binl2hex(binarray)
{
  var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
  var str = "";
  for (var i = 0; i < binarray.length * 4; i++)
  {
    str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) +
    hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);
  }
  return str;
}

function binl2array(binarray)
{
  var uint8 = new Array(binarray.length * 4);
  for (var i = 0; i < binarray.length * 4; i++)
  {
    uint8[i] = (binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) * 16 + (
    binarray[i >> 2] >> i % 4 * 8 & 0xF);
  }
  return uint8;
}

/*
   * Convert an array of little-endian words to a base-64 string
   */
function binl2b64(binarray)
{
  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  var str = "";
  for (var i = 0; i < binarray.length * 4; i += 3)
  {
    var triplet = (binarray[i >> 2] >> 8 * (i % 4) & 0xFF) << 16 |
    (binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4) & 0xFF) << 8 |
    binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4) & 0xFF;
    for (var j = 0; j < 4; j++)
    {
      if (i * 8 + j * 6 > binarray.length * 32) str += b64pad;else
      str += tab.charAt(triplet >> 6 * (3 - j) & 0x3F);
    }
  }
  return str;
}

module.exports = {
  hex_md5: hex_md5,
  b64_md5: b64_md5,
  str_md5: str_md5,
  array_md5: array_md5,
  hex_hmac_md5: hex_hmac_md5,
  b64_hmac_md5: b64_hmac_md5,
  str_hmac_md5: str_hmac_md5 };

/***/ }),

/***/ 23:
/*!***********************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/GpsInfoModel.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.GpsInfoModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ./DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var


GpsInfoModel = /*#__PURE__*/function (_DefaultModel) {_inherits(GpsInfoModel, _DefaultModel);
  function GpsInfoModel() {_classCallCheck(this, GpsInfoModel);return _possibleConstructorReturn(this, _getPrototypeOf(GpsInfoModel).call(this));

  }_createClass(GpsInfoModel, [{ key: "getKey", value: function getKey()

    {
      return "GpsInfoDetail";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return GpsInfoModel;}(_DefaultModel2.DefaultModel);exports.GpsInfoModel = GpsInfoModel;

/***/ }),

/***/ 24:
/*!****************************************************************!*\
  !*** D:/小黑项目/yx_uniapp/static/mp-weixin/NIM_Web_NIM_v5.0.0.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
!function (e, t) { true ? module.exports = t() : undefined;}(void 0, function () {return function (e) {function t(r) {if (n[r]) return n[r].exports;var s = n[r] = { exports: {}, id: r, loaded: !1 };return e[r].call(s.exports, s, s.exports, t), s.loaded = !0, s.exports;}var n = {};return t.m = e, t.c = n, t.p = "", t(0);}([function (e, t, n) {"use strict";n(99);var r = n(3);r.lbsUrl = r.lbsUrl.replace("/webconf.jsp", "/wxwebconf.jsp"), e.exports = n(181);}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s(e) {"object" === ("undefined" == typeof e ? "undefined" : (0, i["default"])(e)) ? (this.callFunc = e.callFunc || null, this.message = e.message || "UNKNOW ERROR") : this.message = e, this.time = new Date(), this.timetag = +this.time;}var o = n(4),i = r(o),a = n(27),c = n(35),u = n(86),l = n(60);n(122);var d = n(8),m = d.getGlobal(),f = /\s+/;d.shouldDisplayInstallFlashHint = function () {var e = a.name.toLowerCase();if ("ie" === e) {var t = +a.version || 0;return t = Math.floor(t), 7 === t && !c.Transport.flashsocket.check();}return !1;}, d.deduplicate = function (e) {var t = [];return e.forEach(function (e) {t.indexOf(e) === -1 && t.push(e);}), t;}, d.capFirstLetter = function (e) {return e ? (e = "" + e, e.slice(0, 1).toUpperCase() + e.slice(1)) : "";}, d.guid = function () {var e = function e() {return (65536 * (1 + Math.random()) | 0).toString(16).substring(1);};return function () {return e() + e() + e() + e() + e() + e() + e() + e();};}(), d.extend = function (e, t, n) {for (var r in t) {"undefined" != typeof e[r] && n !== !0 || (e[r] = t[r]);}}, d.filterObj = function (e, t) {var n = {};return d.isString(t) && (t = t.split(f)), t.forEach(function (t) {e.hasOwnProperty(t) && (n[t] = e[t]);}), n;}, d.simpleClone = function (e) {return JSON.parse(JSON.stringify(e));}, d.copy = function (e, t) {return t = t || {}, e ? (Object.keys(e).forEach(function (n) {d.exist(e[n]) && (t[n] = e[n]);}), t) : t;}, d.copyWithNull = function (e, t) {return t = t || {}, e ? (Object.keys(e).forEach(function (n) {(d.exist(e[n]) || d.isnull(e[n])) && (t[n] = e[n]);}), t) : t;}, d.findObjIndexInArray = function (e, t) {e = e || [];var n = t.keyPath || "id",r = -1;return e.some(function (e, s) {if (l(e, n) === t.value) return r = s, !0;}), r;}, d.findObjInArray = function (e, t) {var n = d.findObjIndexInArray(e, t);return n === -1 ? null : e[n];}, d.mergeObjArray = function () {var e = [],t = [].slice.call(arguments, 0, -1),n = arguments[arguments.length - 1];d.isArray(n) && (t.push(n), n = {});var r = n.keyPath = n.keyPath || "id";for (n.sortPath = n.sortPath || r; !e.length && t.length;) {e = t.shift() || [], e = e.slice(0);}var s;return t.forEach(function (t) {t && t.forEach(function (t) {s = d.findObjIndexInArray(e, { keyPath: r, value: l(t, r) }), s !== -1 ? e[s] = d.merge({}, e[s], t) : e.push(t);});}), n.notSort || (e = d.sortObjArray(e, n)), e;}, d.cutObjArray = function (e) {var t = e.slice(0),n = arguments.length,r = [].slice.call(arguments, 1, n - 1),s = arguments[n - 1];d.isObject(s) || (r.push(s), s = {});var o,i = s.keyPath = s.keyPath || "id";return r.forEach(function (e) {d.isArray(e) || (e = [e]), e.forEach(function (e) {e && (s.value = l(e, i), o = d.findObjIndexInArray(t, s), o !== -1 && t.splice(o, 1));});}), t;}, d.sortObjArray = function (e, t) {t = t || {};var n = t.sortPath || "id";u.insensitive = !!t.insensitive;var r,s,o,i = !!t.desc;return o = d.isFunction(t.compare) ? t.compare : function (e, t) {return r = l(e, n), s = l(t, n), i ? u(s, r) : u(r, s);}, e.sort(o);}, d.emptyFunc = function () {}, d.isEmptyFunc = function (e) {return e === d.emptyFunc;}, d.notEmptyFunc = function (e) {return e !== d.emptyFunc;}, d.splice = function (e, t, n) {return [].splice.call(e, t, n);}, d.reshape2d = function (e, t) {if (Array.isArray(e)) {d.verifyParamType("type", t, "number", "util::reshape2d");var n = e.length;if (n <= t) return [e];for (var r = Math.ceil(n / t), s = [], o = 0; o < r; o++) {s.push(e.slice(o * t, (o + 1) * t));}return s;}return e;}, d.flatten2d = function (e) {if (Array.isArray(e)) {var t = [];return e.forEach(function (e) {t = t.concat(e);}), t;}return e;}, d.dropArrayDuplicates = function (e) {if (Array.isArray(e)) {for (var t = {}, n = []; e.length > 0;) {var r = e.shift();t[r] = !0;}for (var s in t) {t[s] === !0 && n.push(s);}return n;}return e;}, d.onError = function (e) {throw new s(e);}, d.verifyParamPresent = function (e, t, n, r) {n = n || "";var s = !1;switch (d.typeOf(t)) {case "undefined":case "null":s = !0;break;case "string":"" === t && (s = !0);break;case "object":Object.keys(t).length || (s = !0);break;case "array":t.length ? t.some(function (e) {if (d.notexist(e)) return s = !0, !0;}) : s = !0;}s && d.onParamAbsent(n + e, r);}, d.onParamAbsent = function (e, t) {d.onParamError("缺少参数 " + e + ", 请确保参数不是 空字符串、空对象、空数组、null或undefined, 或数组的内容不是 null/undefined", t);}, d.verifyParamAbsent = function (e, t, n, r) {n = n || "", void 0 !== t && d.onParamPresent(n + e, r);}, d.onParamPresent = function (e, t) {d.onParamError("多余的参数 " + e, t);}, d.verifyParamType = function (e, t, n, r) {var s = d.typeOf(t).toLowerCase();d.isArray(n) || (n = [n]), n = n.map(function (e) {return e.toLowerCase();});var o = !0;switch (n.indexOf(s) === -1 && (o = !1), s) {case "number":isNaN(t) && (o = !1);}o || d.onParamInvalidType(e, n, "", r);}, d.onParamInvalidType = function (e, t, n, r) {n = n || "", d.isArray(t) ? (t = t.map(function (e) {return '"' + e + '"';}), t = t.join(", ")) : t = '"' + t + '"', d.onParamError('参数"' + n + e + '"类型错误, 合法的类型包括: [' + t + "]", r);}, d.verifyParamValid = function (e, t, n, r) {d.isArray(n) || (n = [n]), n.indexOf(t) === -1 && d.onParamInvalidValue(e, n, r);}, d.onParamInvalidValue = function (e, t, n) {d.isArray(t) || (t = [t]), t = t.map(function (e) {return '"' + e + '"';}), d.isArray(t) && (t = t.join(", ")), d.onParamError("参数 " + e + "值错误, 合法的值包括: [" + JSON.stringify(t) + "]", n);}, d.verifyParamMin = function (e, t, n, r) {t < n && d.onParamError("参数" + e + "的值不能小于" + n, r);}, d.verifyParamMax = function (e, t, n, r) {t > n && d.onParamError("参数" + e + "的值不能大于" + n, r);}, d.verifyArrayMax = function (e, t, n, r) {t.length > n && d.onParamError("参数" + e + "的长度不能大于" + n, r);}, d.verifyEmail = function () {var e = /^\S+@\S+$/;return function (t, n, r) {e.test(n) || d.onParamError("参数" + t + "邮箱格式错误, 合法格式必须包含@符号, @符号前后至少要各有一个字符", r);};}(), d.verifyTel = function () {var e = /^[+\-()\d]+$/;return function (t, n, r) {e.test(n) || d.onParamError("参数" + t + "电话号码格式错误, 合法字符包括+、-、英文括号和数字", r);};}(), d.verifyBirth = function () {var e = /^(\d{4})-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/;return function (t, n, r) {e.test(n) || d.onParamError("参数" + t + '生日格式错误, 合法为"yyyy-MM-dd"', r);};}(), d.onParamError = function (e, t) {d.onError({ message: e, callFunc: t });}, d.verifyOptions = function (e, t, n, r, s) {if (e = e || {}, t && (d.isString(t) && (t = t.split(f)), d.isArray(t))) {"boolean" != typeof n && (s = n || null, n = !0, r = "");var o = n ? d.verifyParamPresent : d.verifyParamAbsent;t.forEach(function (t) {o.call(d, t, e[t], r, s);});}return e;}, d.verifyParamAtLeastPresentOne = function (e, t, n) {if (t && (d.isString(t) && (t = t.split(f)), d.isArray(t))) {var r = t.some(function (t) {return d.exist(e[t]);});r || d.onParamError("以下参数[" + t.join(", ") + "]至少需要传入一个", n);}}, d.verifyParamPresentJustOne = function (e, t, n) {if (t && (d.isString(t) && (t = t.split(f)), d.isArray(t))) {var r = t.reduce(function (t, n) {return d.exist(e[n]) && t++, t;}, 0);1 !== r && d.onParamError("以下参数[" + t.join(", ") + "]必须且只能传入一个", n);}}, d.verifyBooleanWithDefault = function (e, t, n, r, s) {d.undef(n) && (n = !0), f.test(t) && (t = t.split(f)), d.isArray(t) ? t.forEach(function (t) {d.verifyBooleanWithDefault(e, t, n, r, s);}) : "undefined" == typeof e[t] ? e[t] = n : d.isBoolean(e[t]) || d.onParamInvalidType(t, "boolean", r, s);}, d.verifyFileInput = function (e, t) {return d.verifyParamPresent("fileInput", e, "", t), d.isString(e) && (e = document.getElementById(e), e || d.onParamError("找不到要上传的文件对应的input, 请检查fileInput id " + e, t)), e.tagName && "input" === e.tagName.toLowerCase() && "file" === e.type.toLowerCase() || d.onParamError("请提供正确的 fileInput, 必须为 file 类型的 input 节点 tagname:" + e.tagName + ", filetype:" + e.type, t), e;}, d.verifyFileType = function (e, t) {d.verifyParamValid("type", e, d.validFileTypes, t);}, d.verifyCallback = function (e, t, n) {f.test(t) && (t = t.split(f)), d.isArray(t) ? t.forEach(function (t) {d.verifyCallback(e, t, n);}) : e[t] ? d.isFunction(e[t]) || d.onParamInvalidType(t, "function", "", n) : e[t] = d.emptyFunc;}, d.verifyFileUploadCallback = function (e, t) {d.verifyCallback(e, "uploadprogress uploaddone uploaderror uploadcancel", t);}, d.validFileTypes = ["image", "audio", "video", "file"], d.validFileExts = { image: ["bmp", "gif", "jpg", "jpeg", "jng", "png", "webp"], audio: ["mp3", "wav", "aac", "wma", "wmv", "amr", "mp2", "flac", "vorbis", "ac3"], video: ["mp4", "rm", "rmvb", "wmv", "avi", "mpg", "mpeg"] }, d.filterFiles = function (e, t) {t = t.toLowerCase();var n,r,s,o = "file" === t,i = [];return [].forEach.call(e, function (e) {if (o) i.push(e);else if (n = e.name.slice(e.name.lastIndexOf(".") + 1), r = e.type.split("/"), r[0] && r[1]) {s = r[0].toLowerCase();var a = !1;a = s === t || d.validFileExts[t].indexOf(n) !== -1, a && i.push(e);}}), i;};var p = d.supportFormData = d.notundef(m.FormData);d.getFileName = function () {return function (e) {return e = d.verifyFileInput(e), p ? e.files[0].name : e.value.slice(e.value.lastIndexOf("\\") + 1);};}(), d.getFileInfo = function () {var e = { ppt: 1, pptx: 2, pdf: 3 };return function (t) {t = d.verifyFileInput(t);var n = t.files[0],r = {};return p && (r.name = n.name, r.size = n.size, r.type = n.name.match(/\.(\w+)$/), r.type = r.type && r.type[1].toLowerCase(), r.transcodeType = e[r.type] || 0), r;};}(), d.sizeText = function () {var e = ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "BB"];return function (t) {var n,r = 0;do {t = Math.floor(100 * t) / 100;var s = e[r];n = t + s, t /= 1024, r++;} while (t > 1);return n;};}(), d.promises2cmds = function (e) {return e.map(function (e) {return e.cmd;});}, d.objs2accounts = function (e) {return e.map(function (e) {return e.account;});}, d.teams2ids = function (e) {return e.map(function (e) {return e.teamId;});}, d.objs2ids = function (e) {return e.map(function (e) {return e.id;});}, d.getMaxUpdateTime = function (e) {var t = e.map(function (e) {return +e.updateTime;});return Math.max.apply(Math, t);}, d.genCheckUniqueFunc = function (e, t) {return e = e || "id", t = t || 1e3, function (t) {this.uniqueSet = this.uniqueSet || {}, this.uniqueSet[e] = this.uniqueSet[e] || {};var n = this.uniqueSet[e],r = t[e];return !n[r] && (n[r] = !0, !0);};}, d.fillPropertyWithDefault = function (e, t, n) {return !!d.undef(e[t]) && (e[t] = n, !0);}, e.exports = d;}, function (e, t, n) {(function (t, r) {/*!
overview es6-promise - a tiny implementation of Promises/A+.
copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
license   Licensed under MIT license
ee https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        * @version   4.0.5

      !function (t, n) {e.exports = n();}(this, function () {"use strict";function e(e) {return "function" == typeof e || "object" == typeof e && null !== e;}function s(e) {return "function" == typeof e;}function o(e) {z = e;}function i(e) {K = e;}function a() {return function () {return t.nextTick(m);};}function c() {return "undefined" != typeof G ? function () {G(m);} : d();}function u() {var e = 0,t = new Z(m),n = document.createTextNode("");return t.observe(n, { characterData: !0 }), function () {n.data = e = ++e % 2;};}function l() {var e = new MessageChannel();return e.port1.onmessage = m, function () {return e.port2.postMessage(0);};}function d() {var e = setTimeout;return function () {return e(m, 1);};}function m() {for (var e = 0; e < J; e += 2) {var t = ne[e],n = ne[e + 1];t(n), ne[e] = void 0, ne[e + 1] = void 0;}J = 0;}function f() {try {var e = n(179);return G = e.runOnLoop || e.runOnContext, c();} catch (t) {return d();}}function p(e, t) {var n = arguments,r = this,s = new this.constructor(y);void 0 === s[se] && j(s);var o = r._state;return o ? !function () {var e = n[o - 1];K(function () {return A(o, s, e, r._result);});}() : O(r, s, e, t), s;}function g(e) {var t = this;if (e && "object" == typeof e && e.constructor === t) return e;var n = new t(y);return w(n, e), n;}function y() {}function h() {return new TypeError("You cannot resolve a promise with itself");}function v() {return new TypeError("A promises callback cannot return that same promise.");}function b(e) {try {return e.then;} catch (t) {return ce.error = t, ce;}}function M(e, t, n, r) {try {e.call(t, n, r);} catch (s) {return s;}}function T(e, t, n) {K(function (e) {var r = !1,s = M(n, t, function (n) {r || (r = !0, t !== n ? w(e, n) : I(e, n));}, function (t) {r || (r = !0, _(e, t));}, "Settle: " + (e._label || " unknown promise"));!r && s && (r = !0, _(e, s));}, e);}function S(e, t) {t._state === ie ? I(e, t._result) : t._state === ae ? _(e, t._result) : O(t, void 0, function (t) {return w(e, t);}, function (t) {return _(e, t);});}function k(e, t, n) {t.constructor === e.constructor && n === p && t.constructor.resolve === g ? S(e, t) : n === ce ? _(e, ce.error) : void 0 === n ? I(e, t) : s(n) ? T(e, t, n) : I(e, t);}function w(t, n) {t === n ? _(t, h()) : e(n) ? k(t, n, b(n)) : I(t, n);}function C(e) {e._onerror && e._onerror(e._result), x(e);}function I(e, t) {e._state === oe && (e._result = t, e._state = ie, 0 !== e._subscribers.length && K(x, e));}function _(e, t) {e._state === oe && (e._state = ae, e._result = t, K(C, e));}function O(e, t, n, r) {var s = e._subscribers,o = s.length;e._onerror = null, s[o] = t, s[o + ie] = n, s[o + ae] = r, 0 === o && e._state && K(x, e);}function x(e) {var t = e._subscribers,n = e._state;if (0 !== t.length) {for (var r = void 0, s = void 0, o = e._result, i = 0; i < t.length; i += 3) {r = t[i], s = t[i + n], r ? A(n, r, s, o) : s(o);}e._subscribers.length = 0;}}function E() {this.error = null;}function P(e, t) {try {return e(t);} catch (n) {return ue.error = n, ue;}}function A(e, t, n, r) {var o = s(n),i = void 0,a = void 0,c = void 0,u = void 0;if (o) {if (i = P(n, r), i === ue ? (u = !0, a = i.error, i = null) : c = !0, t === i) return void _(t, v());} else i = r, c = !0;t._state !== oe || (o && c ? w(t, i) : u ? _(t, a) : e === ie ? I(t, i) : e === ae && _(t, i));}function R(e, t) {try {t(function (t) {w(e, t);}, function (t) {_(e, t);});} catch (n) {_(e, n);}}function F() {return le++;}function j(e) {e[se] = le++, e._state = void 0, e._result = void 0, e._subscribers = [];}function N(e, t) {this._instanceConstructor = e, this.promise = new e(y), this.promise[se] || j(this.promise), V(t) ? (this._input = t, this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 0 === this.length ? I(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(), 0 === this._remaining && I(this.promise, this._result))) : _(this.promise, U());}function U() {return new Error("Array Methods must be provided an Array");}function D(e) {return new N(this, e).promise;}function L(e) {var t = this;return new t(V(e) ? function (n, r) {for (var s = e.length, o = 0; o < s; o++) {t.resolve(e[o]).then(n, r);}} : function (e, t) {return t(new TypeError("You must pass an array to race."));});}function B(e) {var t = this,n = new t(y);return _(n, e), n;}function q() {throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");}function W() {throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");}function H(e) {this[se] = F(), this._result = this._state = void 0, this._subscribers = [], y !== e && ("function" != typeof e && q(), this instanceof H ? R(this, e) : W());}function $() {var e = void 0;if ("undefined" != typeof r) e = r;else if ("undefined" != typeof self) e = self;else try {e = Function("return this")();} catch (t) {throw new Error("polyfill failed because global object is unavailable in this environment");}var n = e.Promise;if (n) {var s = null;try {s = Object.prototype.toString.call(n.resolve());} catch (t) {}if ("[object Promise]" === s && !n.cast) return;}e.Promise = H;}var X = void 0;X = Array.isArray ? Array.isArray : function (e) {return "[object Array]" === Object.prototype.toString.call(e);};var V = X,J = 0,G = void 0,z = void 0,K = function K(e, t) {ne[J] = e, ne[J + 1] = t, J += 2, 2 === J && (z ? z(m) : re());},Y = "undefined" != typeof window ? window : void 0,Q = Y || {},Z = Q.MutationObserver || Q.WebKitMutationObserver,ee = "undefined" == typeof self && "undefined" != typeof t && "[object process]" === {}.toString.call(t),te = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel,ne = new Array(1e3),re = void 0;re = ee ? a() : Z ? u() : te ? l() : void 0 === Y ? f() : d();var se = Math.random().toString(36).substring(16),oe = void 0,ie = 1,ae = 2,ce = new E(),ue = new E(),le = 0;return N.prototype._enumerate = function () {for (var e = this.length, t = this._input, n = 0; this._state === oe && n < e; n++) {this._eachEntry(t[n], n);}}, N.prototype._eachEntry = function (e, t) {var n = this._instanceConstructor,r = n.resolve;if (r === g) {var s = b(e);if (s === p && e._state !== oe) this._settledAt(e._state, t, e._result);else if ("function" != typeof s) this._remaining--, this._result[t] = e;else if (n === H) {var o = new n(y);k(o, e, s), this._willSettleAt(o, t);} else this._willSettleAt(new n(function (t) {return t(e);}), t);} else this._willSettleAt(r(e), t);}, N.prototype._settledAt = function (e, t, n) {var r = this.promise;r._state === oe && (this._remaining--, e === ae ? _(r, n) : this._result[t] = n), 0 === this._remaining && I(r, this._result);}, N.prototype._willSettleAt = function (e, t) {var n = this;O(e, void 0, function (e) {return n._settledAt(ie, t, e);}, function (e) {return n._settledAt(ae, t, e);});}, H.all = D, H.race = L, H.resolve = g, H.reject = B, H._setScheduler = o, H._setAsap = i, H._asap = K, H.prototype = { constructor: H, then: p, "catch": function _catch(e) {return this.then(null, e);} }, H.polyfill = $, H.Promise = H, H;});}).call(t, n(173), function () {return this;}());}, function (e, t, n) {"use strict";var r = "'d9af519ff065b5468584d93cd6050379c567621e",s = "d9af519'",o = "5.0.0",i = "2.6.0.328",a = "3.9.0",c = "47",u = "1",l = 1,d = "https://lbs.netease.im/lbs/webconf.jsp",m = "roomserver.netease.im",f = "https://dr.netease.im/1.gif",p = "development" === { WEIXIN_APP: !0 }.NODE_ENV ? 6e3 : 42e3,g = { info: { hash: r, shortHash: s, version: o, sdkVersion: c, nrtcVersion: a, nrtcSdkVersion: u, protocolVersion: l }, agentVersion: i, lbsUrl: d, roomserver: m, connectTimeout: p, xhrTimeout: p, socketTimeout: p, reconnectionDelay: 656.25, reconnectionDelayMax: p, reconnectionJitter: .1, heartbeatInterval: 18e4, cmdTimeout: p, defaultReportUrl: f };g.formatSocketUrl = function (e) {var t = e.url,n = e.secure,r = n ? "https" : "http";return t.indexOf("http") === -1 ? r + "://" + t : t;}, g.uploadUrl = "https://nos.netease.com", g.replaceUrl = "https://{bucket}.nosdn.127.net/{object}", g.downloadHost = "nos.netease.com", g.downloadUrl = "https://{bucket}.nosdn.127.net/{object}", g.httpsEnabled = !1, g.genUploadUrl = function (e) {return g.uploadUrl + "/" + e;}, g.genDownloadUrl = function (e, t) {var n = g.replaceUrl;return /^http/.test(n) ? g.httpsEnabled && (n = n.replace("http", "https")) : n = g.httpsEnabled ? "https://" + n : "http://" + n, n.replace("{bucket}", e).replace("{object}", t);}, e.exports = g;}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}t.__esModule = !0;var s = n(131),o = r(s),i = n(130),a = r(i),c = "function" == typeof a["default"] && "symbol" == typeof o["default"] ? function (e) {return typeof e;} : function (e) {return e && "function" == typeof a["default"] && e.constructor === a["default"] && e !== a["default"].prototype ? "symbol" : typeof e;};t["default"] = "function" == typeof a["default"] && "symbol" === c(o["default"]) ? function (e) {return "undefined" == typeof e ? "undefined" : c(e);} : function (e) {return e && "function" == typeof a["default"] && e.constructor === a["default"] && e !== a["default"].prototype ? "symbol" : "undefined" == typeof e ? "undefined" : c(e);};}, function (e, t, n) {"use strict";function r(e) {var t = this;u.verifyOptions(e, "appKey account token", "protocol::IMProtocol"), u.verifyCallback(e, ["onconnect", "onerror", "onwillreconnect", "ondisconnect", "onloginportschange", "onmyinfo", "onblacklist", "onmutelist", "onfriends", "onusers", "onrobots", "onteams", "onsessions", "onroamingmsgs", "onofflinemsgs", "onofflinefiltermsgs", "onroamingsysmsgs", "onofflinesysmsgs", "onofflinefiltersysmsgs", "onofflinecustomsysmsgs", "onofflinefiltercustomsysmsgs", "onbroadcastmsg", "onbroadcastmsgs", "onsysmsgunread", "onsyncdone", "onteammembers", "onsyncteammembersdone", "onmsg", "onsysmsg", "oncustomsysmsg", "onupdatemyinfo", "onupdateuser", "onupdateteammember", "onCreateTeam", "onUpdateTeam", "onAddTeamMembers", "onRemoveTeamMembers", "onUpdateTeamManagers", "onDismissTeam", "onTransferTeam", "onUpdateTeamMembersMute", "onTeamMsgReceipt", "onupdatesession", "onupdatesysmsgunread", "onupdatesysmsg", "onsynccreateteam", "onsyncmarkinblacklist", "onsyncmarkinmutelist", "onsyncfriendaction", "shouldIgnoreNotification", "shouldCountNotifyUnread", "onPushNotificationMultiportConfig", "onPushNotificationMultiportConfigUpdate", "onpushevents"], "protocol::IMProtocol"), t.db = e.api.db = new o({ logger: e.logger }), i.call(t, e);}var s = n(2).Promise,o = n(11),i = n(22),a = n(6),c = n(3),u = n(1),l = u.undef,d = n(92),m = n(29).getInstance("IM"),f = n(39),p = i.fn,g = r.fn = r.prototype = Object.create(p);g.init = function () {var e = this;p.init.call(e), e.socketUrls = [], e.parser = m, e.syncing = !0, e.hasSynced = !1, e.hasSyncedTeamMembers = !1, e.syncPromiseArray = [], e.syncResult = {}, e.syncTeamMembersPromiseArray = [], e.syncTeamMembersResult = {}, e.timetags = {}, e.sysMsgUnread = f.completeUnread({}), e.resetUnsettledMsgs(), e.resetUnsettledSysMsgs(), e.msgPromise = s.resolve(), e.sysMsgPromise = s.resolve(), e.sessionSet = {}, e.msgReceiptTasks = {}, e.userSet = {}, e.pushNotificationMultiportConfig = d.getDefaultConfig();}, g.reset = function () {var e = this;p.reset.call(e);var t = e.options;e.db.reset(t.db), l(t.lbsUrl) && (t.lbsUrl = c.lbsUrl), e.resetAutoMarkRead();}, g.resetAutoMarkRead = function () {var e = this.options;u.verifyBooleanWithDefault(e, "autoMarkRead", !0, "", "protocol::resetAutoMarkRead");}, g.resetUnsettledMsgs = function () {var e = this;e.unhandledMsgs = [], e.unupdatedMsgs = [];}, g.resetUnsettledSysMsgs = function () {var e = this;e.unhandledSysMsgs = [], e.unupdatedSysMsgs = [];}, g.packetFromSync = function (e) {return !e.obj || !!e.obj.sync;}, g.onCustomError = function (e, t) {var n = a.customError(e, t),r = t.message || "未知错误";this.onMiscError(r, n);}, e.exports = r, n(242), n(240), n(253), n(256), n(245), n(250), n(255), n(249), n(246), n(248), n(247), n(254), n(251), n(252), n(241), n(244), n(243);}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s(e, t) {var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},r = this;r.message = e || n.message || "", "object" === ("undefined" == typeof t ? "undefined" : (0, i["default"])(t)) ? (r.event = t, r.code = "Other_Error") : "undefined" != typeof t && (r.code = t), r.timetag = +new Date(), "undefined" != typeof n && (r.event = n), r.event && (r.callFunc = r.event.callFunc || null, delete r.event.callFunc);}var o = n(4),i = r(o);s.prototype = Object.create(Error.prototype), s.prototype.name = "NIMError";var a = { 201: "客户端版本不对, 需升级sdk", 302: "用户名或密码错误, 请检查appKey和token是否有效, account和token是否匹配", 403: "非法操作或没有权限", 404: "对象(用户/群/聊天室)不存在", 405: "参数长度过长", 408: "客户端请求超时", 414: "参数错误", 415: "服务不可用/没有聊天室服务器可分配", 416: "频率控制", 417: "重复操作", 422: "帐号被禁用", 500: "服务器内部错误", 501: "数据库操作失败", 503: "服务器繁忙", 508: "删除有效期过了", 509: "已失效", 7101: "被拉黑", 801: "群人数达到上限", 802: "没有权限", 803: "群不存在或未发生变化", 804: "用户不在群里面", 805: "群类型不匹配", 806: "创建群数量达到限制", 807: "群成员状态不对", 809: "已经在群里", 811: "强推列表中帐号数量超限", 812: "群被禁言", 813: "因群数量限制，部分拉人成功", 997: "协议已失效", 998: "解包错误", 999: "打包错误", 9102: "通道失效", 9103: "已经在其他端接听/拒绝过这通电话", 11001: "对方离线, 通话不可送达", 13002: "聊天室状态异常", 13003: "在黑名单中", 13004: "在禁言名单中", 13006: "聊天室处于整体禁言状态,只有管理员能发言", Connect_Failed: "无法建立连接, 请确保能 ping/telnet 到云信服务器; 如果是IE8/9, 请确保项目部署在 HTTPS 环境下", Error_Internet_Disconnected: "网断了", Error_Connection_is_not_Established: "连接未建立", Error_Connection_Socket_State_not_Match: "socket状态不对", Error_Timeout: "超时", Param_Error: "参数错误", No_File_Selected: "请选择文件", Wrong_File_Type: "文件类型错误", File_Too_Large: "文件过大", Cross_Origin_Iframe: "不能获取跨域Iframe的内容", Not_Support: "不支持", NO_DB: "无数据库", DB: "数据库错误", Still_In_Team: "还在群里", Session_Exist: "会话已存在", Session_Not_Exist: "会话不存在", Error_Unknown: "未知错误", Operation_Canceled: "操作取消" },c = [200, 406, 808, 810];c.forEach(function (e) {a[e] = null;}), s.genError = function (e) {var t = a[e];return void 0 === t && (t = "操作失败"), null === t ? null : new s(t, e);}, s.multiInstance = function (e) {return new s("不允许初始化多个实例", "Not_Allow_Multi_Instance", e);}, s.newNetworkError = function (e) {var t = "Error_Internet_Disconnected";return new s(a[t], t, e);}, s.newConnectError = function (e) {var t = "Connect_Failed";return new s(a[t] || null, t, e);}, s.newConnectionError = function (e) {var t = "Error_Connection_is_not_Established";return new s(a[t], t, e);}, s.newSocketStateError = function (e) {var t = "Error_Connection_Socket_State_not_Match";return new s(a[t], t, e);}, s.newTimeoutError = function (e) {var t = "Error_Timeout";return new s(a[t], t, e);}, s.newFrequencyControlError = function (e) {var t = 416,n = new s(a[t], t, e);return n.from = "local", n;}, s.newParamError = function (e, t) {var n = "Param_Error";return new s(e || a[n], n, t);}, s.newNoFileError = function (e, t) {var n = "No_File_Selected";return new s(e || a[n], n, t);}, s.newWrongFileTypeError = function (e, t) {var n = "Wrong_File_Type";return new s(e || a[n], n, t);}, s.newFileTooLargeError = function (e, t) {var n = "File_Too_Large";return new s(e || a[n], n, t);}, s.newCORSIframeError = function (e) {var t = "Cross_Origin_Iframe";return new s(a[t], t, e);}, s.newSupportError = function (e, t, n) {return new s("不支持" + e, "Not_Support_" + t, n);}, s.newSupportDBError = function (e) {return s.newSupportError("数据库", "DB", e);}, s.noDBError = function (e) {var t = "NO_DB";return new s(a[t], t, e);}, s.newDBError = function (e) {var t = "DB";return new s(a[t], t, e);}, s.newUnknownError = function (e) {var t = "Error_Unknown";return new s(a[t], t, e);}, s.stillInTeamError = function (e) {var t = "Still_In_Team";return new s(a[t], t, e);}, s.sessionExist = function (e) {var t = "Session_Exist";return new s(a[t], t, e);}, s.sessionNotExist = function (e) {var t = "Session_Not_Exist";return new s(a[t], t, e);}, s.cancel = function (e) {var t = "Operation_Canceled";return new s(a[t], t, e);}, s.customError = function (e, t) {e = e || "Other_Error", t = t || {};var n = "";return t.message || (n = a[e] || e), "object" !== ("undefined" == typeof e ? "undefined" : (0, i["default"])(e)) ? new s(n, e, t) : "undefined" == typeof t ? new s(n, "Other_Error", e) : new s(n, "Other_Error", t);}, e.exports = s;}, function (e, t, n) {"use strict";function r(e) {var t = this;return t.subType = "im", e.Protocol = o, e.Message = a, e.constructor = r, t.init(e);}var s = n(10),o = n(5),i = n(3),a = n(227),c = n(29).getInstance("IM");r.Protocol = o, r.parser = c, r.use = s.use, r.getInstance = s.getInstance, r.rmAllInstances = s.rmAllInstances, r.genInstanceName = function (e) {return "NIM-account-" + e.account;};var u = r.fn = r.prototype = Object.create(s.prototype);r.info = u.info = i.info, e.exports = r, n(191), n(187), n(196), n(201), n(190), n(197), n(200), n(198), n(192), n(199), n(186), n(193), n(194), n(185), n(188), n(195), n(189);}, function (e, t) {(function (e) {"use strict";function n() {return "undefined" != typeof window ? window : "undefined" != typeof self ? self : "undefined" != typeof e ? e : {};}function r(e) {var t = !1,n = "Webkit Moz ms O".split(" "),r = document.createElement("div"),s = null;if (e = e.toLowerCase(), void 0 !== r.style[e] && (t = !0), t === !1) {s = e.charAt(0).toUpperCase() + e.substr(1);for (var o = 0; o < n.length; o++) {if (void 0 !== r.style[n[o] + s]) {t = !0;break;}}}return t;}function s(e, t) {t = t || 2;for (var n = "" + e; n.length < t;) {n = "0" + n;}return n;}function o(e) {return "" + e.getFullYear();}function i(e) {return s(e.getMonth() + 1);}function a(e) {return s(e.getDate());}function c(e) {return s(e.getHours());}function u(e) {return s(e.getMinutes());}function l(e) {return s(e.getSeconds());}function d(e) {return s(e.getMilliseconds(), 3);}function m(e) {return e = "" + e, new Date(e.replace(/-/g, "/").replace("T", " "));}function f(e) {return Object.prototype.toString.call(e).slice(8, -1);}function p(e) {return f(e).toLowerCase();}function g(e) {return "string" === p(e);}function y(e) {return "number" === p(e);}function h(e) {return "boolean" === p(e);}function v(e) {return "array" === p(e);}function b(e) {return "function" === p(e);}function M(e) {return "date" === p(e);}function T(e) {return "regexp" === p(e);}function S(e) {return "error" === p(e);}function k(e) {return null === e;}function w(e) {return null !== e;}function C(e) {return "undefined" == typeof e;}function I(e) {return "undefined" != typeof e;}function _(e) {return I(e) && w(e);}function O(e) {return C(e) || k(e);}function x(e) {return _(e) && "object" === p(e);}function E(e) {return O(e) || (g(e) || v(e)) && 0 === e.length;}function P(e, t) {if (e === t) return !0;for (; t.parentNode;) {if (t.parentNode === e) return !0;t = t.parentNode;}return !1;}function A(e) {var t = e.parentNode || document.body;e = e.cloneNode(!0), e.style.display = "block", e.style.opacity = 0, e.style.height = "auto", t.appendChild(e);var n = e.offsetHeight;return t.removeChild(e), n;}function R(e) {e.parentNode && e.parentNode.removeChild(e);}function F(e, t, n) {return _(n) ? void e.setAttribute("data-" + t, n) : e.getAttribute("data-" + t);}function j(e) {return e.target || e.srcElement;}function N(e) {function t(r) {n.src && (e.multi || oe(n, "load", t), e.onload(r));}e = e || {};var n;if (e.name) try {n = document.createElement('<iframe name="' + e.name + '"></iframe>'), n.frameBorder = 0;} catch (r) {n = document.createElement("iframe"), n.name = e.name;} else n = document.createElement("iframe");e.visible || (n.style.display = "none"), b(e.onload) && re(n, "load", t);var s = e.parent;(s || document.body).appendChild(n);var o = e.src || "about:blank";return setTimeout(function () {n.src = o;}, 0), n;}function U(e) {var t = document.createElement("div");t.innerHTML = e;var n = [],r = void 0,s = void 0;if (t.children) for (r = 0, s = t.children.length; r < s; r++) {n.push(t.children[r]);} else for (r = 0, s = t.childNodes.length; r < s; r++) {var o = t.childNodes[r];1 === o.nodeType && n.push(o);}return n.length > 1 ? t : n[0];}function D(e) {return _(e) && (document.documentElement.scrollTop = document.body.scrollTop = e), window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;}function L(e) {var t = n(),r = void 0;r = e.split(",")[0].indexOf("base64") >= 0 ? t.atob(e.split(",")[1]) : t.decodeURIComponent(e.split(",")[1]);for (var s = e.split(",")[0].split(":")[1].split(";")[0], o = new Uint8Array(r.length), i = 0; i < r.length; i++) {o[i] = r.charCodeAt(i);}return new t.Blob([o], { type: s });}function B(e, t) {var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "image/jpeg",r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;if (e.toBlob) e.toBlob(t, n, r);else {var s = e.toDataURL(n, r);t(L(s));}}function q() {var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function () {},n = arguments[2];for (var r in e) {e.hasOwnProperty(r) && t.call(n, r, e[r]);}}function W(e, t) {q(t, function (t, n) {e[t] = n;});}function H(e) {return g(e) && 0 === e.indexOf("{") && e.lastIndexOf("}") === e.length - 1;}function $(e) {try {H(e) && (e = JSON.parse(e)), x(e) && q(e, function (t, n) {switch (p(n)) {case "string":case "object":e[t] = $(n);}});} catch (t) {console.error(t);}return e;}function X(e) {return JSON.parse(JSON.stringify(e));}function V() {for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = arguments.length, n = Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) {n[r - 1] = arguments[r];}return n.forEach(function (t) {W(e, t);}), e;}function J(e, t) {return q(t, function (t, n) {C(e[t]) && (e[t] = n);}), e;}function G(e, t, n) {var r = e[t] || e[t.toLowerCase()];return O(r) && (r = n, e[t] = r), r;}function z(e, t) {return q(e, function (n, r) {_(t[n]) && (e[n] = t[n]);}), e;}function K() {var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ",",n = {};return e.split(t).forEach(function (e) {var t = e.split("="),r = t.shift();r && (n[decodeURIComponent(r)] = decodeURIComponent(t.join("=")));}), n;}function Y(e, t, n) {if (!e) return "";var r = [];return q(e, function (e, t) {b(t) || (M(t) ? t = t.getTime() : v(t) ? t = t.join(",") : x(t) && (t = JSON.stringify(t)), n && (t = encodeURIComponent(t)), r.push(encodeURIComponent(e) + "=" + t));}), r.join(t || ",");}function Q(e) {return e.indexOf("?") < 0 ? "?" : "&";}function Z(e) {return Y(e, "&", !0);}function ee(e) {var t = n();return e.tagName && "INPUT" === e.tagName.toUpperCase() || t.Blob && e instanceof t.Blob;}function te(e, t) {var n = Object.keys(e);return t && n.sort(function (t, n) {var r = ee(e[t]),s = ee(e[n]);return r === s ? 0 : r ? 1 : -1;}), n;}t.__esModule = !0, t.getGlobal = n, t.detectCSSFeature = r, t.fix = s, t.getYearStr = o, t.getMonthStr = i, t.getDayStr = a, t.getHourStr = c, t.getMinuteStr = u, t.getSecondStr = l, t.getMillisecondStr = d, t.dateFromDateTimeLocal = m, t.getClass = f, t.typeOf = p, t.isString = g, t.isNumber = y, t.isBoolean = h, t.isArray = v, t.isFunction = b, t.isDate = M, t.isRegExp = T, t.isError = S, t.isnull = k, t.notnull = w, t.undef = C, t.notundef = I, t.exist = _, t.notexist = O, t.isObject = x, t.isEmpty = E, t.containsNode = P, t.calcHeight = A, t.remove = R, t.dataset = F, t.target = j, t.createIframe = N, t.html2node = U, t.scrollTop = D, t.blobFromDataURL = L, t.blobFromCanvas = B, t.forOwn = q, t.mixin = W, t.isJSON = H, t.parseJSON = $, t.simpleClone = X, t.merge = V, t.fillUndef = J, t.checkWithDefault = G, t.fetch = z, t.string2object = K, t.object2string = Y, t.genUrlSep = Q, t.object2query = Z, t.isFileInput = ee, t.getKeys = te;var ne = (t.o = {}, t.emptyObj = {}, t.f = function () {}, t.emptyFunc = function () {}, t.regBlank = /\s+/gi, t.regWhiteSpace = /\s+/gi, t.format = function () {var e = /yyyy|MM|dd|hh|mm|ss|SSS/g,t = { yyyy: o, MM: i, dd: a, hh: c, mm: u, ss: l, SSS: d };return function (n, r) {return n = new Date(n), isNaN(+n) ? "invalid date" : (r = r || "yyyy-MM-dd", r.replace(e, function (e) {return t[e](n);}));};}(), t.addEventListener = function (e, t, n) {e.addEventListener ? e.addEventListener(t, n, !1) : e.attachEvent && e.attachEvent("on" + t, n);}),re = t.on = ne,se = t.removeEventListener = function (e, t, n) {e.removeEventListener ? e.removeEventListener(t, n, !1) : e.detachEvent && e.detachEvent("on" + t, n);},oe = t.off = se;t.uniqueID = function () {var e = 0;return function () {return "" + e++;};}(), t.url2origin = function () {var e = /^([\w]+?:\/\/.*?(?=\/|$))/i;return function (t) {return e.test(t || "") ? RegExp.$1.toLowerCase() : "";};}();}).call(t, function () {return this;}());}, function (e, t) {var n = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();"number" == typeof __g && (__g = n);}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s() {}var o = n(4),i = r(o),a = n(169),c = n(2).Promise,u = n(1),l = u.notundef,d = n(123),m = n(3),f = {};s.rmAllInstances = function () {for (var e in f) {f[e].destroy();}f = {};}, s.getInstance = function (e) {var t = this;u.verifyOptions(e, "account", "api::Base.getInstance");var n = t.genInstanceName(e),r = f[n];return r ? s.updateInstance(r, e) : r = f[n] = new t(e), r;}, s.updateInstance = function (e, t) {e.setOptions(t), e.connect();};var p = s.fn = s.prototype = Object.create(new a());p.updatePrivateConf = function (e) {if (e && "object" === (0, i["default"])(e.privateConf)) {var t = e.privateConf;"string" == typeof t.lbs_web && (e.lbsUrl = t.lbs_web), "boolean" == typeof t.link_ssl_web && (e.secure = t.link_ssl_web), "boolean" == typeof t.https_enabled && (e.httpsEnabled = t.https_enabled), e.uploadUrl = t.nos_uploader_web ? t.nos_uploader_web : null, e.replaceUrl = t.nos_downloader ? t.nos_downloader : null, e.downloadUrl = t.nos_accelerate ? t.nos_accelerate : null, e.downloadHost = t.nos_accelerate_host ? t.nos_accelerate_host : null, e.ntServerAddress = t.nt_server;}return null === e.ntServerAddress || "" === e.ntServerAddress ? m.ntServerAddress = null : m.ntServerAddress = e.ntServerAddress || m.defaultReportUrl, m.uploadUrl = e.uploadUrl || m.uploadUrl, m.downloadUrl = e.downloadUrl || m.downloadUrl, m.downloadHost = e.downloadHost || m.downloadHost, m.replaceUrl = e.replaceUrl || m.replaceUrl, m.httpsEnabled = e.httpsEnabled || m.httpsEnabled, e;}, p.init = function (e) {var t = this;u.verifyOptions(e, "account", "api::Base.init"), e = this.updatePrivateConf(e);var n = t.account = e.account = e.account + "",r = e.constructor,o = r.genInstanceName(e),i = f[o];if (e._disableSingleton && (i = null), i) return s.updateInstance(i, e), i;t.name = o, f[o] = t, t.logger = e.logger = new d({ debug: e.debug, logFunc: e.logFunc, prefix: t.subType }), e.api = t;var a = t.protocol = new e.Protocol(e);return a.name = "Protocol-" + o, a.account = n, a.api = t, a.message = t.message = new e.Message({ account: n }), t.options = u.copy(e), t.reset(), t;}, p.destroy = function (e) {var t = this,n = this.name;this.isConnected && this.isConnected() && this.disconnect(), Object.getOwnPropertyNames(this).forEach(function (e) {delete t[e];}), f && (f[n] = null, delete f[n]), console.info("ApiBase::destroy: instance destroyed ...");}, p.reset = function () {var e = this.updatePrivateConf(this.options);u.verifyBooleanWithDefault(e, "exifOrientation", !0, "", "api::Base.reset");}, p.setOptions = function (e) {this.reset(), this.protocol.setOptions(e);}, p.processCallback = function (e, t) {g(e, t);}, p.processCallbackPromise = function (e, t) {var n = new c(function (n, r) {g(e, t, !0, n, r);});return n;};var g = function g(e, t, n, r, s) {var o = "api::processCallback";n && (o = "api::processCallbackPromise"), u.verifyCallback(e, "done", o), e.callback = function (i, a, c) {var d = e.callback.options;if (a = a || d, t && (a = d), u.isFunction(e.cbaop)) {var m = e.cbaop(i, a);l(m) && (a = m);}var f = e.done;u.isObject(a) && (delete a.done, delete a.cb, delete a.callback), n ? i ? s({ message: "生成接口回调错误", callFunc: o, event: i }) : r(a) : f(i, a, c);}, e.callback.options = u.copy(e);};p.processPs = function (e) {u.notexist(e.ps) && (e.ps = "");}, p.processCustom = function (e) {u.notexist(e.custom) && (e.custom = "");}, p.sendCmd = function () {this.protocol.sendCmd.apply(this.protocol, arguments);}, p.sendCmdWithResp = function (e, t, n) {this.sendCmd(e, t, function (e, t, r) {u.isFunction(n) && (e ? n(e, t) : n(null, r));});}, p.cbAndSendCmd = function (e, t) {var n = this.processCallbackPromise(t);return this.sendCmd(e, t), n;}, s.use = function (e, t) {e && e.install && u.isFunction(e.install) && e.install(this, t);}, e.exports = s, n(100), n(102), n(103), n(104), n(101), n(105);}, function (e, t, n) {"use strict";function r(e) {y = e, l.set("db", e, c);}function s(e) {this.concurrency = 0, this.pendingTasks = [], this.queue = o.resolve(), this.logger = e.logger;}var o = n(2).Promise,i = n(27),a = n(60),c = n(89),u = n(1),l = n(94),d = n(6),m = d.newSupportDBError,f = d.noDBError,p = n(203),g = "nim-",y = !1,h = u.getGlobal();if (r(!!h.indexedDB), "IE" === i.name && r(!1), "Microsoft Edge" === i.name && r(!1), "Safari" === i.name) {try {var v = parseInt(i.version.split(".")[0], 10);v < 10 && r(!1);} catch (b) {}r(!1);}var M = s.fn = s.prototype;M.reset = u.emptyFunc, y && (M.reset = function (e) {this.enable = e !== !1;}), M.addTask = function (e) {var t = this;return new o(function (n, r) {function s(e) {t.concurrency--;var n = t.pendingTasks.shift();n && t.addTask(n), e();}return t.concurrency < 100 ? (t.concurrency++, e().then(function (t) {s(function () {n(t), e.resolve && e.resolve(t);});}, function (t) {s(function () {var n = new d("数据库并发错误", "DB_ERROR", { event: t, callFunc: "db::addTask" });r(n), e.reject && e.reject(n);});})) : (e.resolve || (e.resolve = n, e.reject = r), void t.pendingTasks.push(e));});}, M.init = function (e) {var t = this;return t.addTask(function () {return t.enable ? t.server ? o.resolve() : (t.name = g + e, c.open({ server: t.name, version: p.version, schema: p.schema }).then(function (e) {t.logger.log("db::init: " + t.name), t.server = e;}, function (e) {throw r(!1), t.server = null, t.name = null, e;})) : o.reject(m({ callFunc: "db::init" }));});}, M.destroy = function () {var e = this;return e.addTask(function () {return e.enable ? e.server ? c.remove(e.name).then(function () {e.logger.log("db::destroy: " + e.name), e.server = null, e.name = null;}) : o.resolve() : o.reject(m({ callFunc: "db::destroy" }));});}, M.clear = function () {var e = this;return e.addTask(function () {return e.enable ? e.server ? e.server.clear("timetag").then(function () {var t = [].slice.call(e.server.getIndexedDB().objectStoreNames),n = [];if (t.forEach(function (t) {n.push(e.server.clear(t));}), n.length) return o.all(n).then(function () {e.logger.log("db::clear: " + e.name);});}) : o.resolve() : o.reject(m({ callFunc: "db::clear" }));});}, M.close = function () {var e = this;e.server && (e.server.close(), e.server = null, e.name = null);}, M.remove = function (e, t) {var n = this;return n.addTask(function () {return n.enable ? n.server ? (u.isArray(t) || (t = [t]), n.server.remove(e, t).then(function () {n.logger.log("db::delete: " + e + " " + (1 === t.length ? t[0] : t));})) : o.reject(f({ callFunc: "db::remove" })) : o.reject(m({ callFunc: "db::remove" }));});}, M.put = function (e, t) {var n = this;return n.addTask(function () {return n.enable ? n.server ? (u.isArray(t) || (t = [t]), n.server.update(e, t).then(function (t) {var r = ["put", e],s = p.keyPath(e),o = [];return s && (t.forEach(function (e) {o.push(a(e, s));}), r.push(1 === o.length ? o[0] : o)), r.push(1 === t.length ? t[0] : t), r.unshift("db::put:"), n.logger.log.apply(n.logger.log, r), t;})) : o.reject(f({ callFunc: "db::put" })) : o.reject(m({ callFunc: "db::put" }));});}, M.modifyOrPut = function (e) {var t = this,n = e.table,r = u.copy(e.obj),s = e.key,o = e.modifyObjWhenPut,i = u.copy(r);return delete i[s], t.getOne(n, null, r[s], { modifyObj: i }).then(function (e) {return e ? (t.logger.log("db::modifyOrPut: update table " + n, r), e) : (r = u.merge(r, o), t.put(n, r).then(function (e) {return e[0];}));});}, M.updateAndDelete = function (e, t, n) {var r = this;return r.addTask(function () {return r.enable ? r.server ? r.server.updateAndDelete(e, t, n) : o.reject(f({ callFunc: "db::updateAndDelete" })) : o.reject(m({ callFunc: "db::updateAndDelete" }));});}, M.get = function (e, t) {var n = this;return n.addTask(function () {return n.enable ? n.server ? n.server.get(e, t) : o.reject(f({ callFunc: "db::get" })) : o.reject(m({ callFunc: "db::get" }));});}, M.getAll = function (e, t) {var n = this;return n.addTask(function () {return n.enable ? n.server ? (t = t || {}, t.keys = t.keys === !0, t.desc = t.desc === !0, t.distinct = t.distinct === !0, n.server.query(e, t.index).filter(t.filter).keys(t.keys).desc(t.desc).limit(t.limit).distinct(t.distinct).map(t.mapper).modify(t.modifyObj).execute()) : o.reject(f({ callFunc: "db::getAll" })) : o.reject(m({ callFunc: "db::getAll" }));});}, M.getOnly = function (e, t, n, r) {var s = this;return s.addTask(function () {if (!s.enable) throw m({ callFunc: "db::getOnly" });if (!s.server) throw f({ callFunc: "db::getOnly" });return r = r || {}, r.keys = r.keys === !0, r.desc = r.desc === !0, r.distinct = r.distinct === !0, r.remove = r.remove === !0, s.server.query(e, t).only(n).filter(r.filter).keys(r.keys).desc(r.desc).limit(r.limit).distinct(r.distinct).map(r.mapper).modify(r.modifyObj).remove(r.remove).execute();});}, M.getOne = function () {var e = this;return e.getOnly.apply(e, arguments).then(function (e) {return e[0];});}, M.clearTable = function (e) {var t = this;return t.addTask(function () {if (!t.enable) throw m({ callFunc: "db::clearTable" });if (!t.server) throw f({ callFunc: "db::clearTable" });return t.server.clear(e);});}, M.checkDB = function () {var e = this;if (!e.enable) throw m({ callFunc: "db::checkDB" });if (!e.server) throw f({ callFunc: "db::checkDB" });}, e.exports = s, n(205), n(211), n(207), n(204), n(210), n(212), n(206), n(209), n(202), n(208);}, function (e, t, n) {e.exports = !n(31)(function () {return 7 != Object.defineProperty({}, "a", { get: function get() {return 7;} }).a;});}, function (e, t) {var n = {}.hasOwnProperty;e.exports = function (e, t) {return n.call(e, t);};}, function (e, t, n) {var r = n(25),s = n(78),o = n(55),i = Object.defineProperty;t.f = n(12) ? Object.defineProperty : function (e, t, n) {if (r(e), t = o(t, !0), r(n), s) try {return i(e, t, n);} catch (a) {}if ("get" in n || "set" in n) throw TypeError("Accessors not supported!");return "value" in n && (e[t] = n.value), e;};}, function (e, t) {var n = e.exports = { version: "2.5.3" };"number" == typeof __e && (__e = n);}, function (e, t, n) {var r = n(14),s = n(32);e.exports = n(12) ? function (e, t, n) {return r.f(e, t, s(1, n));} : function (e, t, n) {return e[t] = n, e;};}, function (e, t) {e.exports = function (e) {return "object" == typeof e ? null !== e : "function" == typeof e;};}, function (e, t, n) {var r = n(144),s = n(44);e.exports = function (e) {return r(s(e));};}, function (e, t, n) {var r = n(53)("wks"),s = n(33),o = n(9).Symbol,i = "function" == typeof o,a = e.exports = function (e) {return r[e] || (r[e] = i && o[e] || (i ? o : s)("Symbol." + e));};a.store = r;}, function (e, t, n) {"use strict";var r = n(42),s = n(117),o = n(121);r.json = s, r.upload = o, e.exports = r;}, function (e, t, n) {"use strict";var r = n(1),s = {};s.init = function () {s.deviceId = r.guid();}, s.init(), s.clientTypeMap = { 1: "Android", 2: "iOS", 4: "PC", 8: "WindowsPhone", 16: "Web", 32: "Server", 64: "Mac" }, e.exports = s;}, function (e, t, n) {"use strict";function r(e) {var t = this;s.undef(e.secure) && (e.secure = !0), t.options = s.copy(e), t.init(), t.connect();}var s = n(1),o = n(3),i = n(6),a = r.fn = r.prototype;a.init = function () {var e = this;e.logger = e.options.logger, e.cmdTaskArray = [], e.timerMap = {}, e.cmdCallbackMap = {}, e.cmdContentMap = {}, e.initConnect(), e.reset();}, a.reset = function () {var e = this;e.resetConnect();}, a.setOptions = function (e) {var t = this,n = t.options,r = Object.keys(n),o = r.indexOf("account");o !== -1 && r.splice(o, 1), e = s.filterObj(e, r), t.options = s.merge(n, e), t.reset();
    }, a.sendCmd = function (e) {var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",n = arguments[2],r = this;r.heartbeat(), "heartbeat" !== e && r.logger.warn("protocol::sendCmd: " + e, t);var s = e;e = r.parser.createCmd(e, t);var o,i = e.SER;t = t || {}, r.cmdContentMap[i] = t, t.single && (delete t.single, o = Object.keys(t), 1 === o.length && (r.cmdContentMap[i] = t[o[0]])), t.NOTSTORE && (o = t.NOTSTORE.split(" "), o.forEach(function (e) {delete t[e];}), delete t.NOTSTORE), n = n || t.callback, n && (r.cmdCallbackMap[i] = n), r.cmdTaskArray.push({ cmdName: s, cmd: JSON.stringify(e) }), r.startCmdTaskTimer();}, a.startCmdTaskTimer = function () {var e = this;e.cmdTaskTimer || (e.cmdTaskTimer = setTimeout(function () {var t = e.cmdTaskArray.shift();e.cmdTaskTimer = null, t && e.executeCmdTask(t), e.cmdTaskArray.length && e.startCmdTaskTimer();}, 0));}, a.executeCmdTask = function (e) {var t = this,n = e.cmdName,r = e.cmd;r = JSON.parse(r);var s = r.SER;t.isFrequencyControlled(n) ? (t.logger.warn("protocol::executeCmdTask: " + n + " hit freq control"), t.markCallbackInvalid(s, i.newFrequencyControlError({ callFunc: "protocol::executeCmdTask", message: n + " hit freq control" }))) : t.isConnected() ? (t.logger.log("protocol::sendCmd: " + n + " " + JSON.stringify(r)), t.doSendCmd(r)) : (t.logger.warn("protocol::executeCmdTask: " + n + " not connected"), t.markCallbackInvalid(s, i.newSocketStateError({ callFunc: "protocol::executeCmdTask", message: n + " not connected" })));}, a.isFrequencyControlled = function (e) {var t = this.frequencyControlMap && this.frequencyControlMap[e];if (t) {if (Date.now() < t.from + t.duration) return !0;delete this.frequencyControlMap[e];}}, a.doSendCmd = function (e) {var t = this,n = e.SER;t.timerMap[n] = setTimeout(function () {t.markCallbackInvalid(n, i.newTimeoutError({ callFunc: "protocol::doSendCmd", message: "ser " + n + " Timeout Error" }));}, o.cmdTimeout);try {t.socket.send(JSON.stringify(e));} catch (r) {t.markCallbackInvalid(n, i.newSocketStateError({ callFunc: "protocol::doSendCmd", message: "ser " + n + " socketSendJson Error" })), t.onDisconnect(!0, "protocol::doSendCmd:socketSendJson");}}, a.getObjWithSer = function (e) {var t = this,n = t.cmdContentMap[e];return delete t.cmdContentMap[e], n && s.copy(n);}, a.getCallbackWithSer = function (e) {var t = this,n = t.cmdCallbackMap[e];return delete t.cmdCallbackMap[e], n;}, a.getTimerWithSer = function (e) {var t = this,n = t.timerMap[e];return delete t.timerMap[e], n;}, a.clearTimerWithSer = function (e) {var t = this,n = t.getTimerWithSer(e);n && clearTimeout(n);}, a.markCallbackInvalid = function (e, t) {var n = this;n.getObjWithSer(e), n.clearTimerWithSer(e);var r = n.getCallbackWithSer(e);if (r) {var s = r.options;setTimeout(function () {r(t || i.newUnknownError({ ser: e }), s);}, 0);}}, a.markAllCallbackInvalid = function (e) {var t = this;Object.keys(this.cmdCallbackMap).forEach(function (n) {t.markCallbackInvalid(n, e);});}, a.getPacketObj = function (e) {var t = null;if (e && e.raw) {var n = e.raw.ser;s.notundef(n) && (t = this.getObjWithSer(n));}return t;}, a.callPacketAckCallback = function (e) {var t = this;if (e && e.raw) {var n = e.raw.ser;if (s.notundef(n)) {t.clearTimerWithSer(n);var r = t.getCallbackWithSer(n);r && (e.promise ? e.promise.then(function () {r(e.error, e.obj);}, function (s) {s.callFunc = "protocol::callPacketAckCallback", s.message = "Resp Promoise Error: cmd: " + e.cmd + ", ser: " + n;var o = i.customError("CALLBACK_ACK_ERR", s);t.logger.error("protocol::callPacketAckCallback: promise error " + JSON.stringify(s)), r(o, e.obj, e.content);}) : r(e.error, e.obj, e.content));}}}, a.onMessage = function (e) {var t = this;t.heartbeat();var n = t.parser.parseResponse(e);n.notFound && t.logger.warn("protocol::onMessage: packet not found " + JSON.stringify(n)), n.error ? (n.error.message = n.cmd + " error: " + n.error.message, t.logger.error("protocol::onMessage: packet error " + JSON.stringify(n.error))) : n.content || "heartbeat" === n.cmd || t.logger.warn("protocol::onMessage: packet.content undefined " + JSON.stringify(n)), n.frequencyControlDuration && (t.logger.error("protocol::onMessage: server freq control " + JSON.stringify(n.cmd)), t.frequencyControlMap = t.frequencyControlMap || {}, t.frequencyControlMap[n.cmd] = { from: +new Date(), duration: n.frequencyControlDuration }), n.obj = t.getPacketObj(n), "heartbeat" !== n.cmd && "getClientAntispam" !== n.cmd && t.logger.log("protocol::recvCmd: " + n.cmd + " " + n.rawStr);var r = "process" + s.capFirstLetter(n.service);t[r] ? (t.logger.warn("protocol::recvCmd: " + n.cmd + " " + r, n.content), t[r](n)) : t.logger.warn("protocol::onMessage: " + r + " not found"), t.callPacketAckCallback(n);}, a.onMiscError = function (e, t, n) {t && this.notifyError(e, t, n);}, a.notifyError = function (e, t, n) {var r = this;if (r.isConnected()) {var s = [(e || "") + " " + r.name + " " + JSON.stringify(t)];n && s.push(n), r.logger.error.apply(r.logger.error, s), r.options.onerror(t, n);}}, a.emitAPI = function (e) {var t = e.type,n = e.obj;this.api.emit(t, n);}, e.exports = r, n(109), n(108), n(110), n(111);},, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s(e) {a.verifyOptions(e, "scene to type", "msg::Message"), a.verifyParamValid("scene", e.scene, y, "msg::Message");var t = this;t.scene = p[e.scene], t.to = "" + e.to, t.type = h[e.type], t.resend = e.resend ? 1 : 0, e.resend ? (a.verifyOptions(e, "idClient", "msg::Message"), t.idClient = e.idClient) : t.idClient = a.guid(), u(e.text) && (t.body = "" + e.text), u(e.custom) && ("object" === (0, i["default"])(e.custom) ? (t.logger.warn("model::Message: custom should be JsonString, auto transfer"), t.custom = JSON.stringify(e.custom)) : t.custom = "" + e.custom), u(e.body) && (t.body = "" + e.body), u(e.pushContent) && (t.pushContent = "" + e.pushContent), u(e.pushPayload) && (t.pushPayload = "" + e.pushPayload);var n = e.apns;if (u(n) && "team" === e.scene) {var r = n.accounts;u(r) && a.verifyParamType("apns.accounts", r, "array", "msg::Message"), t.apnsAccounts = r ? JSON.stringify(r) : f, t.apnsContent = n.content || e.pushContent || "", a.verifyBooleanWithDefault(n, "forcePush", !0, "options.apns", "msg::Message"), t.apnsForcePush = n.forcePush ? 1 : 0;}u(e.isHistoryable) && (t.isHistoryable = e.isHistoryable ? 1 : 0), u(e.isRoamingable) && (t.isRoamingable = e.isRoamingable ? 1 : 0), u(e.isSyncable) && (t.isSyncable = e.isSyncable ? 1 : 0), u(e.cc) && (t.cc = e.cc ? 1 : 0), u(e.isPushable) && (t.isPushable = e.isPushable ? 1 : 0), u(e.isOfflinable) && (t.isOfflinable = e.isOfflinable ? 1 : 0), u(e.isUnreadable) && (t.isUnreadable = e.isUnreadable ? 1 : 0), u(e.needPushNick) && (t.needPushNick = e.needPushNick ? 1 : 0), u(e.needMsgReceipt) && (t.needMsgReceipt = e.needMsgReceipt ? 1 : 0), u(e.yidunEnable) && (t.yidunEnable = e.yidunEnable ? 1 : 0), u(e.antiSpamUsingYidun) && (t.antiSpamUsingYidun = e.antiSpamUsingYidun ? 1 : 0), u(e.clientAntiSpam) && (t.clientAntiSpam = e.clientAntiSpam ? 1 : 0), u(e.antiSpamContent) && ("object" === (0, i["default"])(e.antiSpamContent) ? (t.logger.warn("model::Message: antiSpamContent should be JsonString, auto transfer"), t.antiSpamContent = JSON.stringify(e.antiSpamContent)) : t.antiSpamContent = "" + e.antiSpamContent), u(e.antiSpamBusinessId) && ("object" === (0, i["default"])(e.antiSpamBusinessId) ? (t.logger.warn("model::Message: antiSpamBusinessId should be JsonString, auto transfer"), t.antiSpamBusinessId = JSON.stringify(e.antiSpamBusinessId)) : t.antiSpamBusinessId = "" + e.antiSpamBusinessId);}var o = n(4),i = r(o),a = n(1),c = a.undef,u = a.notundef,l = a.exist,d = n(37),m = n(95),f = "#%@all@%#",p = { p2p: 0, team: 1 },g = { 0: "p2p", 1: "team" },y = Object.keys(p),h = m.typeMap,v = m.validTypes;a.merge(s.prototype, m.prototype), s.prototype.getScene = function () {return g[this.scene];}, s.getType = m.getType, s.reverse = function (e) {var t = g[e.scene],n = { scene: t || e.scene, from: e.from, fromNick: e.fromNick, fromClientType: d.reverseType(e.fromClientType), fromDeviceId: e.fromDeviceId, to: "" + e.to, time: +e.time, type: s.getType(e), text: l(e.body) ? e.body : "", isHistoryable: c(e.isHistoryable) || 1 === +e.isHistoryable, isRoamingable: c(e.isRoamingable) || 1 === +e.isRoamingable, isSyncable: c(e.isSyncable) || 1 === +e.isSyncable, cc: c(e.cc) || 1 === +e.cc, isPushable: c(e.isPushable) || 1 === +e.isPushable, isOfflinable: c(e.isOfflinable) || 1 === +e.isOfflinable, isUnreadable: c(e.isUnreadable) || 1 === +e.isUnreadable, isReplyMsg: c(e.isReplyMsg) || 1 === +e.isReplyMsg, needPushNick: c(e.needPushNick) || 1 === +e.needPushNick, needMsgReceipt: 1 === +e.needMsgReceipt, isLocal: !1 };if (u(e.isMuted) && (n.isMuted = 1 === +e.isMuted), u(e.resend) && (n.resend = 1 === +e.resend), u(e.idClient) && (n.idClient = e.idClient), u(e.idServer) && (n.idServer = "" + e.idServer), u(e.userUpdateTime) && (n.userUpdateTime = +e.userUpdateTime), u(e.custom) && (n.custom = e.custom), u(e.pushContent) && (n.pushContent = e.pushContent), u(e.pushPayload) && (n.pushPayload = e.pushPayload), u(e.tempTeamMemberCount) && (n.tempTeamMemberCount = +e.tempTeamMemberCount), u(e.apnsAccounts)) {if (n.apns = {}, e.apnsAccounts !== f) {var r = e.apnsAccounts;try {n.apns.accounts = JSON.parse(r);} catch (o) {n.apns.accounts = [];}}n.apns.content = e.apnsContent || "", n.apns.forcePush = 1 === +e.apnsForcePush;}return n.status = e.status || "success", u(e.filter) && (n.filter = e.filter), n;}, s.setExtra = function (e, t) {e.target = s.getMsgTarget(e, t), e.sessionId = e.scene + "-" + e.target, m.setFlow(e, t);}, s.getMsgTarget = function (e, t) {return "p2p" === e.scene ? e.to === t ? e.from : e.to : "team" === e.scene ? e.to : void 0;}, s.deduplication = function (e) {var t,n = {},r = [];return e.forEach(function (e) {t = e.idClient, n[t] || (n[t] = !0, r.push(e));}), r;}, s.sortMsgs = function (e) {return e = e.slice(0), a.sortObjArray(e, { sortPath: "time" }), e;}, s.getLastMsg = function (e) {return e = s.sortMsgs(e), e[e.length - 1];}, s.getLastNotIgnoredMsg = function (e) {e = s.sortMsgs(e);for (var t = null, n = e.length - 1; n >= 0; n--) {if (t = e[n], !t.ignore) return t;}return null;}, s.getMaxTimetag = function (e) {return s.getLastMsg(e).time;}, s.validScenes = y, s.validTypes = v, e.exports = s;}, function (e, t, n) {var r = n(17);e.exports = function (e) {if (!r(e)) throw TypeError(e + " is not an object!");return e;};}, function (e, t, n) {var r = n(9),s = n(15),o = n(76),i = n(16),a = "prototype",c = function c(e, t, n) {var u,l,d,m = e & c.F,f = e & c.G,p = e & c.S,g = e & c.P,y = e & c.B,h = e & c.W,v = f ? s : s[t] || (s[t] = {}),b = v[a],M = f ? r : p ? r[t] : (r[t] || {})[a];f && (n = t);for (u in n) {l = !m && M && void 0 !== M[u], l && u in v || (d = l ? M[u] : n[u], v[u] = f && "function" != typeof M[u] ? n[u] : y && l ? o(d, r) : h && M[u] == d ? function (e) {var t = function t(_t, n, r) {if (this instanceof e) {switch (arguments.length) {case 0:return new e();case 1:return new e(_t);case 2:return new e(_t, n);}return new e(_t, n, r);}return e.apply(this, arguments);};return t[a] = e[a], t;}(d) : g && "function" == typeof d ? o(Function.call, d) : d, g && ((v.virtual || (v.virtual = {}))[u] = d, e & c.R && b && !b[u] && i(b, u, d)));}};c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, c.U = 64, c.R = 128, e.exports = c;}, function (e, t, n) {var r;(function (e, s) {(function () {"use strict";function o(e) {return e = String(e), e.charAt(0).toUpperCase() + e.slice(1);}function i(e, t, n) {var r = { "10.0": "10", 6.4: "10 Technical Preview", 6.3: "8.1", 6.2: "8", 6.1: "Server 2008 R2 / 7", "6.0": "Server 2008 / Vista", 5.2: "Server 2003 / XP 64-bit", 5.1: "XP", 5.01: "2000 SP1", "5.0": "2000", "4.0": "NT", "4.90": "ME" };return t && n && /^Win/i.test(e) && !/^Windows Phone /i.test(e) && (r = r[/[\d.]+$/.exec(e)]) && (e = "Windows " + r), e = String(e), t && n && (e = e.replace(RegExp(t, "i"), n)), e = c(e.replace(/ ce$/i, " CE").replace(/\bhpw/i, "web").replace(/\bMacintosh\b/, "Mac OS").replace(/_PowerPC\b/i, " OS").replace(/\b(OS X) [^ \d]+/i, "$1").replace(/\bMac (OS X)\b/, "$1").replace(/\/(\d)/, " $1").replace(/_/g, ".").replace(/(?: BePC|[ .]*fc[ \d.]+)$/i, "").replace(/\bx86\.64\b/gi, "x86_64").replace(/\b(Windows Phone) OS\b/, "$1").replace(/\b(Chrome OS \w+) [\d.]+\b/, "$1").split(" on ")[0]);}function a(e, t) {var n = -1,r = e ? e.length : 0;if ("number" == typeof r && r > -1 && r <= T) for (; ++n < r;) {t(e[n], n, e);} else u(e, t);}function c(e) {return e = p(e), /^(?:webOS|i(?:OS|P))/.test(e) ? e : o(e);}function u(e, t) {for (var n in e) {w.call(e, n) && t(e[n], n, e);}}function l(e) {return null == e ? o(e) : C.call(e).slice(8, -1);}function d(e, t) {var n = null != e ? typeof e[t] : "number";return !(/^(?:boolean|number|string|undefined)$/.test(n) || "object" == n && !e[t]);}function m(e) {return String(e).replace(/([ -])(?!$)/g, "$1?");}function f(e, t) {var n = null;return a(e, function (r, s) {n = t(n, r, s, e);}), n;}function p(e) {return String(e).replace(/^ +| +$/g, "");}function g(e) {function t(t) {return f(t, function (t, n) {return t || RegExp("\\b" + (n.pattern || m(n)) + "\\b", "i").exec(e) && (n.label || n);});}function n(t) {return f(t, function (t, n, r) {return t || (n[V] || n[/^[a-z]+(?: +[a-z]+\b)*/i.exec(V)] || RegExp("\\b" + m(r) + "(?:\\b|\\w*\\d)", "i").exec(e)) && r;});}function r(t) {return f(t, function (t, n) {return t || RegExp("\\b" + (n.pattern || m(n)) + "\\b", "i").exec(e) && (n.label || n);});}function s(t) {return f(t, function (t, n) {var r = n.pattern || m(n);return !t && (t = RegExp("\\b" + r + "(?:/[\\d.]+|[ \\w.]*)", "i").exec(e)) && (t = i(t, r, n.label || n)), t;});}function o(t) {return f(t, function (t, n) {var r = n.pattern || m(n);return !t && (t = RegExp("\\b" + r + " *\\d+[.\\w_]*", "i").exec(e) || RegExp("\\b" + r + " *\\w+-[\\w]*", "i").exec(e) || RegExp("\\b" + r + "(?:; *(?:[a-z]+[_-])?[a-z]+\\d+|[^ ();-]*)", "i").exec(e)) && ((t = String(n.label && !RegExp(r, "i").test(n.label) ? n.label : t).split("/"))[1] && !/[\d.]+/.test(t[0]) && (t[0] += " " + t[1]), n = n.label || n, t = c(t[0].replace(RegExp(r, "i"), n).replace(RegExp("; *(?:" + n + "[_-])?", "i"), " ").replace(RegExp("(" + n + ")[-_.]?(\\w)", "i"), "$1 $2"))), t;});}function a(t) {return f(t, function (t, n) {return t || (RegExp(n + "(?:-[\\d.]+/|(?: for [\\w-]+)?[ /-])([\\d.]+[^ ();/_-]*)", "i").exec(e) || 0)[1] || null;});}function y() {return this.description || "";}var v = h,b = e && "object" == typeof e && "String" != l(e);b && (v = e, e = null);var M = v.navigator || {},T = M.userAgent || "";e || (e = T);var k,w,I = b ? !!M.likeChrome : /\bChrome\b/.test(e) && !/internal|\n/i.test(C.toString()),_ = "Object",O = b ? _ : "ScriptBridgingProxyObject",x = b ? _ : "Environment",E = b && v.java ? "JavaPackage" : l(v.java),P = b ? _ : "RuntimeObject",A = /\bJava/.test(E) && v.java,R = A && l(v.environment) == x,F = A ? "a" : "α",j = A ? "b" : "β",N = v.document || {},U = v.operamini || v.opera,D = S.test(D = b && U ? U["[[Class]]"] : l(U)) ? D : U = null,L = e,B = [],q = null,W = e == T,H = W && U && "function" == typeof U.version && U.version(),$ = t([{ label: "EdgeHTML", pattern: "Edge" }, "Trident", { label: "WebKit", pattern: "AppleWebKit" }, "iCab", "Presto", "NetFront", "Tasman", "KHTML", "Gecko"]),X = r(["Adobe AIR", "Arora", "Avant Browser", "Breach", "Camino", "Electron", "Epiphany", "Fennec", "Flock", "Galeon", "GreenBrowser", "iCab", "Iceweasel", "K-Meleon", "Konqueror", "Lunascape", "Maxthon", { label: "Microsoft Edge", pattern: "Edge" }, "Midori", "Nook Browser", "PaleMoon", "PhantomJS", "Raven", "Rekonq", "RockMelt", { label: "Samsung Internet", pattern: "SamsungBrowser" }, "SeaMonkey", { label: "Silk", pattern: "(?:Cloud9|Silk-Accelerated)" }, "Sleipnir", "SlimBrowser", { label: "SRWare Iron", pattern: "Iron" }, "Sunrise", "Swiftfox", "Waterfox", "WebPositive", "Opera Mini", { label: "Opera Mini", pattern: "OPiOS" }, "Opera", { label: "Opera", pattern: "OPR" }, "Chrome", { label: "Chrome Mobile", pattern: "(?:CriOS|CrMo)" }, { label: "Firefox", pattern: "(?:Firefox|Minefield)" }, { label: "Firefox for iOS", pattern: "FxiOS" }, { label: "IE", pattern: "IEMobile" }, { label: "IE", pattern: "MSIE" }, "Safari"]),V = o([{ label: "BlackBerry", pattern: "BB10" }, "BlackBerry", { label: "Galaxy S", pattern: "GT-I9000" }, { label: "Galaxy S2", pattern: "GT-I9100" }, { label: "Galaxy S3", pattern: "GT-I9300" }, { label: "Galaxy S4", pattern: "GT-I9500" }, { label: "Galaxy S5", pattern: "SM-G900" }, { label: "Galaxy S6", pattern: "SM-G920" }, { label: "Galaxy S6 Edge", pattern: "SM-G925" }, { label: "Galaxy S7", pattern: "SM-G930" }, { label: "Galaxy S7 Edge", pattern: "SM-G935" }, "Google TV", "Lumia", "iPad", "iPod", "iPhone", "Kindle", { label: "Kindle Fire", pattern: "(?:Cloud9|Silk-Accelerated)" }, "Nexus", "Nook", "PlayBook", "PlayStation Vita", "PlayStation", "TouchPad", "Transformer", { label: "Wii U", pattern: "WiiU" }, "Wii", "Xbox One", { label: "Xbox 360", pattern: "Xbox" }, "Xoom"]),J = n({ Apple: { iPad: 1, iPhone: 1, iPod: 1 }, Archos: {}, Amazon: { Kindle: 1, "Kindle Fire": 1 }, Asus: { Transformer: 1 }, "Barnes & Noble": { Nook: 1 }, BlackBerry: { PlayBook: 1 }, Google: { "Google TV": 1, Nexus: 1 }, HP: { TouchPad: 1 }, HTC: {}, LG: {}, Microsoft: { Xbox: 1, "Xbox One": 1 }, Motorola: { Xoom: 1 }, Nintendo: { "Wii U": 1, Wii: 1 }, Nokia: { Lumia: 1 }, Samsung: { "Galaxy S": 1, "Galaxy S2": 1, "Galaxy S3": 1, "Galaxy S4": 1 }, Sony: { PlayStation: 1, "PlayStation Vita": 1 } }),G = s(["Windows Phone", "Android", "CentOS", { label: "Chrome OS", pattern: "CrOS" }, "Debian", "Fedora", "FreeBSD", "Gentoo", "Haiku", "Kubuntu", "Linux Mint", "OpenBSD", "Red Hat", "SuSE", "Ubuntu", "Xubuntu", "Cygwin", "Symbian OS", "hpwOS", "webOS ", "webOS", "Tablet OS", "Tizen", "Linux", "Mac OS X", "Macintosh", "Mac", "Windows 98;", "Windows "]);if ($ && ($ = [$]), J && !V && (V = o([J])), (k = /\bGoogle TV\b/.exec(V)) && (V = k[0]), /\bSimulator\b/i.test(e) && (V = (V ? V + " " : "") + "Simulator"), "Opera Mini" == X && /\bOPiOS\b/.test(e) && B.push("running in Turbo/Uncompressed mode"), "IE" == X && /\blike iPhone OS\b/.test(e) ? (k = g(e.replace(/like iPhone OS/, "")), J = k.manufacturer, V = k.product) : /^iP/.test(V) ? (X || (X = "Safari"), G = "iOS" + ((k = / OS ([\d_]+)/i.exec(e)) ? " " + k[1].replace(/_/g, ".") : "")) : "Konqueror" != X || /buntu/i.test(G) ? J && "Google" != J && (/Chrome/.test(X) && !/\bMobile Safari\b/i.test(e) || /\bVita\b/.test(V)) || /\bAndroid\b/.test(G) && /^Chrome/.test(X) && /\bVersion\//i.test(e) ? (X = "Android Browser", G = /\bAndroid\b/.test(G) ? G : "Android") : "Silk" == X ? (/\bMobi/i.test(e) || (G = "Android", B.unshift("desktop mode")), /Accelerated *= *true/i.test(e) && B.unshift("accelerated")) : "PaleMoon" == X && (k = /\bFirefox\/([\d.]+)\b/.exec(e)) ? B.push("identifying as Firefox " + k[1]) : "Firefox" == X && (k = /\b(Mobile|Tablet|TV)\b/i.exec(e)) ? (G || (G = "Firefox OS"), V || (V = k[1])) : !X || (k = !/\bMinefield\b/i.test(e) && /\b(?:Firefox|Safari)\b/.exec(X)) ? (X && !V && /[\/,]|^[^(]+?\)/.test(e.slice(e.indexOf(k + "/") + 8)) && (X = null), (k = V || J || G) && (V || J || /\b(?:Android|Symbian OS|Tablet OS|webOS)\b/.test(G)) && (X = /[a-z]+(?: Hat)?/i.exec(/\bAndroid\b/.test(G) ? G : k) + " Browser")) : "Electron" == X && (k = (/\bChrome\/([\d.]+)\b/.exec(e) || 0)[1]) && B.push("Chromium " + k) : G = "Kubuntu", H || (H = a(["(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\d.]+$))", "Version", m(X), "(?:Firefox|Minefield|NetFront)"])), (k = "iCab" == $ && parseFloat(H) > 3 && "WebKit" || /\bOpera\b/.test(X) && (/\bOPR\b/.test(e) ? "Blink" : "Presto") || /\b(?:Midori|Nook|Safari)\b/i.test(e) && !/^(?:Trident|EdgeHTML)$/.test($) && "WebKit" || !$ && /\bMSIE\b/i.test(e) && ("Mac OS" == G ? "Tasman" : "Trident") || "WebKit" == $ && /\bPlayStation\b(?! Vita\b)/i.test(X) && "NetFront") && ($ = [k]), "IE" == X && (k = (/; *(?:XBLWP|ZuneWP)(\d+)/i.exec(e) || 0)[1]) ? (X += " Mobile", G = "Windows Phone " + (/\+$/.test(k) ? k : k + ".x"), B.unshift("desktop mode")) : /\bWPDesktop\b/i.test(e) ? (X = "IE Mobile", G = "Windows Phone 8.x", B.unshift("desktop mode"), H || (H = (/\brv:([\d.]+)/.exec(e) || 0)[1])) : "IE" != X && "Trident" == $ && (k = /\brv:([\d.]+)/.exec(e)) && (X && B.push("identifying as " + X + (H ? " " + H : "")), X = "IE", H = k[1]), W) {if (d(v, "global")) {if (A && (k = A.lang.System, L = k.getProperty("os.arch"), G = G || k.getProperty("os.name") + " " + k.getProperty("os.version")), R) {try {H = v.require("ringo/engine").version.join("."), X = "RingoJS";} catch (z) {(k = v.system) && k.global.system == v.system && (X = "Narwhal", G || (G = k[0].os || null));}X || (X = "Rhino");} else "object" == typeof v.process && !v.process.browser && (k = v.process) && ("object" == typeof k.versions && ("string" == typeof k.versions.electron ? (B.push("Node " + k.versions.node), X = "Electron", H = k.versions.electron) : "string" == typeof k.versions.nw && (B.push("Chromium " + H, "Node " + k.versions.node), X = "NW.js", H = k.versions.nw)), X || (X = "Node.js", L = k.arch, G = k.platform, H = /[\d.]+/.exec(k.version), H = H ? H[0] : null));} else l(k = v.runtime) == O ? (X = "Adobe AIR", G = k.flash.system.Capabilities.os) : l(k = v.phantom) == P ? (X = "PhantomJS", H = (k = k.version || null) && k.major + "." + k.minor + "." + k.patch) : "number" == typeof N.documentMode && (k = /\bTrident\/(\d+)/i.exec(e)) ? (H = [H, N.documentMode], (k = +k[1] + 4) != H[1] && (B.push("IE " + H[1] + " mode"), $ && ($[1] = ""), H[1] = k), H = "IE" == X ? String(H[1].toFixed(1)) : H[0]) : "number" == typeof N.documentMode && /^(?:Chrome|Firefox)\b/.test(X) && (B.push("masking as " + X + " " + H), X = "IE", H = "11.0", $ = ["Trident"], G = "Windows");G = G && c(G);}if (H && (k = /(?:[ab]|dp|pre|[ab]\d+pre)(?:\d+\+?)?$/i.exec(H) || /(?:alpha|beta)(?: ?\d)?/i.exec(e + ";" + (W && M.appMinorVersion)) || /\bMinefield\b/i.test(e) && "a") && (q = /b/i.test(k) ? "beta" : "alpha", H = H.replace(RegExp(k + "\\+?$"), "") + ("beta" == q ? j : F) + (/\d+\+?/.exec(k) || "")), "Fennec" == X || "Firefox" == X && /\b(?:Android|Firefox OS)\b/.test(G)) X = "Firefox Mobile";else if ("Maxthon" == X && H) H = H.replace(/\.[\d.]+/, ".x");else if (/\bXbox\b/i.test(V)) "Xbox 360" == V && (G = null), "Xbox 360" == V && /\bIEMobile\b/.test(e) && B.unshift("mobile mode");else if (!/^(?:Chrome|IE|Opera)$/.test(X) && (!X || V || /Browser|Mobi/.test(X)) || "Windows CE" != G && !/Mobi/i.test(e)) {if ("IE" == X && W) try {null === v.external && B.unshift("platform preview");} catch (z) {B.unshift("embedded");} else (/\bBlackBerry\b/.test(V) || /\bBB10\b/.test(e)) && (k = (RegExp(V.replace(/ +/g, " *") + "/([.\\d]+)", "i").exec(e) || 0)[1] || H) ? (k = [k, /BB10/.test(e)], G = (k[1] ? (V = null, J = "BlackBerry") : "Device Software") + " " + k[0], H = null) : this != u && "Wii" != V && (W && U || /Opera/.test(X) && /\b(?:MSIE|Firefox)\b/i.test(e) || "Firefox" == X && /\bOS X (?:\d+\.){2,}/.test(G) || "IE" == X && (G && !/^Win/.test(G) && H > 5.5 || /\bWindows XP\b/.test(G) && H > 8 || 8 == H && !/\bTrident\b/.test(e))) && !S.test(k = g.call(u, e.replace(S, "") + ";")) && k.name && (k = "ing as " + k.name + ((k = k.version) ? " " + k : ""), S.test(X) ? (/\bIE\b/.test(k) && "Mac OS" == G && (G = null), k = "identify" + k) : (k = "mask" + k, X = D ? c(D.replace(/([a-z])([A-Z])/g, "$1 $2")) : "Opera", /\bIE\b/.test(k) && (G = null), W || (H = null)), $ = ["Presto"], B.push(k));} else X += " Mobile";(k = (/\bAppleWebKit\/([\d.]+\+?)/i.exec(e) || 0)[1]) && (k = [parseFloat(k.replace(/\.(\d)$/, ".0$1")), k], "Safari" == X && "+" == k[1].slice(-1) ? (X = "WebKit Nightly", q = "alpha", H = k[1].slice(0, -1)) : H != k[1] && H != (k[2] = (/\bSafari\/([\d.]+\+?)/i.exec(e) || 0)[1]) || (H = null), k[1] = (/\bChrome\/([\d.]+)/i.exec(e) || 0)[1], 537.36 == k[0] && 537.36 == k[2] && parseFloat(k[1]) >= 28 && "WebKit" == $ && ($ = ["Blink"]), W && (I || k[1]) ? ($ && ($[1] = "like Chrome"), k = k[1] || (k = k[0], k < 530 ? 1 : k < 532 ? 2 : k < 532.05 ? 3 : k < 533 ? 4 : k < 534.03 ? 5 : k < 534.07 ? 6 : k < 534.1 ? 7 : k < 534.13 ? 8 : k < 534.16 ? 9 : k < 534.24 ? 10 : k < 534.3 ? 11 : k < 535.01 ? 12 : k < 535.02 ? "13+" : k < 535.07 ? 15 : k < 535.11 ? 16 : k < 535.19 ? 17 : k < 536.05 ? 18 : k < 536.1 ? 19 : k < 537.01 ? 20 : k < 537.11 ? "21+" : k < 537.13 ? 23 : k < 537.18 ? 24 : k < 537.24 ? 25 : k < 537.36 ? 26 : "Blink" != $ ? "27" : "28")) : ($ && ($[1] = "like Safari"), k = k[0], k = k < 400 ? 1 : k < 500 ? 2 : k < 526 ? 3 : k < 533 ? 4 : k < 534 ? "4+" : k < 535 ? 5 : k < 537 ? 6 : k < 538 ? 7 : k < 601 ? 8 : "8"), $ && ($[1] += " " + (k += "number" == typeof k ? ".x" : /[.+]/.test(k) ? "" : "+")), "Safari" == X && (!H || parseInt(H) > 45) && (H = k)), "Opera" == X && (k = /\bzbov|zvav$/.exec(G)) ? (X += " ", B.unshift("desktop mode"), "zvav" == k ? (X += "Mini", H = null) : X += "Mobile", G = G.replace(RegExp(" *" + k + "$"), "")) : "Safari" == X && /\bChrome\b/.exec($ && $[1]) && (B.unshift("desktop mode"), X = "Chrome Mobile", H = null, /\bOS X\b/.test(G) ? (J = "Apple", G = "iOS 4.3+") : G = null), H && 0 == H.indexOf(k = /[\d.]+$/.exec(G)) && e.indexOf("/" + k + "-") > -1 && (G = p(G.replace(k, ""))), $ && !/\b(?:Avant|Nook)\b/.test(X) && (/Browser|Lunascape|Maxthon/.test(X) || "Safari" != X && /^iOS/.test(G) && /\bSafari\b/.test($[1]) || /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(X) && $[1]) && (k = $[$.length - 1]) && B.push(k), B.length && (B = ["(" + B.join("; ") + ")"]), J && V && V.indexOf(J) < 0 && B.push("on " + J), V && B.push((/^on /.test(B[B.length - 1]) ? "" : "on ") + V), G && (k = / ([\d.+]+)$/.exec(G), w = k && "/" == G.charAt(G.length - k[0].length - 1), G = { architecture: 32, family: k && !w ? G.replace(k[0], "") : G, version: k ? k[1] : null, toString: function toString() {var e = this.version;return this.family + (e && !w ? " " + e : "") + (64 == this.architecture ? " 64-bit" : "");} }), (k = /\b(?:AMD|IA|Win|WOW|x86_|x)64\b/i.exec(L)) && !/\bi686\b/i.test(L) ? (G && (G.architecture = 64, G.family = G.family.replace(RegExp(" *" + k), "")), X && (/\bWOW64\b/i.test(e) || W && /\w(?:86|32)$/.test(M.cpuClass || M.platform) && !/\bWin64; x64\b/i.test(e)) && B.unshift("32-bit")) : G && /^OS X/.test(G.family) && "Chrome" == X && parseFloat(H) >= 39 && (G.architecture = 64), e || (e = null);var K = {};return K.description = e, K.layout = $ && $[0], K.manufacturer = J, K.name = X, K.prerelease = q, K.product = V, K.ua = e, K.version = X && H, K.os = G || { architecture: null, family: null, version: null, toString: function toString() {return "null";} }, K.parse = g, K.toString = y, K.version && B.unshift(H), K.name && B.unshift(X), G && X && (G != String(G).split(" ")[0] || G != X.split(" ")[0] && !V) && B.push(V ? "(" + G + ")" : "on " + G), B.length && (K.description = B.join(" ")), K;}var y = { "function": !0, object: !0 },h = y[typeof window] && window || this,v = y[typeof t] && t,b = y[typeof e] && e && !e.nodeType && e,M = v && b && "object" == typeof s && s;!M || M.global !== M && M.window !== M && M.self !== M || (h = M);var T = Math.pow(2, 53) - 1,S = /\bOpera/,k = Object.prototype,w = k.hasOwnProperty,C = k.toString,I = g();h.platform = I, r = function () {return I;}.call(t, n, t, e), !(void 0 !== r && (e.exports = r));}).call(this);}).call(t, n(88)(e), function () {return this;}());}, function (e, t, n) {"use strict";var r = n(3),s = { genUrlSep: function genUrlSep(e) {e = "" + e;var t = e.indexOf("?") === -1 ? "?imageView&" : "&";return t;}, url2object: function url2object(e) {e = e || "";var t = e.indexOf("https") >= 0 ? "https://" : "http://",n = e.replace(t, "");n.indexOf("?") >= 0 && (n = n.substring(0, n.indexOf("?")));var r = n.split("/");n = r[0];var s = "";if (r.length > 0 && (s = r.slice(1).join("/")), e.indexOf("?") === -1) return { protocol: t, hostname: n, path: s, query: {} };var o = e.substr(e.indexOf("?") + 1),i = o.split("&"),a = {};return i.forEach(function (e) {if (e.indexOf("=") > 0) {var t = e.split("=");a[t[0]] = decodeURIComponent(t[1]);} else a[e] = "";}), { protocol: t, hostname: n, path: s, query: a };}, object2url: function object2url(e) {var t = e.protocol,n = e.hostname,r = e.path,s = e.query;t = t || "http://", n = n || "", r && (n = n + "/" + r), s = s || {};var o = [];for (var i in s) {"imageView" !== i && o.push(i + "=" + encodeURIComponent(s[i]));}return o.length > 0 ? "" + t + n + "?imageView&" + o.join("&") : "" + t + n;}, genPrivateUrl: function genPrivateUrl(e) {var t = s.url2object(e),n = t.hostname,o = t.path,i = r.downloadHost,a = r.downloadUrl;if (n === i) {var c = o.indexOf("/");if (c !== -1) {var u = o.substring(0, c),l = o.substring(c + 1);return a.replace("{bucket}", u).replace("{object}", l);}} else {if (n.indexOf(i) === -1) return e;var d = t.path,m = d.indexOf(".");if (m !== -1) {var f = d.substring(0, m),p = d;return a.replace("{bucket}", f).replace("{object}", p);}}} };e.exports = s;}, function (e, t, n) {"use strict";function r(e) {this.mixin(e);}var s = n(1),o = s.undef,i = n(6),a = n(93),c = n(114),u = n(116),l = n(112),d = n(113),m = n(115);r.prototype.mixin = function (e) {var t = this;this.configMap = this.configMap || {}, ["idMap", "cmdConfig", "packetConfig"].forEach(function (n) {t.configMap[n] = s.merge({}, t.configMap[n], e.configMap && e.configMap[n]);}), ["serializeMap", "unserializeMap"].forEach(function (n) {t[n] = s.merge({}, t[n], e[n]);});};var f = new r({ configMap: a, serializeMap: c, unserializeMap: u }),p = new r({ configMap: l, serializeMap: d, unserializeMap: m });r.getInstance = function (e) {switch (e) {case "IM":return f;case "Chatroom":return p;}}, r.prototype.createCmd = function () {var e = 1;return function (t, n) {var r = this,s = this.configMap.cmdConfig[t];return t = { SID: s.sid, CID: s.cid, SER: "heartbeat" === t ? 0 : e++ }, s.params && (t.Q = [], s.params.forEach(function (e) {var s = e.type,i = e.name,a = e.entity,c = n[i];if (!o(c)) {switch (s) {case "PropertyArray":s = "ArrayMable", c = c.map(function (e) {return { t: "Property", v: r.serialize(e, a) };});break;case "Property":c = r.serialize(c, i);break;case "bool":c = c ? "true" : "false";}t.Q.push({ t: s, v: c });}})), t;};}(), r.prototype.parseResponse = function (e) {var t = this,n = JSON.parse(e),r = { raw: n, rawStr: e, error: i.genError(n.code) },o = t.configMap.packetConfig[n.sid + "_" + n.cid];if (!o) return r.notFound = { sid: n.sid, cid: n.cid }, r;var a = n.r,c = "notify" === o.service && !o.cmd;if (r.isNotify = c, c) {var u = n.r[1].headerPacket;if (o = t.configMap.packetConfig[u.sid + "_" + u.cid], a = n.r[1].body, !o) return r.notFound = { sid: u.sid, cid: u.cid }, r;}if (r.service = o.service, r.cmd = o.cmd, r.error) {var l = n.sid + "_" + n.cid;if (c && (l = u.sid + "_" + u.cid), r.error.cmd = r.cmd, r.error.callFunc = "protocol::parseResponse: " + l, 416 === r.error.code) {var d = a[0];d && (r.frequencyControlDuration = 1e3 * d);}}var m = !1;return r.error && o.trivialErrorCodes && (m = o.trivialErrorCodes.indexOf(r.error.code) !== -1), r.error && !m || !o.response || (r.content = {}, o.response.forEach(function (e, o) {var i = a[o];if (!s.undef(i)) {var u = e.type,l = e.name,d = e.entity || l;switch (u) {case "Property":r.content[l] = t.unserialize(i, d);break;case "PropertyArray":r.content[l] = [], i.forEach(function (e) {r.content[l].push(t.unserialize(e, d));});break;case "KVArray":r.content[l] = i;break;case "long":case "Long":case "byte":case "Byte":case "Number":r.content[l] = +i;break;default:r.content[l] = i;}if (c && "msg" === l || "sysMsg" === l) {var m = r.content[l];s.isObject(m) && !m.idServer && (m.idServer = "" + n.r[0], m.type && "8" === m.type && m.deletedIdClient && (m.idServer = m.deletedIdClient));}}})), r;}, r.prototype.serialize = function (e, t) {var n = this.serializeMap[t],r = {};for (var s in n) {e.hasOwnProperty(s) && (r[n[s]] = e[s]);}return r;}, r.prototype.unserialize = function (e, t) {var n = this.unserializeMap[t],r = {};if (e) for (var s in n) {e.hasOwnProperty(s) && (r[n[s]] = e[s]);}return r;}, e.exports = r;}, function (e, t) {"use strict";t.__esModule = !0, t["default"] = function (e, t) {if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");};}, function (e, t) {e.exports = function (e) {try {return !!e();} catch (t) {return !0;}};}, function (e, t) {e.exports = function (e, t) {return { enumerable: !(1 & e), configurable: !(2 & e), writable: !(4 & e), value: t };};}, function (e, t) {var n = 0,r = Math.random();e.exports = function (e) {return "Symbol(".concat(void 0 === e ? "" : e, ")_", (++n + r).toString(36));};}, function (e, t, n) {"use strict";function r(e) {var t = this;s.verifyOptions(e, "teamId", "team::TeamMember"), s.verifyParamAtLeastPresentOne(e, "nickInTeam muteTeam muteNotiType custom", "team::TeamMember"), t.teamId = e.teamId, o(e.account) && (t.account = e.account), o(e.nickInTeam) && (t.nickInTeam = e.nickInTeam), o(e.muteNotiType) ? t.bits = e.muteNotiType : o(e.muteTeam) && (t.bits = 0, e.muteTeam && (t.bits += 1)), o(e.mute) && (t.mute = e.mute ? 1 : 0), o(e.custom) && (t.custom = "" + e.custom);}var s = n(1),o = s.notundef,i = s.fillPropertyWithDefault,a = { 0: "normal", 1: "owner", 2: "manager" };r.reverse = function (e) {var t = s.copy(e);if (o(t.teamId) && (t.teamId = "" + t.teamId), o(t.type) && (t.type = a[t.type]), o(t.active) && (t.active = 1 === +t.active), o(t.valid) && (t.valid = 1 === +t.valid), o(t.mute) && (t.mute = 1 === +t.mute), o(t.joinTime) && (t.joinTime = +t.joinTime), o(t.updateTime) && (t.updateTime = +t.updateTime), o(t.bits)) {var n = t.bits;delete t.bits, t.muteTeam = !!(1 & n), t.muteNotiType = n;}return o(t.teamId) && o(t.account) && (t.id = r.genId(t.teamId, t.account)), t;}, r.reverseMembers = function (e) {return e.map(function (e) {return r.reverse(e);});}, r.fillProperties = function (e) {var t = i(e, "mute", !1),n = i(e, "custom", "");return t || n;}, r.genId = function (e, t) {return e + "-" + t;}, r.accounts2ids = function (e, t) {return t.map(function (t) {return r.genId(e, t);});}, r.assembleMembers = function (e, t) {return s.isArray(t) || (t = [t]), t.map(function (t) {return r.assembleMember(e, t);});}, r.assembleMember = function (e, t) {return { id: r.genId(e.teamId, t), account: t, teamId: e.teamId, type: "normal", nickInTeam: "", muteTeam: !1, mute: !1, joinTime: e.memberUpdateTime, updateTime: e.memberUpdateTime, active: !0, valid: !0 };}, r.assembleOwner = function (e) {var t = r.assembleMember(e, e.owner);return t.type = "owner", t;}, e.exports = r;}, function (module, exports, __webpack_require__) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (module) {/*! Socket.IO.js build:0.9.11, development. Copyright(c) 2011 LearnBoost <dev@learnboost.com> MIT Licensed */
      var io = module.exports;window.io ? module && (module.exports = io = window.io) : window.io = io, function () {if (function (e, t) {var n = e;n.version = "0.9.11", n.protocol = 1, n.transports = [], n.j = [], n.sockets = {}, n.connect = function (e, r) {var s,o,i = n.util.parseUri(e);t && t.location && (i.protocol = i.protocol || t.location.protocol.slice(0, -1), i.host = i.host || (t.document ? t.document.domain : t.location.hostname), i.port = i.port || t.location.port), s = n.util.uniqueUri(i);var a = { host: i.host, secure: "https" == i.protocol, port: i.port || ("https" == i.protocol ? 443 : 80), query: i.query || "" };return n.util.merge(a, r), !a["force new connection"] && n.sockets[s] || (o = new n.Socket(a)), !a["force new connection"] && o && (n.sockets[s] = o), o = o || n.sockets[s], o.of(i.path.length > 1 ? i.path : "");};}(module.exports, window), function (e, t) {var n = e.util = {},r = /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,s = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];n.parseUri = function (e) {for (var t = r.exec(e || ""), n = {}, o = 14; o--;) {n[s[o]] = t[o] || "";}return n;}, n.uniqueUri = function (e) {var n = e.protocol,r = e.host,s = e.port;return "document" in t ? (r = r || document.domain, s = s || ("https" == n && "https:" !== document.location.protocol ? 443 : document.location.port)) : (r = r || "localhost", s || "https" != n || (s = 443)), (n || "http") + "://" + r + ":" + (s || 80);}, n.query = function (e, t) {var r = n.chunkQuery(e || ""),s = [];n.merge(r, n.chunkQuery(t || ""));for (var o in r) {r.hasOwnProperty(o) && s.push(o + "=" + r[o]);}return s.length ? "?" + s.join("&") : "";}, n.chunkQuery = function (e) {for (var t, n = {}, r = e.split("&"), s = 0, o = r.length; s < o; ++s) {t = r[s].split("="), t[0] && (n[t[0]] = t[1]);}return n;};var o = !1;n.load = function (e) {return "document" in t && "complete" === document.readyState || o ? e() : void n.on(t, "load", e, !1);}, n.on = function (e, t, n, r) {e.attachEvent ? e.attachEvent("on" + t, n) : e.addEventListener && e.addEventListener(t, n, r);}, n.request = function (e) {if (e && "undefined" != typeof XDomainRequest && !n.ua.hasCORS) return new XDomainRequest();if ("undefined" != typeof XMLHttpRequest && (!e || n.ua.hasCORS)) return new XMLHttpRequest();if (!e) try {return new window[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");} catch (t) {}return null;}, "undefined" != typeof window && n.load(function () {o = !0;}), n.defer = function (e) {return n.ua.webkit && "undefined" == typeof importScripts ? void n.load(function () {setTimeout(e, 100);}) : e();}, n.merge = function (e, t, r, s) {var o,i = s || [],a = "undefined" == typeof r ? 2 : r;for (o in t) {t.hasOwnProperty(o) && n.indexOf(i, o) < 0 && ("object" == typeof e[o] && a ? n.merge(e[o], t[o], a - 1, i) : (e[o] = t[o], i.push(t[o])));}return e;}, n.mixin = function (e, t) {n.merge(e.prototype, t.prototype);}, n.inherit = function (e, t) {function n() {}n.prototype = t.prototype, e.prototype = new n();}, n.isArray = Array.isArray || function (e) {return "[object Array]" === Object.prototype.toString.call(e);}, n.intersect = function (e, t) {for (var r = [], s = e.length > t.length ? e : t, o = e.length > t.length ? t : e, i = 0, a = o.length; i < a; i++) {~n.indexOf(s, o[i]) && r.push(o[i]);}return r;}, n.indexOf = function (e, t, n) {for (var r = e.length, n = n < 0 ? n + r < 0 ? 0 : n + r : n || 0; n < r && e[n] !== t; n++) {;}return r <= n ? -1 : n;}, n.toArray = function (e) {for (var t = [], n = 0, r = e.length; n < r; n++) {t.push(e[n]);}return t;}, n.ua = {}, n.ua.hasCORS = "undefined" != typeof XMLHttpRequest && function () {try {var e = new XMLHttpRequest();} catch (t) {return !1;}return void 0 != e.withCredentials;}(), n.ua.webkit = "undefined" != typeof navigator && /webkit/i.test(navigator.userAgent), n.ua.iDevice = "undefined" != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent);}("undefined" != typeof io ? io : module.exports, window), function (e, t) {function n() {}e.EventEmitter = n, n.prototype.on = function (e, n) {return this.$events || (this.$events = {}), this.$events[e] ? t.util.isArray(this.$events[e]) ? this.$events[e].push(n) : this.$events[e] = [this.$events[e], n] : this.$events[e] = n, this;}, n.prototype.addListener = n.prototype.on, n.prototype.once = function (e, t) {function n() {r.removeListener(e, n), t.apply(this, arguments);}var r = this;return n.listener = t, this.on(e, n), this;}, n.prototype.removeListener = function (e, n) {if (this.$events && this.$events[e]) {var r = this.$events[e];if (t.util.isArray(r)) {for (var s = -1, o = 0, i = r.length; o < i; o++) {if (r[o] === n || r[o].listener && r[o].listener === n) {s = o;break;}}if (s < 0) return this;r.splice(s, 1), r.length || delete this.$events[e];} else (r === n || r.listener && r.listener === n) && delete this.$events[e];}return this;}, n.prototype.removeAllListeners = function (e) {return void 0 === e ? (this.$events = {}, this) : (this.$events && this.$events[e] && (this.$events[e] = null), this);}, n.prototype.listeners = function (e) {return this.$events || (this.$events = {}), this.$events[e] || (this.$events[e] = []), t.util.isArray(this.$events[e]) || (this.$events[e] = [this.$events[e]]), this.$events[e];}, n.prototype.emit = function (e) {if (!this.$events) return !1;var n = this.$events[e];if (!n) return !1;var r = Array.prototype.slice.call(arguments, 1);if ("function" == typeof n) n.apply(this, r);else {if (!t.util.isArray(n)) return !1;for (var s = n.slice(), o = 0, i = s.length; o < i; o++) {s[o].apply(this, r);}}return !0;};}("undefined" != typeof io ? io : module.exports, "undefined" != typeof io ? io : module.parent.exports), function (exports, nativeJSON) {"use strict";function f(e) {return e < 10 ? "0" + e : e;}function date(e, t) {return isFinite(e.valueOf()) ? e.getUTCFullYear() + "-" + f(e.getUTCMonth() + 1) + "-" + f(e.getUTCDate()) + "T" + f(e.getUTCHours()) + ":" + f(e.getUTCMinutes()) + ":" + f(e.getUTCSeconds()) + "Z" : null;}function quote(e) {return escapable.lastIndex = 0, escapable.test(e) ? '"' + e.replace(escapable, function (e) {var t = meta[e];return "string" == typeof t ? t : "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4);}) + '"' : '"' + e + '"';}function str(e, t) {var n,r,s,o,i,a = gap,c = t[e];switch (c instanceof Date && (c = date(e)), "function" == typeof rep && (c = rep.call(t, e, c)), typeof c) {case "string":return quote(c);case "number":return isFinite(c) ? String(c) : "null";case "boolean":case "null":return String(c);case "object":if (!c) return "null";if (gap += indent, i = [], "[object Array]" === Object.prototype.toString.apply(c)) {for (o = c.length, n = 0; n < o; n += 1) {i[n] = str(n, c) || "null";}return s = 0 === i.length ? "[]" : gap ? "[\n" + gap + i.join(",\n" + gap) + "\n" + a + "]" : "[" + i.join(",") + "]", gap = a, s;}if (rep && "object" == typeof rep) for (o = rep.length, n = 0; n < o; n += 1) {"string" == typeof rep[n] && (r = rep[n], s = str(r, c), s && i.push(quote(r) + (gap ? ": " : ":") + s));} else for (r in c) {Object.prototype.hasOwnProperty.call(c, r) && (s = str(r, c), s && i.push(quote(r) + (gap ? ": " : ":") + s));}return s = 0 === i.length ? "{}" : gap ? "{\n" + gap + i.join(",\n" + gap) + "\n" + a + "}" : "{" + i.join(",") + "}", gap = a, s;}}if (nativeJSON && nativeJSON.parse) return exports.JSON = { parse: nativeJSON.parse, stringify: nativeJSON.stringify };var JSON = exports.JSON = {},cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta = { "\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" },rep;JSON.stringify = function (e, t, n) {var r;if (gap = "", indent = "", "number" == typeof n) for (r = 0; r < n; r += 1) {indent += " ";} else "string" == typeof n && (indent = n);if (rep = t, t && "function" != typeof t && ("object" != typeof t || "number" != typeof t.length)) throw new Error("socket.io:: replacer cannot JSON.stringify");return str("", { "": e });}, JSON.parse = function (text, reviver) {function walk(e, t) {var n,r,s = e[t];if (s && "object" == typeof s) for (n in s) {Object.prototype.hasOwnProperty.call(s, n) && (r = walk(s, n), void 0 !== r ? s[n] = r : delete s[n]);}return reviver.call(e, t, s);}var j;if (text = String(text), cx.lastIndex = 0, cx.test(text) && (text = text.replace(cx, function (e) {return "\\u" + ("0000" + e.charCodeAt(0).toString(16)).slice(-4);})), /^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return j = eval("(" + text + ")"), "function" == typeof reviver ? walk({ "": j }, "") : j;throw new SyntaxError("socket.io:: reviver cannot JSON.parse");};}("undefined" != typeof io ? io : module.exports, "undefined" != typeof JSON ? JSON : void 0), function (e, t) {var n = e.parser = {},r = n.packets = ["disconnect", "connect", "heartbeat", "message", "json", "event", "ack", "error", "noop"],s = n.reasons = ["transport not supported", "client not handshaken", "unauthorized"],o = n.advice = ["reconnect"],i = t.JSON,a = t.util.indexOf;n.encodePacket = function (e) {var t = a(r, e.type),n = e.id || "",c = e.endpoint || "",u = e.ack,l = null;switch (e.type) {case "error":var d = e.reason ? a(s, e.reason) : "",m = e.advice ? a(o, e.advice) : "";"" === d && "" === m || (l = d + ("" !== m ? "+" + m : ""));break;case "message":"" !== e.data && (l = e.data);break;case "event":var f = { name: e.name };e.args && e.args.length && (f.args = e.args), l = i.stringify(f);break;case "json":l = i.stringify(e.data);break;case "connect":e.qs && (l = e.qs);break;case "ack":l = e.ackId + (e.args && e.args.length ? "+" + i.stringify(e.args) : "");}var p = [t, n + ("data" == u ? "+" : ""), c];return null !== l && void 0 !== l && p.push(l), p.join(":");}, n.encodePayload = function (e) {var t = "";if (1 == e.length) return e[0];for (var n = 0, r = e.length; n < r; n++) {var s = e[n];t += "�" + s.length + "�" + e[n];}return t;};var c = /([^:]+):([0-9]+)?(\+)?:([^:]+)?:?([\s\S]*)?/;n.decodePacket = function (e) {var t = e.match(c);if (!t) return {};var n = t[2] || "",e = t[5] || "",a = { type: r[t[1]], endpoint: t[4] || "" };switch (n && (a.id = n, t[3] ? a.ack = "data" : a.ack = !0), a.type) {case "error":var t = e.split("+");a.reason = s[t[0]] || "", a.advice = o[t[1]] || "";break;case "message":a.data = e || "";break;case "event":try {var u = i.parse(e);a.name = u.name, a.args = u.args;} catch (l) {}a.args = a.args || [];break;case "json":try {a.data = i.parse(e);} catch (l) {}break;case "connect":a.qs = e || "";break;case "ack":var t = e.match(/^([0-9]+)(\+)?(.*)/);if (t && (a.ackId = t[1], a.args = [], t[3])) try {a.args = t[3] ? i.parse(t[3]) : [];} catch (l) {}break;case "disconnect":case "heartbeat":}return a;}, n.decodePayload = function (e) {var t = function t(e, _t2) {for (var n = 0, r = e; r < _t2.length; r++) {if ("�" == _t2.charAt(r)) return n;n++;}return n;};if ("�" == e.charAt(0)) {for (var r = [], s = 1, o = ""; s < e.length; s++) {if ("�" == e.charAt(s)) {var i = e.substr(s + 1).substr(0, o);if ("�" != e.charAt(s + 1 + Number(o)) && s + 1 + Number(o) != e.length) {var a = Number(o);l = t(s + a + 1, e), i = e.substr(s + 1).substr(0, a + l), s += l;}r.push(n.decodePacket(i)), s += Number(o) + 1, o = "";} else o += e.charAt(s);}return r;}return [n.decodePacket(e)];};}("undefined" != typeof io ? io : module.exports, "undefined" != typeof io ? io : module.parent.exports), function (e, t) {function n(e, t) {this.socket = e, this.sessid = t;}e.Transport = n, t.util.mixin(n, t.EventEmitter), n.prototype.heartbeats = function () {return !0;}, n.prototype.onData = function (e) {if (this !== this.socket.transport) return this;if (this.clearCloseTimeout(), (this.socket.connected || this.socket.connecting || this.socket.reconnecting) && this.setCloseTimeout(), "" !== e) {var n = t.parser.decodePayload(e);if (n && n.length) for (var r = 0, s = n.length; r < s; r++) {this.onPacket(n[r]);}}return this;}, n.prototype.onPacket = function (e) {return this.socket.setHeartbeatTimeout(), "heartbeat" == e.type ? this.onHeartbeat() : ("connect" == e.type && "" == e.endpoint && this.onConnect(), "error" == e.type && "reconnect" == e.advice && (this.isOpen = !1), this.socket.onPacket(e), this);}, n.prototype.setCloseTimeout = function () {if (!this.closeTimeout) {var e = this;this.closeTimeout = setTimeout(function () {e.onDisconnect();}, this.socket.closeTimeout);}}, n.prototype.onDisconnect = function () {return this.isOpen && this.close(), this.clearTimeouts(), this.socket.transport === this ? this.socket.onDisconnect() : this.socket.setBuffer(!1), this;}, n.prototype.onConnect = function () {return this.socket.onConnect(), this;}, n.prototype.clearCloseTimeout = function () {this.closeTimeout && (clearTimeout(this.closeTimeout), this.closeTimeout = null);}, n.prototype.clearTimeouts = function () {this.clearCloseTimeout(), this.reopenTimeout && clearTimeout(this.reopenTimeout);}, n.prototype.packet = function (e) {this.send(t.parser.encodePacket(e));}, n.prototype.onHeartbeat = function (e) {this.packet({ type: "heartbeat" });}, n.prototype.onOpen = function () {this.isOpen = !0, this.clearCloseTimeout(), this.socket.onOpen();}, n.prototype.onClose = function () {this.isOpen = !1, this.socket.transport === this ? this.socket.onClose() : this.socket.setBuffer(!1), this.onDisconnect();}, n.prototype.prepareUrl = function () {var e = this.socket.options;return this.scheme() + "://" + e.host + ":" + e.port + "/" + e.resource + "/" + t.protocol + "/" + this.name + "/" + this.sessid;}, n.prototype.ready = function (e, t) {t.call(this);};}("undefined" != typeof io ? io : module.exports, "undefined" != typeof io ? io : module.parent.exports), function (e, t, n) {function r(e) {if (this.options = { port: 80, secure: !1, document: "document" in n && document, resource: "socket.io", transports: e.transports || t.transports, "connect timeout": 1e4, "try multiple transports": !0, reconnect: !0, "reconnection delay": 500, "reconnection limit": 1 / 0, "reopen delay": 3e3, "max reconnection attempts": 10, "sync disconnect on unload": !1, "auto connect": !0, "flash policy port": 10843, manualFlush: !1 }, t.util.merge(this.options, e), this.connected = !1, this.open = !1, this.connecting = !1, this.reconnecting = !1, this.namespaces = {}, this.buffer = [], this.doBuffer = !1, this.options["sync disconnect on unload"] && (!this.isXDomain() || t.util.ua.hasCORS)) {var r = this;t.util.on(n, "beforeunload", function () {r.disconnectSync();}, !1);}this.options["auto connect"] && this.connect();}function s() {}e.Socket = r, t.util.mixin(r, t.EventEmitter), r.prototype.of = function (e) {return this.namespaces[e] || (this.namespaces[e] = new t.SocketNamespace(this, e), "" !== e && this.namespaces[e].packet({ type: "connect" })), this.namespaces[e];}, r.prototype.publish = function () {this.emit.apply(this, arguments);var e;for (var t in this.namespaces) {this.namespaces.hasOwnProperty(t) && (e = this.of(t), e.$emit.apply(e, arguments));}}, r.prototype.handshake = function (e) {function n(t) {t instanceof Error ? (r.connecting = !1, r.onError(t.message)) : (console.log("D handshake success " + t), e.apply(null, t.split(":")));}var r = this,o = this.options,i = ["http" + (o.secure ? "s" : "") + ":/", o.host + ":" + o.port, o.resource, t.protocol, t.util.query(this.options.query, "t=" + +new Date())].join("/");if (this.isXDomain() && !t.util.ua.hasCORS && document && document.getElementsByTagName) {var a = document.getElementsByTagName("script")[0],c = document.createElement("script");c.src = i + "&jsonp=" + t.j.length, c.onreadystatechange = function () {"loaded" == this.readyState && c.parentNode && (c.parentNode.removeChild(c), r.connecting = !1, !r.reconnecting && r.onError("Server down or port not open"), r.publish("handshake_failed"));}, a.parentNode.insertBefore(c, a), t.j.push(function (e) {n(e), c.parentNode.removeChild(c);});} else {var u = t.util.request();u.open("GET", i, !0), u.timeout = 1e4, this.isXDomain() && (u.withCredentials = !0), u.onreadystatechange = function () {4 == u.readyState && (u.onreadystatechange = s, 200 == u.status ? n(u.responseText) : 403 == u.status ? (r.onError(u.responseText), r.publish("handshake_failed")) : (r.connecting = !1, !r.reconnecting && r.onError(u.responseText), r.publish("handshake_failed")));}, u.ontimeout = function (e) {r.connecting = !1, !r.reconnecting && r.onError(u.responseText), r.publish("handshake_failed");}, u.send(null);}}, r.prototype.connect = function (e) {if (this.connecting) return this;var n = this;return n.connecting = !0, this.handshake(function (r, s, o, i) {n.sessionid = r, n.closeTimeout = 1e3 * o, n.heartbeatTimeout = 1e3 * s, n.transports || (n.transports = n.origTransports = i ? t.util.intersect(i.split(","), n.options.transports) : n.options.transports), console.log("D options transports: " + n.options.transports), console.log("D transports: " + n.transports), n.setHeartbeatTimeout(), n.once("connect", function () {clearTimeout(n.connectTimeoutTimer), n.connectTimeoutTimer = null, e && "function" == typeof e && e();}), n.doConnect();}), this;}, r.prototype.doConnect = function () {var e = this;return e.transport && e.transport.clearTimeouts(), e.transport = e.getTransport(e.transports), e.transport ? void e.transport.ready(e, function () {e.connecting = !0, e.publish("connecting", e.transport.name), e.transport.open(), e.options["connect timeout"] && (e.connectTimeoutTimer && clearTimeout(e.connectTimeoutTimer), e.connectTimeoutTimer = setTimeout(e.tryNextTransport.bind(e), e.options["connect timeout"]));}) : e.publish("connect_failed");}, r.prototype.getTransport = function (e) {for (var n, r = e || this.transports, s = 0; n = r[s]; s++) {if (console.log("D check " + n + " " + t.Transport[n].check(this) + " , cors " + t.Transport[n].xdomainCheck(this)), t.Transport[n] && t.Transport[n].check(this) && (!this.isXDomain() || t.Transport[n].xdomainCheck(this))) {var o = new t.Transport[n](this, this.sessionid);return o;}}return null;}, r.prototype.tryNextTransport = function () {console.log("D try next transport");var e = this;if (!e.connected && (e.connecting = !1, e.options["try multiple transports"])) {for (var t = e.transports; t.length > 0 && t.splice(0, 1)[0] != e.transport.name;) {;}t.length ? e.doConnect() : e.publish("connect_failed");}}, r.prototype.setHeartbeatTimeout = function () {if (clearTimeout(this.heartbeatTimeoutTimer), !this.transport || this.transport.heartbeats()) {var e = this;this.heartbeatTimeoutTimer = setTimeout(function () {e.transport && e.transport.onClose();}, this.heartbeatTimeout);}}, r.prototype.packet = function (e) {return this.connected && !this.doBuffer ? this.transport.packet(e) : this.buffer.push(e), this;}, r.prototype.setBuffer = function (e) {this.doBuffer = e, !e && this.connected && this.buffer.length && (this.options.manualFlush || this.flushBuffer());}, r.prototype.flushBuffer = function () {this.transport.payload(this.buffer), this.buffer = [];}, r.prototype.disconnect = function () {return (this.connected || this.connecting) && (this.open && this.of("").packet({ type: "disconnect" }), this.onDisconnect("booted")), this;}, r.prototype.disconnectSync = function () {var e = t.util.request(),n = ["http" + (this.options.secure ? "s" : "") + ":/", this.options.host + ":" + this.options.port, this.options.resource, t.protocol, "", this.sessionid].join("/") + "/?disconnect=1";e.open("GET", n, !1), e.send(null), this.onDisconnect("booted");}, r.prototype.isXDomain = function () {var e = n.location.port || ("https:" == n.location.protocol ? 443 : 80);return this.options.host !== n.location.hostname || this.options.port != e;}, r.prototype.onConnect = function () {this.connected || (this.connected = !0, this.connecting = !1, this.doBuffer || this.setBuffer(!1), this.emit("connect"));}, r.prototype.onOpen = function () {this.open = !0;}, r.prototype.onClose = function () {this.open = !1, clearTimeout(this.heartbeatTimeoutTimer);}, r.prototype.onPacket = function (e) {this.of(e.endpoint).onPacket(e);}, r.prototype.onError = function (e) {e && e.advice && "reconnect" === e.advice && (this.connected || this.connecting) && (this.disconnect(), this.options.reconnect && this.reconnect()), this.publish("error", e && e.reason ? e.reason : e);}, r.prototype.onDisconnect = function (e) {var t = this.connected,n = this.connecting;this.connected = !1, this.connecting = !1, this.open = !1, (t || n) && (this.transport.close(), this.transport.clearTimeouts(), t && (this.publish("disconnect", e), "booted" != e && this.options.reconnect && !this.reconnecting && this.reconnect()), n && this.tryNextTransport());}, r.prototype.reconnect = function () {function e() {if (n.connected) {for (var e in n.namespaces) {n.namespaces.hasOwnProperty(e) && "" !== e && n.namespaces[e].packet({ type: "connect" });}n.publish("reconnect", n.transport.name, n.reconnectionAttempts);}clearTimeout(n.reconnectionTimer), n.removeListener("connect_failed", t), n.removeListener("connect", t), n.reconnecting = !1, delete n.reconnectionAttempts, delete n.reconnectionDelay, delete n.reconnectionTimer, delete n.redoTransports, n.options["try multiple transports"] = s;}function t() {if (n.reconnecting) return n.connected ? e() : n.connecting && n.reconnecting ? n.reconnectionTimer = setTimeout(t, 1e3) : void (n.reconnectionAttempts++ >= r ? n.redoTransports ? (n.publish("reconnect_failed"), e()) : (n.on("connect_failed", t), n.options["try multiple transports"] = !0, n.transports = n.origTransports, n.transport = n.getTransport(), n.redoTransports = !0, n.connect()) : (n.reconnectionDelay < o && (n.reconnectionDelay *= 2), n.connect(), n.publish("reconnecting", n.reconnectionDelay, n.reconnectionAttempts), n.reconnectionTimer = setTimeout(t, n.reconnectionDelay)));}this.reconnecting = !0, this.reconnectionAttempts = 0, this.reconnectionDelay = this.options["reconnection delay"];var n = this,r = this.options["max reconnection attempts"],s = this.options["try multiple transports"],o = this.options["reconnection limit"];this.options["try multiple transports"] = !1, this.reconnectionTimer = setTimeout(t, this.reconnectionDelay), this.on("connect", t);};}("undefined" != typeof io ? io : module.exports, "undefined" != typeof io ? io : module.parent.exports, window), function (e, t) {function n(e, t) {this.socket = e, this.name = t || "", this.flags = {}, this.json = new r(this, "json"), this.ackPackets = 0, this.acks = {};}function r(e, t) {this.namespace = e, this.name = t;}e.SocketNamespace = n, t.util.mixin(n, t.EventEmitter), n.prototype.$emit = t.EventEmitter.prototype.emit, n.prototype.of = function () {return this.socket.of.apply(this.socket, arguments);}, n.prototype.packet = function (e) {return e.endpoint = this.name, this.socket.packet(e), this.flags = {}, this;}, n.prototype.send = function (e, t) {var n = { type: this.flags.json ? "json" : "message", data: e };return "function" == typeof t && (n.id = ++this.ackPackets, n.ack = !0, this.acks[n.id] = t), this.packet(n);}, n.prototype.emit = function (e) {var t = Array.prototype.slice.call(arguments, 1),n = t[t.length - 1],r = { type: "event", name: e };return "function" == typeof n && (r.id = ++this.ackPackets, r.ack = "data", this.acks[r.id] = n, t = t.slice(0, t.length - 1)), r.args = t, this.packet(r);}, n.prototype.disconnect = function () {return "" === this.name ? this.socket.disconnect() : (this.packet({ type: "disconnect" }), this.$emit("disconnect")), this;}, n.prototype.onPacket = function (e) {function n() {r.packet({ type: "ack", args: t.util.toArray(arguments), ackId: e.id });}var r = this;switch (e.type) {case "connect":this.$emit("connect");break;case "disconnect":"" === this.name ? this.socket.onDisconnect(e.reason || "booted") : this.$emit("disconnect", e.reason);break;case "message":case "json":var s = ["message", e.data];"data" == e.ack ? s.push(n) : e.ack && this.packet({ type: "ack", ackId: e.id }), this.$emit.apply(this, s);break;case "event":var s = [e.name].concat(e.args);"data" == e.ack && s.push(n), this.$emit.apply(this, s);break;case "ack":this.acks[e.ackId] && (this.acks[e.ackId].apply(this, e.args), delete this.acks[e.ackId]);break;case "error":e.advice ? this.socket.onError(e) : "unauthorized" == e.reason ? this.$emit("connect_failed", e.reason) : this.$emit("error", e.reason);}}, r.prototype.send = function () {this.namespace.flags[this.name] = !0, this.namespace.send.apply(this.namespace, arguments);}, r.prototype.emit = function () {this.namespace.flags[this.name] = !0, this.namespace.emit.apply(this.namespace, arguments);};}("undefined" != typeof io ? io : module.exports, "undefined" != typeof io ? io : module.parent.exports), function (e, t, n) {function r(e) {t.Transport.apply(this, arguments);}e.websocket = r, t.util.inherit(r, t.Transport), r.prototype.name = "websocket", r.prototype.open = function () {var e,r = t.util.query(this.socket.options.query),s = this;return e || (e = n.MozWebSocket || n.WebSocket), this.websocket = new e(this.prepareUrl() + r), this.websocket.onopen = function () {s.onOpen(), s.socket.setBuffer(!1);}, this.websocket.onmessage = function (e) {s.onData(e.data);}, this.websocket.onclose = function () {s.socket.setBuffer(!0), s.onClose();}, this.websocket.onerror = function (e) {s.onError(e);}, this;}, t.util.ua.iDevice ? r.prototype.send = function (e) {var t = this;return setTimeout(function () {t.websocket.send(e);}, 0), this;} : r.prototype.send = function (e) {return this.websocket.send(e), this;}, r.prototype.payload = function (e) {for (var t = 0, n = e.length; t < n; t++) {this.packet(e[t]);}return this;}, r.prototype.close = function () {return this.websocket.close(), this;}, r.prototype.onError = function (e) {this.socket.onError(e);}, r.prototype.scheme = function () {return this.socket.options.secure ? "wss" : "ws";}, r.check = function () {return "WebSocket" in n && !("__addTask" in WebSocket) || "MozWebSocket" in n;}, r.xdomainCheck = function () {return !0;}, t.transports.push("websocket");}("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports, window), function (e, t) {function n() {t.Transport.websocket.apply(this, arguments);}e.flashsocket = n, t.util.inherit(n, t.Transport.websocket), n.prototype.name = "flashsocket", n.prototype.open = function () {var e = this,n = arguments;return WebSocket.__addTask(function () {t.Transport.websocket.prototype.open.apply(e, n);}), this;}, n.prototype.send = function () {var e = this,n = arguments;return WebSocket.__addTask(function () {t.Transport.websocket.prototype.send.apply(e, n);}), this;}, n.prototype.close = function () {return WebSocket.__tasks.length = 0, t.Transport.websocket.prototype.close.call(this), this;}, n.prototype.ready = function (e, r) {function s() {var t = e.options,s = t["flash policy port"],i = ["http" + (t.secure ? "s" : "") + ":/", t.host + ":" + t.port, t.resource, "static/flashsocket", "WebSocketMain" + (e.isXDomain() ? "Insecure" : "") + ".swf"];n.loaded || ("undefined" == typeof WEB_SOCKET_SWF_LOCATION && (WEB_SOCKET_SWF_LOCATION = i.join("/")), 843 !== s && WebSocket.loadFlashPolicyFile("xmlsocket://" + t.host + ":" + s), WebSocket.__initialize(), n.loaded = !0), r.call(o);}var o = this;return document.body ? s() : void t.util.load(s);}, n.check = function () {return !!("undefined" != typeof WebSocket && "__initialize" in WebSocket && swfobject) && swfobject.getFlashPlayerVersion().major >= 10;}, n.xdomainCheck = function () {return !0;}, "undefined" != typeof window && (window.WEB_SOCKET_DISABLE_AUTO_INITIALIZATION = !0), t.transports.push("flashsocket");}("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports), "undefined" != typeof window && "undefined" != typeof window.document) var swfobject = function () {function e() {if (!H) {try {var e = N.getElementsByTagName("body")[0].appendChild(y("span"));e.parentNode.removeChild(e);} catch (t) {return;}H = !0;for (var n = L.length, r = 0; r < n; r++) {L[r]();}}}function t(e) {H ? e() : L[L.length] = e;}function n(e) {if (typeof j.addEventListener != O) j.addEventListener("load", e, !1);else if (typeof N.addEventListener != O) N.addEventListener("load", e, !1);else if (typeof j.attachEvent != O) h(j, "onload", e);else if ("function" == typeof j.onload) {var t = j.onload;j.onload = function () {t(), e();};} else j.onload = e;}function r() {D ? s() : o();}function s() {var e = N.getElementsByTagName("body")[0],t = y(x);t.setAttribute("type", A);var n = e.appendChild(t);if (n) {var r = 0;!function () {if (typeof n.GetVariable != O) {var s = n.GetVariable("$version");s && (s = s.split(" ")[1].split(","), V.pv = [parseInt(s[0], 10), parseInt(s[1], 10), parseInt(s[2], 10)]);} else if (r < 10) return r++, void setTimeout(arguments.callee, 10);e.removeChild(t), n = null, o();}();} else o();}function o() {var e = B.length;if (e > 0) for (var t = 0; t < e; t++) {var n = B[t].id,r = B[t].callbackFn,s = { success: !1, id: n };if (V.pv[0] > 0) {var o = g(n);if (o) if (!v(B[t].swfVersion) || V.wk && V.wk < 312) {if (B[t].expressInstall && a()) {var l = {};l.data = B[t].expressInstall, l.width = o.getAttribute("width") || "0", l.height = o.getAttribute("height") || "0", o.getAttribute("class") && (l.styleclass = o.getAttribute("class")), o.getAttribute("align") && (l.align = o.getAttribute("align"));for (var d = {}, m = o.getElementsByTagName("param"), f = m.length, p = 0; p < f; p++) {"movie" != m[p].getAttribute("name").toLowerCase() && (d[m[p].getAttribute("name")] = m[p].getAttribute("value"));}c(l, d, n, r);} else u(o), r && r(s);} else M(n, !0), r && (s.success = !0, s.ref = i(n), r(s));} else if (M(n, !0), r) {var y = i(n);y && typeof y.SetVariable != O && (s.success = !0, s.ref = y), r(s);}}}function i(e) {var t = null,n = g(e);if (n && "OBJECT" == n.nodeName) if (typeof n.SetVariable != O) t = n;else {var r = n.getElementsByTagName(x)[0];r && (t = r);}return t;}function a() {return !$ && v("6.0.65") && (V.win || V.mac) && !(V.wk && V.wk < 312);}function c(e, t, n, r) {$ = !0, w = r || null, C = { success: !1, id: n };var s = g(n);if (s) {"OBJECT" == s.nodeName ? (S = l(s), k = null) : (S = s, k = n), e.id = R, (typeof e.width == O || !/%$/.test(e.width) && parseInt(e.width, 10) < 310) && (e.width = "310"), (typeof e.height == O || !/%$/.test(e.height) && parseInt(e.height, 10) < 137) && (e.height = "137"), N.title = N.title.slice(0, 47) + " - Flash Player Installation";var o = V.ie && V.win ? ["Active"].concat("").join("X") : "PlugIn",i = "MMredirectURL=" + j.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + o + "&MMdoctitle=" + N.title;if (typeof t.flashvars != O ? t.flashvars += "&" + i : t.flashvars = i, V.ie && V.win && 4 != s.readyState) {var a = y("div");n += "SWFObjectNew", a.setAttribute("id", n), s.parentNode.insertBefore(a, s), s.style.display = "none", function () {4 == s.readyState ? s.parentNode.removeChild(s) : setTimeout(arguments.callee, 10);}();}d(e, t, n);}}function u(e) {if (V.ie && V.win && 4 != e.readyState) {var t = y("div");e.parentNode.insertBefore(t, e), t.parentNode.replaceChild(l(e), t), e.style.display = "none", function () {4 == e.readyState ? e.parentNode.removeChild(e) : setTimeout(arguments.callee, 10);}();} else e.parentNode.replaceChild(l(e), e);}function l(e) {var t = y("div");if (V.win && V.ie) t.innerHTML = e.innerHTML;else {var n = e.getElementsByTagName(x)[0];if (n) {var r = n.childNodes;if (r) for (var s = r.length, o = 0; o < s; o++) {1 == r[o].nodeType && "PARAM" == r[o].nodeName || 8 == r[o].nodeType || t.appendChild(r[o].cloneNode(!0));}}}return t;}function d(e, t, n) {var r,s = g(n);if (V.wk && V.wk < 312) return r;if (s) if (typeof e.id == O && (e.id = n), V.ie && V.win) {var o = "";for (var i in e) {e[i] != Object.prototype[i] && ("data" == i.toLowerCase() ? t.movie = e[i] : "styleclass" == i.toLowerCase() ? o += ' class="' + e[i] + '"' : "classid" != i.toLowerCase() && (o += " " + i + '="' + e[i] + '"'));}var a = "";for (var c in t) {t[c] != Object.prototype[c] && (a += '<param name="' + c + '" value="' + t[c] + '" />');}s.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + o + ">" + a + "</object>", q[q.length] = e.id, r = g(e.id);} else {var u = y(x);u.setAttribute("type", A);for (var l in e) {e[l] != Object.prototype[l] && ("styleclass" == l.toLowerCase() ? u.setAttribute("class", e[l]) : "classid" != l.toLowerCase() && u.setAttribute(l, e[l]));}for (var d in t) {t[d] != Object.prototype[d] && "movie" != d.toLowerCase() && m(u, d, t[d]);}s.parentNode.replaceChild(u, s), r = u;}return r;}function m(e, t, n) {var r = y("param");r.setAttribute("name", t), r.setAttribute("value", n), e.appendChild(r);}function f(e) {var t = g(e);t && "OBJECT" == t.nodeName && (V.ie && V.win ? (t.style.display = "none", function () {4 == t.readyState ? p(e) : setTimeout(arguments.callee, 10);}()) : t.parentNode.removeChild(t));}function p(e) {var t = g(e);if (t) {for (var n in t) {"function" == typeof t[n] && (t[n] = null);}t.parentNode.removeChild(t);}}function g(e) {var t = null;try {t = N.getElementById(e);} catch (n) {}return t;}function y(e) {return N.createElement(e);}function h(e, t, n) {e.attachEvent(t, n), W[W.length] = [e, t, n];}function v(e) {var t = V.pv,n = e.split(".");return n[0] = parseInt(n[0], 10), n[1] = parseInt(n[1], 10) || 0, n[2] = parseInt(n[2], 10) || 0, t[0] > n[0] || t[0] == n[0] && t[1] > n[1] || t[0] == n[0] && t[1] == n[1] && t[2] >= n[2];}function b(e, t, n, r) {if (!V.ie || !V.mac) {var s = N.getElementsByTagName("head")[0];if (s) {var o = n && "string" == typeof n ? n : "screen";if (r && (I = null, _ = null), !I || _ != o) {var i = y("style");i.setAttribute("type", "text/css"), i.setAttribute("media", o), I = s.appendChild(i), V.ie && V.win && typeof N.styleSheets != O && N.styleSheets.length > 0 && (I = N.styleSheets[N.styleSheets.length - 1]), _ = o;}V.ie && V.win ? I && typeof I.addRule == x && I.addRule(e, t) : I && typeof N.createTextNode != O && I.appendChild(N.createTextNode(e + " {" + t + "}"));}}}function M(e, t) {if (X) {var n = t ? "visible" : "hidden";H && g(e) ? g(e).style.visibility = n : b("#" + e, "visibility:" + n);}}function T(e) {var t = /[\\\"<>\.;]/,n = null != t.exec(e);return n && typeof encodeURIComponent != O ? encodeURIComponent(e) : e;}var S,k,w,C,I,_,O = "undefined",x = "object",E = "Shockwave Flash",P = "ShockwaveFlash.ShockwaveFlash",A = "application/x-shockwave-flash",R = "SWFObjectExprInst",F = "onreadystatechange",j = window,N = document,U = navigator,D = !1,L = [r],B = [],q = [],W = [],H = !1,$ = !1,X = !0,V = function () {var e = typeof N.getElementById != O && typeof N.getElementsByTagName != O && typeof N.createElement != O,t = U.userAgent.toLowerCase(),n = U.platform.toLowerCase(),r = n ? /win/.test(n) : /win/.test(t),s = n ? /mac/.test(n) : /mac/.test(t),o = !!/webkit/.test(t) && parseFloat(t.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")),i = !1,a = [0, 0, 0],c = null;if (typeof U.plugins != O && typeof U.plugins[E] == x) c = U.plugins[E].description, !c || typeof U.mimeTypes != O && U.mimeTypes[A] && !U.mimeTypes[A].enabledPlugin || (D = !0, i = !1, c = c.replace(/^.*\s+(\S+\s+\S+$)/, "$1"), a[0] = parseInt(c.replace(/^(.*)\..*$/, "$1"), 10), a[1] = parseInt(c.replace(/^.*\.(.*)\s.*$/, "$1"), 10), a[2] = /[a-zA-Z]/.test(c) ? parseInt(c.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0);else if (typeof j[["Active"].concat("Object").join("X")] != O) try {var u = new window[["Active"].concat("Object").join("X")](P);u && (c = u.GetVariable("$version"), c && (i = !0, c = c.split(" ")[1].split(","), a = [parseInt(c[0], 10), parseInt(c[1], 10), parseInt(c[2], 10)]));} catch (l) {}return { w3: e, pv: a, wk: o, ie: i, win: r, mac: s };}();(function () {V.w3 && ((typeof N.readyState != O && "complete" == N.readyState || typeof N.readyState == O && (N.getElementsByTagName("body")[0] || N.body)) && e(),
            H || (typeof N.addEventListener != O && N.addEventListener("DOMContentLoaded", e, !1), V.ie && V.win && (N.attachEvent(F, function () {"complete" == N.readyState && (N.detachEvent(F, arguments.callee), e());}), j == top && !function () {if (!H) {try {N.documentElement.doScroll("left");} catch (t) {return void setTimeout(arguments.callee, 0);}e();}}()), V.wk && !function () {if (!H) return /loaded|complete/.test(N.readyState) ? void e() : void setTimeout(arguments.callee, 0);}(), n(e)));})(), function () {V.ie && V.win && window.attachEvent("onunload", function () {for (var e = W.length, t = 0; t < e; t++) {W[t][0].detachEvent(W[t][1], W[t][2]);}for (var n = q.length, r = 0; r < n; r++) {f(q[r]);}for (var s in V) {V[s] = null;}V = null;for (var o in swfobject) {swfobject[o] = null;}swfobject = null;});}();return { registerObject: function registerObject(e, t, n, r) {if (V.w3 && e && t) {var s = {};s.id = e, s.swfVersion = t, s.expressInstall = n, s.callbackFn = r, B[B.length] = s, M(e, !1);} else r && r({ success: !1, id: e });}, getObjectById: function getObjectById(e) {if (V.w3) return i(e);}, embedSWF: function embedSWF(e, n, r, s, o, i, u, l, m, f) {var p = { success: !1, id: n };V.w3 && !(V.wk && V.wk < 312) && e && n && r && s && o ? (M(n, !1), t(function () {r += "", s += "";var t = {};if (m && typeof m === x) for (var g in m) {t[g] = m[g];}t.data = e, t.width = r, t.height = s;var y = {};if (l && typeof l === x) for (var h in l) {y[h] = l[h];}if (u && typeof u === x) for (var b in u) {typeof y.flashvars != O ? y.flashvars += "&" + b + "=" + u[b] : y.flashvars = b + "=" + u[b];}if (v(o)) {var T = d(t, y, n);t.id == n && M(n, !0), p.success = !0, p.ref = T;} else {if (i && a()) return t.data = i, void c(t, y, n, f);M(n, !0);}f && f(p);})) : f && f(p);}, switchOffAutoHideShow: function switchOffAutoHideShow() {X = !1;}, ua: V, getFlashPlayerVersion: function getFlashPlayerVersion() {return { major: V.pv[0], minor: V.pv[1], release: V.pv[2] };}, hasFlashPlayerVersion: v, createSWF: function createSWF(e, t, n) {return V.w3 ? d(e, t, n) : void 0;}, showExpressInstall: function showExpressInstall(e, t, n, r) {V.w3 && a() && c(e, t, n, r);}, removeSWF: function removeSWF(e) {V.w3 && f(e);}, createCSS: function createCSS(e, t, n, r) {V.w3 && b(e, t, n, r);}, addDomLoadEvent: t, addLoadEvent: n, getQueryParamValue: function getQueryParamValue(e) {var t = N.location.search || N.location.hash;if (t) {if (/\?/.test(t) && (t = t.split("?")[1]), null == e) return T(t);for (var n = t.split("&"), r = 0; r < n.length; r++) {if (n[r].substring(0, n[r].indexOf("=")) == e) return T(n[r].substring(n[r].indexOf("=") + 1));}}return "";}, expressInstallCallback: function expressInstallCallback() {if ($) {var e = g(R);e && S && (e.parentNode.replaceChild(S, e), k && (M(k, !0), V.ie && V.win && (S.style.display = "block")), w && w(C)), $ = !1;}} };}();!function () {if ("undefined" != typeof window && !window.WebSocket) {var e = window.console;if (e && e.log && e.error || (e = { log: function log() {}, error: function error() {} }), !swfobject.hasFlashPlayerVersion("10.0.0")) return void e.error("Flash Player >= 10.0.0 is required.");"file:" == location.protocol && e.error("WARNING: web-socket-js doesn't work in file:///... URL unless you set Flash Security Settings properly. Open the page via Web server i.e. http://..."), WebSocket = function (_WebSocket) {function WebSocket(_x, _x2, _x3, _x4, _x5) {return _WebSocket.apply(this, arguments);}WebSocket.toString = function () {return _WebSocket.toString();};return WebSocket;}(function (e, t, n, r, s) {var o = this;o.__id = WebSocket.__nextId++, WebSocket.__instances[o.__id] = o, o.readyState = WebSocket.CONNECTING, o.bufferedAmount = 0, o.__events = {}, t ? "string" == typeof t && (t = [t]) : t = [], setTimeout(function () {WebSocket.__addTask(function () {WebSocket.__flash.create(o.__id, e, t, n || null, r || 0, s || null);});}, 0);}), WebSocket.prototype.send = function (e) {if (this.readyState == WebSocket.CONNECTING) throw "socket.io::send: INVALID_STATE_ERR: Web Socket connection has not been established";var t = WebSocket.__flash.send(this.__id, encodeURIComponent(e));return t < 0 || (this.bufferedAmount += t, !1);}, WebSocket.prototype.close = function () {this.readyState != WebSocket.CLOSED && this.readyState != WebSocket.CLOSING && (this.readyState = WebSocket.CLOSING, WebSocket.__flash.close(this.__id));}, WebSocket.prototype.addEventListener = function (e, t, n) {e in this.__events || (this.__events[e] = []), this.__events[e].push(t);}, WebSocket.prototype.removeEventListener = function (e, t, n) {if (e in this.__events) for (var r = this.__events[e], s = r.length - 1; s >= 0; --s) {if (r[s] === t) {r.splice(s, 1);break;}}}, WebSocket.prototype.dispatchEvent = function (e) {for (var t = this.__events[e.type] || [], n = 0; n < t.length; ++n) {t[n](e);}var r = this["on" + e.type];r && r(e);}, WebSocket.prototype.__handleEvent = function (e) {"readyState" in e && (this.readyState = e.readyState), "protocol" in e && (this.protocol = e.protocol);var t;if ("open" == e.type || "error" == e.type) t = this.__createSimpleEvent(e.type);else if ("close" == e.type) t = this.__createSimpleEvent("close");else {if ("message" != e.type) throw "socket.io::handleFlashEvent: unknown event type: " + e.type;var n = decodeURIComponent(e.message);t = this.__createMessageEvent("message", n);}this.dispatchEvent(t);}, WebSocket.prototype.__createSimpleEvent = function (e) {if (document.createEvent && window.Event) {var t = document.createEvent("Event");return t.initEvent(e, !1, !1), t;}return { type: e, bubbles: !1, cancelable: !1 };}, WebSocket.prototype.__createMessageEvent = function (e, t) {if (document.createEvent && window.MessageEvent && !window.opera) {var n = document.createEvent("MessageEvent");return n.initMessageEvent("message", !1, !1, t, null, null, window, null), n;}return { type: e, data: t, bubbles: !1, cancelable: !1 };}, WebSocket.CONNECTING = 0, WebSocket.OPEN = 1, WebSocket.CLOSING = 2, WebSocket.CLOSED = 3, WebSocket.__flash = null, WebSocket.__instances = {}, WebSocket.__tasks = [], WebSocket.__nextId = 0, WebSocket.loadFlashPolicyFile = function (e) {WebSocket.__addTask(function () {WebSocket.__flash.loadManualPolicyFile(e);});}, WebSocket.__initialize = function () {if (!WebSocket.__flash) {if (WebSocket.__swfLocation && (window.WEB_SOCKET_SWF_LOCATION = WebSocket.__swfLocation), !window.WEB_SOCKET_SWF_LOCATION) return void e.error("[WebSocket] set WEB_SOCKET_SWF_LOCATION to location of WebSocketMain.swf");var t = document.createElement("div");t.id = "webSocketContainer", t.style.position = "absolute", WebSocket.__isFlashLite() ? (t.style.left = "0px", t.style.top = "0px") : (t.style.left = "-100px", t.style.top = "-100px");var n = document.createElement("div");n.id = "webSocketFlash", t.appendChild(n), document.body.appendChild(t), swfobject.embedSWF(WEB_SOCKET_SWF_LOCATION, "webSocketFlash", "1", "1", "10.0.0", null, null, { hasPriority: !0, swliveconnect: !0, allowScriptAccess: "always" }, null, function (t) {t.success || e.error("[WebSocket] swfobject.embedSWF failed");});}}, WebSocket.__onFlashInitialized = function () {setTimeout(function () {WebSocket.__flash = document.getElementById("webSocketFlash"), WebSocket.__flash.setCallerUrl(location.href), WebSocket.__flash.setDebug(!!window.WEB_SOCKET_DEBUG);for (var e = 0; e < WebSocket.__tasks.length; ++e) {WebSocket.__tasks[e]();}WebSocket.__tasks = [];}, 0);}, WebSocket.__onFlashEvent = function () {return setTimeout(function () {try {for (var t = WebSocket.__flash.receiveEvents(), n = 0; n < t.length; ++n) {WebSocket.__instances[t[n].webSocketId].__handleEvent(t[n]);}} catch (r) {e.error(r);}}, 0), !0;};var t = function t() {var e = function e(_e, t) {t = t || 2;for (var n = "" + _e; n.length < t;) {n = "0" + n;}return n;},t = new Date(),n = t.getFullYear() + "-" + e(t.getMonth() + 1) + "-" + e(t.getDate()) + " " + e(t.getHours()) + ":" + e(t.getMinutes()) + ":" + e(t.getSeconds()) + ":" + e(t.getMilliseconds(), 3);return n;};WebSocket.__log = function (n) {e.log(t(), decodeURIComponent(n));}, WebSocket.__error = function (n) {e.error(t(), decodeURIComponent(n));}, WebSocket.__addTask = function (e) {WebSocket.__flash ? e() : WebSocket.__tasks.push(e);}, WebSocket.__isFlashLite = function () {if (!window.navigator || !window.navigator.mimeTypes) return !1;var e = window.navigator.mimeTypes["application/x-shockwave-flash"];return !!(e && e.enabledPlugin && e.enabledPlugin.filename) && !!e.enabledPlugin.filename.match(/flashlite/i);}, window.WEB_SOCKET_DISABLE_AUTO_INITIALIZATION || (window.addEventListener ? window.addEventListener("load", function () {WebSocket.__initialize();}, !1) : window.attachEvent("onload", function () {WebSocket.__initialize();}));}}(), function (e, t, n) {function r(e) {e && (t.Transport.apply(this, arguments), this.sendBuffer = []);}function s() {}e.XHR = r, t.util.inherit(r, t.Transport), r.prototype.open = function () {return this.socket.setBuffer(!1), this.onOpen(), this.get(), this.setCloseTimeout(), this;}, r.prototype.payload = function (e) {for (var n = [], r = 0, s = e.length; r < s; r++) {n.push(t.parser.encodePacket(e[r]));}this.send(t.parser.encodePayload(n));}, r.prototype.send = function (e) {return this.post(e), this;}, r.prototype.post = function (e) {function t() {4 == this.readyState && (this.onreadystatechange = s, o.posting = !1, 200 == this.status ? o.socket.setBuffer(!1) : o.onClose());}function r() {this.onload = s, o.socket.setBuffer(!1);}var o = this;this.socket.setBuffer(!0), this.sendXHR = this.request("POST"), n.XDomainRequest && this.sendXHR instanceof XDomainRequest ? this.sendXHR.onload = this.sendXHR.onerror = r : this.sendXHR.onreadystatechange = t, this.sendXHR.send(e);}, r.prototype.close = function () {return this.onClose(), this;}, r.prototype.request = function (e) {var n = t.util.request(this.socket.isXDomain()),r = t.util.query(this.socket.options.query, "t=" + +new Date());if (n.open(e || "GET", this.prepareUrl() + r, !0), "POST" == e) try {n.setRequestHeader ? n.setRequestHeader("Content-type", "text/plain;charset=UTF-8") : n.contentType = "text/plain";} catch (s) {}return n;}, r.prototype.scheme = function () {return this.socket.options.secure ? "https" : "http";}, r.check = function (e, r) {try {var s = t.util.request(r),o = n.XDomainRequest && s instanceof XDomainRequest,i = e && e.options && e.options.secure ? "https:" : "http:",a = n.location && i != n.location.protocol;if (s && (!o || !a)) return !0;} catch (c) {}return !1;}, r.xdomainCheck = function (e) {return r.check(e, !0);};}("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports, window), function (e, t) {function n(e) {t.Transport.XHR.apply(this, arguments);}e.htmlfile = n, t.util.inherit(n, t.Transport.XHR), n.prototype.name = "htmlfile", n.prototype.get = function () {this.doc = new window[["Active"].concat("Object").join("X")]("htmlfile"), this.doc.open(), this.doc.write("<html></html>"), this.doc.close(), this.doc.parentWindow.s = this;var e = this.doc.createElement("div");e.className = "socketio", this.doc.body.appendChild(e), this.iframe = this.doc.createElement("iframe"), e.appendChild(this.iframe);var n = this,r = t.util.query(this.socket.options.query, "t=" + +new Date());this.iframe.src = this.prepareUrl() + r, t.util.on(window, "unload", function () {n.destroy();});}, n.prototype._ = function (e, t) {this.onData(e);try {var n = t.getElementsByTagName("script")[0];n.parentNode.removeChild(n);} catch (r) {}}, n.prototype.destroy = function () {if (this.iframe) {try {this.iframe.src = "about:blank";} catch (e) {}this.doc = null, this.iframe.parentNode.removeChild(this.iframe), this.iframe = null, CollectGarbage();}}, n.prototype.close = function () {return this.destroy(), t.Transport.XHR.prototype.close.call(this);}, n.check = function (e) {if ("undefined" != typeof window && ["Active"].concat("Object").join("X") in window) try {var n = new window[["Active"].concat("Object").join("X")]("htmlfile");return n && t.Transport.XHR.check(e);} catch (r) {}return !1;}, n.xdomainCheck = function () {return !1;}, t.transports.push("htmlfile");}("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports), function (e, t, n) {function r() {t.Transport.XHR.apply(this, arguments);}function s() {}e["xhr-polling"] = r, t.util.inherit(r, t.Transport.XHR), t.util.merge(r, t.Transport.XHR), r.prototype.name = "xhr-polling", r.prototype.heartbeats = function () {return !1;}, r.prototype.open = function () {var e = this;return t.Transport.XHR.prototype.open.call(e), !1;}, r.prototype.get = function () {function e() {4 == this.readyState && (this.onreadystatechange = s, 200 == this.status ? (o.onData(this.responseText), o.get()) : o.onClose());}function t() {this.onload = s, this.onerror = s, o.retryCounter = 1, o.onData(this.responseText), o.get();}function r() {o.retryCounter++, !o.retryCounter || o.retryCounter > 3 ? o.onClose() : o.get();}if (this.isOpen) {var o = this;this.xhr = this.request(), n.XDomainRequest && this.xhr instanceof XDomainRequest ? (this.xhr.onload = t, this.xhr.onerror = r) : this.xhr.onreadystatechange = e, this.xhr.send(null);}}, r.prototype.onClose = function () {if (t.Transport.XHR.prototype.onClose.call(this), this.xhr) {this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = s;try {this.xhr.abort();} catch (e) {}this.xhr = null;}}, r.prototype.ready = function (e, n) {var r = this;t.util.defer(function () {n.call(r);});}, t.transports.push("xhr-polling");}("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports, window), function (e, t, n) {function r(e) {t.Transport["xhr-polling"].apply(this, arguments), this.index = t.j.length;var n = this;t.j.push(function (e) {n._(e);});}var s = n.document && "MozAppearance" in n.document.documentElement.style;e["jsonp-polling"] = r, t.util.inherit(r, t.Transport["xhr-polling"]), r.prototype.name = "jsonp-polling", r.prototype.post = function (e) {function n() {r(), s.socket.setBuffer(!1);}function r() {s.iframe && s.form.removeChild(s.iframe);try {i = document.createElement('<iframe name="' + s.iframeId + '">');} catch (e) {i = document.createElement("iframe"), i.name = s.iframeId;}i.id = s.iframeId, s.form.appendChild(i), s.iframe = i;}var s = this,o = t.util.query(this.socket.options.query, "t=" + +new Date() + "&i=" + this.index);if (!this.form) {var i,a = document.createElement("form"),c = document.createElement("textarea"),u = this.iframeId = "socketio_iframe_" + this.index;a.className = "socketio", a.style.position = "absolute", a.style.top = "0px", a.style.left = "0px", a.style.display = "none", a.target = u, a.method = "POST", a.setAttribute("accept-charset", "utf-8"), c.name = "d", a.appendChild(c), document.body.appendChild(a), this.form = a, this.area = c;}this.form.action = this.prepareUrl() + o, r(), this.area.value = t.JSON.stringify(e);try {this.form.submit();} catch (l) {}this.iframe.attachEvent ? i.onreadystatechange = function () {"complete" == s.iframe.readyState && n();} : this.iframe.onload = n, this.socket.setBuffer(!0);}, r.prototype.get = function () {var e = this,n = document.createElement("script"),r = t.util.query(this.socket.options.query, "t=" + +new Date() + "&i=" + this.index);this.script && (this.script.parentNode.removeChild(this.script), this.script = null), n.async = !0, n.src = this.prepareUrl() + r, n.onerror = function () {e.onClose();};var o = document.getElementsByTagName("script")[0];o.parentNode.insertBefore(n, o), this.script = n, s && setTimeout(function () {var e = document.createElement("iframe");document.body.appendChild(e), document.body.removeChild(e);}, 100);}, r.prototype._ = function (e) {return this.onData(e), this.isOpen && this.get(), this;}, r.prototype.ready = function (e, n) {var r = this;return s ? void t.util.load(function () {n.call(r);}) : n.call(this);}, r.check = function () {return "document" in n;}, r.xdomainCheck = function () {return !0;}, t.transports.push("jsonp-polling");}("undefined" != typeof io ? io.Transport : module.exports, "undefined" != typeof io ? io : module.parent.exports, window), __WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {return io;}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), !(void 0 !== __WEBPACK_AMD_DEFINE_RESULT__ && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}();}).call(exports, __webpack_require__(88)(module));}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}var s = n(4),o = r(s),i = n(30),a = r(i),c = function () {function e() {(0, a["default"])(this, e), this._entries = [];}return e.prototype.append = function (e, t) {if ("string" != typeof e) throw new TypeError("FormData name must be a string");if ("string" != typeof t && ("object" !== ("undefined" == typeof t ? "undefined" : (0, o["default"])(t)) || "string" != typeof t.uri)) throw new TypeError("FormData value must be a string or { uri: tempFilePath }");this._entries.push([e, t]);}, e.prototype.set = function (e, t) {var n = this.get(e);n ? n[1] = t : this.append(e, t);}, e.prototype["delete"] = function (e) {this._entries = this._entries.filter(function (t) {return t[0] !== e;});}, e.prototype.entries = function () {return this._entries;}, e.prototype.get = function (e) {return this._entries.find(function (t) {return t[0] === e;});}, e.prototype.getAll = function (e) {return this._entries.filter(function (t) {return t[0] === e;});}, e.prototype.has = function (e) {return this._entries.some(function (t) {return t[0] === e;});}, e.prototype.keys = function () {return this._entries.map(function (e) {return e[0];});}, e.prototype.values = function () {return this._entries.map(function (e) {return e[1];});}, e;}();e.exports = c;}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s() {}var o = n(21),i = r(o),a = i["default"].clientTypeMap;s.reverse = function (e) {var t = e;return t.type = a[t.type], t;}, s.reverseType = function (e) {return a[e] || e;}, e.exports = s;}, function (e, t, n) {"use strict";function r() {}var s = n(1);r.parse = function (e) {var t = e.split("|");return { scene: t[0], to: t[1] };}, r.genSessionByMsg = function (e) {var t = { id: e.sessionId, scene: e.scene, to: e.target, updateTime: e.time, lastMsg: e };return t;}, r.appendLastMsg = function (e) {var t = e.lastMsg,n = s.capFirstLetter(t.type);e["last" + n + "Msg"] = t;var r = s.capFirstLetter(t.flow);e["last" + r + "Msg"] = t;}, r.genSessionByMsgs = function (e, t) {var n = e.getLastNotIgnoredMsg(t);return n ? r.genSessionByMsg(n) : null;}, r.trim = function (e) {delete e.msgReceiptSendTime, delete e.msgReceiptServerTime, delete e.ack, delete e.unreadMsgs;}, r.isComplete = function (e) {return e.id && e.scene && e.to;}, e.exports = r;}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s(e) {var t = this;a.verifyOptions(e, "type to", "sysmsg::SystemMessage"), a.verifyParamValid("type", e.type, s.validTypes, "sysmsg::SystemMessage"), e.type.indexOf("custom") !== -1 && (a.verifyOptions(e, "content", "sysmsg::SystemMessage"), t.attach = e.content, u(e.apnsText) && (t.apnsText = "" + e.apnsText), u(e.pushPayload) && ("object" === (0, i["default"])(e.pushPayload) ? (t.logger.warn("model::Message: pushPayload should be JsonString, auto transfer"), t.pushPayload = JSON.stringify(e.pushPayload)) : t.pushPayload = "" + e.pushPayload), u(e.sendToOnlineUsersOnly) && (t.sendToOnlineUsersOnly = e.sendToOnlineUsersOnly ? 0 : 1), u(e.cc) && (t.cc = e.cc ? 1 : 0), u(e.isPushable) && (t.isPushable = e.isPushable ? 1 : 0), u(e.isUnreadable) && (t.isUnreadable = e.isUnreadable ? 1 : 0), u(e.needPushNick) && (t.needPushNick = e.needPushNick ? 1 : 0)), t.time = e.time || +new Date(), t.type = f[e.type], t.to = e.to, u(e.from) && (t.from = e.from), u(e.ps) && (t.ps = e.ps), u(e.deletedIdClient) && (t.deletedIdClient = e.deletedIdClient), u(e.deletedIdServer) && (t.deletedIdServer = e.deletedIdServer), u(e.opeAccount) && (t.opeAccount = e.opeAccount), u(e.yidunEnable) && (t.yidunEnable = e.yidunEnable ? 1 : 0), u(e.antiSpamContent) && ("object" === (0, i["default"])(e.antiSpamContent) ? (t.logger.warn("model::Message: antiSpamContent should be JsonString, auto transfer"), t.antiSpamContent = JSON.stringify(e.antiSpamContent)) : t.antiSpamContent = "" + e.antiSpamContent), u(e.antiSpamBusinessId) && ("object" === (0, i["default"])(e.antiSpamBusinessId) ? (t.logger.warn("model::Message: antiSpamBusinessId should be JsonString, auto transfer"), t.antiSpamBusinessId = JSON.stringify(e.antiSpamBusinessId)) : t.antiSpamBusinessId = "" + e.antiSpamBusinessId), t.idClient = e.idClient || a.guid();}var o = n(4),i = r(o),a = n(1),c = a.undef,u = a.notundef,l = n(29).getInstance("IM"),d = n(40),m = n(34),f = { customP2p: 100, customTeam: 101, deleteMsgP2p: 7, deleteMsgTeam: 8 },p = { 0: "applyTeam", 1: "rejectTeamApply", 2: "teamInvite", 3: "rejectTeamInvite", 5: "friendRequest", 6: "deleteFriend", 7: "deleteMsgP2p", 8: "deleteMsgTeam", 100: "customP2p", 101: "customTeam", 102: "customP2p" },g = { 1: "addFriend", 2: "applyFriend", 3: "passFriendApply", 4: "rejectFriendApply" },y = "team",h = "friend",v = "msg",b = [y, h, v],M = { applyTeam: y, rejectTeamApply: y, teamInvite: y, rejectTeamInvite: y, addFriend: h, applyFriend: h, passFriendApply: h, rejectFriendApply: h, deleteFriend: h, deleteMsg: v };s.validTypes = Object.keys(f).concat(Object.keys(M)), s.validCategories = ["team", "friend"], s.isCustom = function (e) {return "custom" === e.type;}, s.reverse = function (e) {var t = { time: +e.time, to: e.to, type: p[e.type] };if (u(e.from) && (t.from = e.from), u(e.idServer) && (t.idServer = "" + e.idServer), u(e.deletedIdClient) && (t.deletedIdClient = e.deletedIdClient), u(e.deletedIdServer) && (t.deletedIdServer = "" + e.deletedIdServer), u(e.deletedMsgTime) && (t.deletedMsgTime = +e.deletedMsgTime), u(e.deletedMsgFromNick) && (t.deletedMsgFromNick = "" + e.deletedMsgFromNick), u(e.opeAccount) && (t.opeAccount = e.opeAccount), u(e.ps) && (t.ps = e.ps), e.attach = e.attach ? "" + e.attach : "", "customP2p" === t.type || "customTeam" === t.type) t.content = e.attach, u(e.apnsText) && (t.apnsText = e.apnsText), u(e.pushPayload) && (t.pushPayload = e.pushPayload), a.merge(t, { sendToOnlineUsersOnly: c(e.sendToOnlineUsersOnly) || 0 === +e.sendToOnlineUsersOnly, cc: c(e.cc) || 1 === +e.cc, isPushable: c(e.isPushable) || 1 === +e.isPushable, isUnreadable: c(e.isUnreadable) || 1 === +e.isUnreadable, needPushNick: u(e.needPushNick) && 1 === +e.needPushNick }), t.scene = t.type.slice(6).toLowerCase(), t.type = "custom";else if ("deleteMsgP2p" === t.type || "deleteMsgTeam" === t.type) t.scene = t.type.slice(9).toLowerCase(), t.type = "deleteMsg";else {if (e.attach) {t.attach = {};var n = JSON.parse(e.attach);u(n.vt) ? (t.type = g[n.vt], delete t.attach) : (u(n.tinfo) && (t.attach.team = d.reverse(l.unserialize(n.tinfo, "team"))), u(n.tlist) && (t.attach.member = m.reverse(l.unserialize(n.tlist, "teamMember"))), u(n.attach) && (t.attach.custom = n.attach));}t.category = M[t.type], t.read = !1, t.state = "init";}return u(e.cc) && (t.cc = 1 === +e.cc), t.status = e.status || "success", u(e.filter) && (t.filter = e.filter), t;}, s.reverseSysMsgs = function (e, t) {t = t || {};var n = t.mapper,r = a.isFunction(n);return e.map(function (e) {return e = s.reverse(e), r && (e = n(e)), e;});}, s.completeUnread = function (e) {e = e || {}, b.forEach(function (t) {delete e[t];});var t;return Object.keys(M).forEach(function (n) {e[n] = e[n] || 0, e[n] < 0 && (e[n] = 0), t = M[n], e[t] = e[t] || 0, e[t] = e[t] + e[n];}), e.total = 0, b.forEach(function (t) {e.total += e[t];}), e;}, e.exports = s;}, function (e, t, n) {"use strict";function r(e) {var t = this;switch (o.verifyOptions(e, "action", "team::Team"), e.action) {case "create":o.verifyOptions(e, "teamId", !1, "team::Team"), o.verifyOptions(e, "type name", "team::Team"), o.verifyParamValid("type", e.type, g, "team::Team");break;case "update":o.verifyOptions(e, "teamId", "team::Team"), o.verifyOptions(e, "type", !1, "team::Team");}i(e.teamId) && (t.teamId = e.teamId), i(e.type) && (t.type = f[e.type]), i(e.avatar) && (t.avatar = "" + e.avatar), i(e.name) && (t.name = "" + e.name), i(e.intro) && (t.intro = "" + e.intro), i(e.announcement) && (t.announcement = "" + e.announcement), d.forEach(t.setMode.bind(t, e)), i(e.custom) && (t.custom = "" + e.custom);}function s(e, t) {t += "Mode", i(e[t]) && (e[t] = l[t][e[t]]);}var o = n(1),i = o.notundef,a = o.fillPropertyWithDefault,c = Object.keys,u = {},l = {},d = [],m = {},f = { normal: 0, advanced: 1 },p = { 0: "normal", 1: "advanced" },g = c(f),y = u.joinMode = { noVerify: 0, needVerify: 1, rejectAll: 2 };l.joinMode = { 0: "noVerify", 1: "needVerify", 2: "rejectAll" }, d.push("join"), m.joinMode = c(y);var h = u.beInviteMode = { needVerify: 0, noVerify: 1 };l.beInviteMode = { 0: "needVerify", 1: "noVerify" }, d.push("beInvite"), m.beInviteMode = c(h);var v = u.inviteMode = { manager: 0, all: 1 };l.inviteMode = { 0: "manager", 1: "all" }, d.push("invite"), m.inviteMode = c(v);var b = u.updateTeamMode = { manager: 0, all: 1 };l.updateTeamMode = { 0: "manager", 1: "all" }, d.push("updateTeam"), m.updateTeamMode = c(b);var M = u.updateCustomMode = { manager: 0, all: 1 };l.updateCustomMode = { 0: "manager", 1: "all" }, d.push("updateCustom"), m.updateCustomMode = c(M);var T = r.prototype;T.setMode = function (e, t) {var n = this;t += "Mode", i(e[t]) && (o.verifyParamValid(t, e[t], m[t], "team::Team"), n[t] = u[t][e[t]]);}, r.reverse = function (e, t) {var n = o.copy(e);if (i(n.teamId) && (n.teamId = "" + n.teamId), i(n.type) && (n.type = p[n.type]), i(n.level) && (n.level = +n.level), i(n.valid) && (n.valid = 1 === +n.valid), i(n.memberNum) && (n.memberNum = +n.memberNum), i(n.memberUpdateTime) && (n.memberUpdateTime = +n.memberUpdateTime), i(n.createTime) && (n.createTime = +n.createTime), i(n.updateTime) && (n.updateTime = +n.updateTime), i(n.validToCurrentUser) && (n.validToCurrentUser = "1" === n.validToCurrentUser), i(n.mute) && (n.mute = "1" === n.mute), i(n.muteType)) switch (n.muteType) {case "0":n.mute = !1, n.muteType = "none";break;case "1":n.mute = !0, n.muteType = "normal";break;case "2":n.mute = !0, n.muteType = "all";} else i(n.mute) && (1 === n.mute ? (n.mute = !0, n.muteType = "normal") : (n.mute = !1, n.muteType = "none"));return d.forEach(s.bind(null, n)), delete n.bits, t || r.fillProperties(n), n;}, r.fillProperties = function (e) {var t = a(e, "beInviteMode", "needVerify"),n = a(e, "inviteMode", "manager"),r = a(e, "updateTeamMode", "manager"),s = a(e, "updateCustomMode", "manager"),o = a(e, "avatar", "");return t || n || r || s || o;}, e.exports = r;},, function (e, t, n) {"use strict";function r(e) {var t = e.mode,n = f,r = m.getGlobal();return r.FormData || (t = "iframe"), "iframe" === t && (n = e.upload ? p : g), new n(e);}function s(e) {var t = e.upload = "multipart/form-data" === (e.headers || m.o)["Content-Type"],n = !1;try {var s = (location.protocol + "//" + location.host).toLowerCase(),o = m.url2origin(e.url);n = s !== o;} catch (i) {}return e.cors = n, t || n || e.mode ? r(e) : new f(e);}function o(e) {var t = y[e];t && (t.req.destroy(), delete y[e]);}function i(e, t) {t = { data: t };var n = e.result.headers;return n && (t.headers = e.req.header(n)), t;}function a(e, t, n) {var r = y[e];if (r) {"onload" === t && r.result && (n = i(r, n)), o(e);var s = { type: t, result: n };h(s), s.stopped || r[t](s.result);}}function c(e, t) {a(e, "onload", t);}function u(e, t) {a(e, "onerror", t);}function l(e, t) {var n = m.genUrlSep(e);return t = t || "", m.isObject(t) && (t = m.object2query(t)), t && (e += n + t), e;}function d(e, t) {t = t || {};var n = m.uniqueID(),r = { result: t.result, onload: t.onload || m.f, onerror: t.onerror || m.f };y[n] = r, t.onload = c.bind(null, n), t.onerror = u.bind(null, n), t.query && (e = l(e, t.query));var o = t.method || "";return o && !/get/i.test(o) || !t.data || (e = l(e, t.data), t.data = null), t.url = e, r.req = s(t), n;}var m = n(8),f = n(120),p = n(119),g = n(118),y = {},h = m.f;d.filter = function (e) {m.isFunction(e) && (h = e);}, d.abort = function (e) {var t = y[e];t && t.req.abort();}, e.exports = d;}, function (e, t, n) {"use strict";function r(e) {var t = this;e.onload && t.once("load", e.onload), e.onerror && t.once("error", e.onerror), e.onbeforesend && t.once("beforesend", e.onbeforesend), e.onaftersend && t.once("aftersend", e.onaftersend), e = t.options = s.fetch({ method: "GET", url: "", sync: !1, data: null, headers: {}, cookie: !1, timeout: 6e4, type: "text", form: null, input: null, putFileAtEnd: !1, proxyUrl: "" }, e);var n = e.headers,r = "Content-Type";s.notexist(n[r]) && (n[r] = "application/x-www-form-urlencoded"), t.send();}var s = n(8),o = s.f,i = n(175),a = r.prototype = Object.create(i.prototype);a.send = function () {var e = this,t = e.options;setTimeout(function () {try {try {e.emit("beforesend", t);} catch (n) {console.error("ignore error ajax beforesend,", n);}e.doSend();} catch (n) {console.error("ignore error server error,", n), e.onError("serverError", "请求失败:" + n.message);}}, 0);}, a.doSend = o, a.afterSend = function () {var e = this;setTimeout(function () {e.emit("aftersend", e.options);}, 0);}, a.onLoad = function (e) {var t = this,n = t.options,r = e.status,s = e.result;if (0 !== ("" + r).indexOf("2")) return void t.onError("serverError", "服务器返回异常状态", { status: r, result: s });if ("json" === n.type) try {s = JSON.parse(s);} catch (o) {return console.error("ignore error parse json,", o), void t.onError("parseError", s);}t.emit("load", s);}, a.onError = function (e, t, n) {var r = s.isObject(n) ? n : {};r.code = e || "error", r.message = t || "发生错误", this.emit("error", r);}, a.onTimeout = function () {this.onError("timeout", "请求超时");}, a.abort = function () {this.onError("abort", "客户端中止");}, a.header = function (e) {var t = this;if (!s.isArray(e)) return t.getResponseHeader(e || "");var n = {};return e.forEach(function (e) {n[e] = t.header(e);}), n;}, a.getResponseHeader = o, a.destroy = o, e.exports = r;}, function (e, t) {e.exports = function (e) {if (void 0 == e) throw TypeError("Can't call method on  " + e);return e;};}, function (e, t) {e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");}, function (e, t) {e.exports = {};}, function (e, t) {e.exports = !0;}, function (e, t, n) {var r = n(25),s = n(149),o = n(45),i = n(52)("IE_PROTO"),a = function a() {},c = "prototype",_u = function u() {var e,t = n(77)("iframe"),r = o.length,s = "<",i = ">";for (t.style.display = "none", n(143).appendChild(t), t.src = "javascript:", e = t.contentWindow.document, e.open(), e.write(s + "script" + i + "document.F=Object" + s + "/script" + i), e.close(), _u = e.F; r--;) {delete _u[c][o[r]];}return _u();};e.exports = Object.create || function (e, t) {var n;return null !== e ? (a[c] = r(e), n = new a(), a[c] = null, n[i] = e) : n = _u(), void 0 === t ? n : s(n, t);};}, function (e, t, n) {var r = n(83),s = n(45);e.exports = Object.keys || function (e) {return r(e, s);};}, function (e, t) {t.f = {}.propertyIsEnumerable;}, function (e, t, n) {var r = n(14).f,s = n(13),o = n(19)("toStringTag");e.exports = function (e, t, n) {e && !s(e = n ? e : e.prototype, o) && r(e, o, { configurable: !0, value: t });};}, function (e, t, n) {var r = n(53)("keys"),s = n(33);e.exports = function (e) {return r[e] || (r[e] = s(e));};}, function (e, t, n) {var r = n(9),s = "__core-js_shared__",o = r[s] || (r[s] = {});e.exports = function (e) {return o[e] || (o[e] = {});};}, function (e, t) {var n = Math.ceil,r = Math.floor;e.exports = function (e) {return isNaN(e = +e) ? 0 : (e > 0 ? r : n)(e);};}, function (e, t, n) {var r = n(17);e.exports = function (e, t) {if (!r(e)) return e;var n, s;if (t && "function" == typeof (n = e.toString) && !r(s = n.call(e))) return s;if ("function" == typeof (n = e.valueOf) && !r(s = n.call(e))) return s;if (!t && "function" == typeof (n = e.toString) && !r(s = n.call(e))) return s;throw TypeError("Can't convert object to primitive value");};}, function (e, t, n) {var r = n(9),s = n(15),o = n(47),i = n(57),a = n(14).f;e.exports = function (e) {var t = s.Symbol || (s.Symbol = o ? {} : r.Symbol || {});"_" == e.charAt(0) || e in t || a(t, e, { value: i.f(e) });};}, function (e, t, n) {t.f = n(19);}, function (e, t) {"use strict";var n = t.createUniqueKey = "undefined" != typeof Symbol ? Symbol : function (e) {return "[[" + e + "_" + Math.random().toFixed(8).slice(2) + "]]";};t.LISTENERS = n("listeners"), t.CAPTURE = 1, t.BUBBLE = 2, t.ATTRIBUTE = 3, t.newNode = function (e, t) {return { listener: e, kind: t, next: null };};}, function (e, t, n) {"use strict";var r = n(58),s = n(167),o = n(168),i = r.LISTENERS,a = r.CAPTURE,c = r.BUBBLE,u = r.ATTRIBUTE,l = r.newNode,d = s.defineCustomEventTarget,m = o.createEventWrapper,f = o.STOP_IMMEDIATE_PROPAGATION_FLAG,p = "undefined" != typeof window && "undefined" != typeof window.EventTarget,g = e.exports = function y() {if (!(this instanceof y)) {if (1 === arguments.length && Array.isArray(arguments[0])) return d(y, arguments[0]);if (arguments.length > 0) {for (var e = Array(arguments.length), t = 0; t < arguments.length; ++t) {e[t] = arguments[t];}return d(y, e);}throw new TypeError("Cannot call a class as a function");}Object.defineProperty(this, i, { value: Object.create(null) });};g.prototype = Object.create((p ? window.EventTarget : Object).prototype, { constructor: { value: g, writable: !0, configurable: !0 }, addEventListener: { value: function value(e, t, n) {if (null == t) return !1;if ("function" != typeof t && "object" != typeof t) throw new TypeError('"listener" is not an object.');var r = n ? a : c,s = this[i][e];if (null == s) return this[i][e] = l(t, r), !0;for (var o = null; null != s;) {if (s.listener === t && s.kind === r) return !1;o = s, s = s.next;}return o.next = l(t, r), !0;}, configurable: !0, writable: !0 }, removeEventListener: { value: function value(e, t, n) {if (null == t) return !1;for (var r = n ? a : c, s = null, o = this[i][e]; null != o;) {if (o.listener === t && o.kind === r) return null == s ? this[i][e] = o.next : s.next = o.next, !0;s = o, o = o.next;}return !1;}, configurable: !0, writable: !0 }, dispatchEvent: { value: function value(e) {var t = this[i][e.type];if (null == t) return !0;for (var n = m(e, this); null != t && ("function" == typeof t.listener ? t.listener.call(this, n) : t.kind !== u && "function" == typeof t.listener.handleEvent && t.listener.handleEvent(n), !n[f]);) {t = t.next;}return !n.defaultPrevented;}, configurable: !0, writable: !0 } });}, function (e, t) {function n(e, t) {for (var n = t.split("."); n.length;) {var r = n.shift(),s = !1;if ("?" == r[r.length - 1] && (r = r.slice(0, -1), s = !0), e = e[r], !e && s) return e;}return e;}e.exports = n;},,, function (e, t, n) {"use strict";function r(e) {switch (i.notundef(e.type) ? i.verifyFileType(e.type, "msg::FileMessage") : e.type = "file", i.verifyOptions(e, "file", "msg::FileMessage"), i.verifyOptions(e.file, "url ext size md5", !0, "file.", "msg::FileMessage"), e.type) {case "image":c.verifyFile(e.file, "msg::FileMessage");break;case "audio":u.verifyFile(e.file, "msg::FileMessage");break;case "video":l.verifyFile(e.file, "msg::FileMessage");}o.call(this, e), this.attach = JSON.stringify(e.file);}var s = n(28),o = n(24),i = n(1),a = n(3);r.prototype = Object.create(o.prototype), r.reverse = function (e) {var t = o.reverse(e);return e.attach = e.attach ? "" + e.attach : "", t.file = e.attach ? JSON.parse(e.attach) : {}, t.file.url = (0, s.genPrivateUrl)(t.file.url), "audio" === t.type && (t.file.mp3Url = t.file.url + "?audioTrans&type=mp3"), a.httpsEnabled && (t.file.url = t.file.url.replace("http", "https")), t;}, e.exports = r;var c = n(226),u = n(223),l = n(232);}, function (e, t, n) {"use strict";function r(e) {o.merge(this, e), o.notundef(this.gender) && (o.verifyParamValid("gender", this.gender, r.validGenders, "user::User"), this.gender = i[this.gender]), o.notundef(this.email) && "" !== this.email && o.verifyEmail("email", this.email, "user::User"), o.notundef(this.birth) && "" !== this.birth && o.verifyBirth("birth", this.birth, "user::User"), o.notundef(this.tel) && "" !== this.tel && o.verifyTel("tel", this.tel, "user::User");}var s = n(28),o = n(1),i = { unknown: 0, male: 1, female: 2 },a = { 0: "unknown", 1: "male", 2: "female" };r.reverse = function (e) {var t = o.filterObj(e, "account nick avatar sign gender email birth tel custom createTime updateTime");return o.notundef(t.avatar) && (t.avatar = (0,
      s.genPrivateUrl)(t.avatar)), o.notundef(t.gender) && (t.gender = a[t.gender]), o.notundef(t.createTime) && (t.createTime = +t.createTime), o.notundef(t.updateTime) && (t.updateTime = +t.updateTime), t;}, r.reverseUsers = function (e) {return e.map(function (e) {return r.reverse(e);});}, r.validGenders = Object.keys(i), e.exports = r;}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}var s = n(30),o = r(s),i = function () {function e() {(0, o["default"])(this, e);}return e.prototype.getItem = function (e) {return wx.getStorageSync(e);}, e.prototype.setItem = function (e, t) {return wx.setStorageSync(e, t);}, e.prototype.removeItem = function (e) {return this.setItem(e, "");}, e.prototype.clear = function () {return wx.clearStorageSync();}, e;}();e.exports = new i();}, function (e, t) {"use strict";e.exports = {};}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}var s = n(30),o = r(s),i = n(132),a = r(i),c = n(74),u = r(c),l = n(73),d = r(l),m = n(87),f = n(59),p = 0,g = 1,y = 2,h = 3,v = ["open", "error", "message", "close"],b = function (e) {function t(n, r) {if ((0, o["default"])(this, t), !n) throw new TypeError("Failed to construct 'WebSocket': url required");if (r && (!wx.canIUse || !wx.canIUse("connectSocket.object.protocols"))) throw new Error("subprotocal not supported in weapp");var s = (0, u["default"])(this, e.call(this));return n = n.replace(/:\d+/, ""), s._url = n, s._protocal = r || "", s._readyState = p, s._socketTask = wx.connectSocket({ url: n, protocals: s._protocal, fail: function fail(e) {console.info("wx::ws: sockets build failed ..."), s.errorHandler.call(s, e);}, success: function success(e) {console.log("wx::ws: sockets build succeed ...");} }), s._socketTask.onOpen(function (e) {s._readyState = g, s.dispatchEvent({ type: "open" });}), s._socketTask.onError(function (e) {s.errorHandler.call(s, e);}), s._socketTask.onClose(function () {s._readyState = h;var e = event,t = e.code,n = e.reason,r = e.wasClean;s.dispatchEvent({ code: t, reason: n, wasClean: r, type: "close" }), s._socketTask = null;}), s._socketTask.onMessage(function (e) {var t = e.data,n = e.origin,r = e.ports,o = e.source;s.dispatchEvent({ data: t, origin: n, ports: r, source: o, type: "message" });}), s;}return (0, d["default"])(t, e), t.prototype.close = function () {this._readyState !== h && (this._readyState === p && console.warn("wx::ws:close WebSocket which is connecting might not work"), this._socketTask.close({ code: 1e3, reason: "wx::ws:user manually close websocket" }));}, t.prototype.send = function (e) {if (this._readyState !== g) throw new Error("wx:ws: sendMsg when readyState=" + this._readyState);if (!("string" == typeof e || e instanceof ArrayBuffer)) throw new TypeError("wx:ws: sendMsg only String/ArrayBuffer supported");this._socketTask.send({ data: e });}, t.prototype.errorHandler = function (e) {"" !== e.message && (this._readyState = h, this.dispatchEvent({ type: "error", message: e.errMsg }), this._socketTask = null);}, (0, a["default"])(t, [{ key: "url", get: function get() {return this._url;} }, { key: "protocal", get: function get() {return this._protocal;} }, { key: "readyState", get: function get() {return this._readyState;} }]), t;}(f(v));m(b, { CONNECTING: p, OPEN: g, CLOSING: y, CLOSED: h }), e.exports = b;}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s(e) {this.status = e.statusCode, this.statusText = e.statusCode, e.header && (this._responseHeaders = Object.keys(e.header).reduce(function (t, n) {return t[n.toLowerCase()] = e.header[n], t;}, {}));var t = e.data;"string" != typeof t && (t = JSON.stringify(t)), this.responseText = this.response = t, this.readyState = v, this.dispatchEvent({ type: "readystatechange" });}var o = n(30),i = r(o),a = n(74),c = r(a),u = n(73),l = r(u),d = n(87),m = n(59),f = n(36),p = 0,g = 1,y = 2,h = 3,v = 4,b = ["abort", "error", "load", "loadstart", "progress", "timeout", "loadend", "readystatechange"],M = ["abort", "error", "load", "loadstart", "progress", "timeout", "loadend"],T = function (e) {function t() {return (0, i["default"])(this, t), (0, c["default"])(this, e.apply(this, arguments));}return (0, l["default"])(t, e), t;}(m(M)),S = function (e) {function t() {(0, i["default"])(this, t);var n = (0, c["default"])(this, e.call(this));return n.readyState = p, n._headers = {}, n.upload = new T(), n;}return (0, l["default"])(t, e), t.prototype.abort = function () {if (!this._request || this._request.abort) return this.status = 0, this.readyState = v, this._request.abort();throw new Error("该版本基础库不支持 abort request");}, t.prototype.getAllResponseHeaders = function () {var e = this;return this._responseHeaders ? Object.keys(this._responseHeaders).map(function (t) {return t + ": " + e._responseHeaders[t];}).join("\r\n") : "";}, t.prototype.getResponseHeader = function (e) {var t = e.toLowerCase();return this._responseHeaders && this._responseHeaders[t] ? this._responseHeaders[t] : null;}, t.prototype.overrideMimeType = function () {throw new Error("not supported in weapp");}, t.prototype.open = function (e, t) {var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];if (this.readyState !== p) throw new Error("request is already opened");if (!n) throw new Error("sync request is not supported");this._method = e, t = t.replace(/:\d+/, ""), this._url = t, this.readyState = g, this.dispatchEvent({ type: "readystatechange" });}, t.prototype.setRequestHeader = function (e, t) {if (this.readyState !== g) throw new Error("request is not opened");this._headers[e.toLowerCase()] = t;}, t.prototype.send = function (e) {var t = this;if (this.readyState !== g) throw new Error("request is not opened");if (e instanceof f) {var n = e.entries(),r = n.filter(function (e) {return "string" != typeof e[1];});if (0 === r.length) throw new Error("Must specify a Blob field in FormData");r.length > 1 && console.warn("Only the first Blob will be send in Weapp");var o = n.filter(function (e) {return "string" == typeof e[1];}).reduce(function (e, t) {var n;return d(e, (n = {}, n[t[0]] = t[1], n));}, {});this._request = wx.uploadFile({ url: this._url, name: r[0][0], filePath: r[0][1].uri, formData: o, header: this._headers, success: s.bind(this), fail: function fail(e) {t.status = 0, t.readyState = v, t.dispatchEvent({ type: "readystatechange" }), t.dispatchEvent({ type: "error" });} }), this._request && this._request.onProgressUpdate && this._request.onProgressUpdate(function (e) {var n = e.totalBytesSent,r = e.totalBytesExpectedToSend;t.upload.dispatchEvent({ type: "progress", loaded: n, total: r });});} else this._request = wx.request({ url: this._url, data: e || "", method: this._method.toUpperCase(), header: this._headers, success: s.bind(this), fail: function fail(e) {t.status = 0, t.readyState = v, t.dispatchEvent({ type: "readystatechange" }), t.dispatchEvent({ type: "error" });} });}, t;}(m(b));d(S, { UNSENT: p, OPENED: g, HEADERS_RECEIVED: y, LOADING: h, DONE: v }), e.exports = S;}, function (e, t, n) {"use strict";function r(e) {s.verifyOptions(e, "type", "image::ImageOp"), s.verifyParamValid("type", e.type, r.validTypes, "image::ImageOp"), s.merge(this, e), this.type = o[e.type];}var s = n(1),o = { stripmeta: 0, blur: 2, quality: 3, crop: 4, rotate: 5, thumbnail: 7, interlace: 9 },i = { 0: "stripmeta", 1: "type", 2: "blur", 3: "quality", 4: "crop", 5: "rotate", 6: "pixel", 7: "thumbnail", 8: "watermark", 9: "interlace", 10: "tmp" };r.validTypes = Object.keys(o), r.reverse = function (e) {var t = s.copy(e);return t.type = i[t.type], t;}, r.reverseImageOps = function (e) {return e.map(function (e) {return r.reverse(e);});}, e.exports = r;}, function (e, t) {"use strict";var n = { link: { id: 1, heartbeat: 2 }, misc: { id: 6, getSimpleNosToken: 1, getNosToken: 2, notifyUploadLog: 3, uploadSdkLogUrl: 4, audioToText: 5, processImage: 6, getClientAntispam: 17, getNosTokenTrans: 7, notifyTransLog: 8, fetchFile: 9, fetchFileList: 10, removeFile: 11 } },r = { heartbeat: { sid: n.link.id, cid: n.link.heartbeat }, getSimpleNosToken: { sid: n.misc.id, cid: n.misc.getSimpleNosToken, params: [{ type: "int", name: "num" }] }, getNosToken: { sid: n.misc.id, cid: n.misc.getNosToken, params: [{ type: "String", name: "responseBody" }] }, uploadSdkLogUrl: { sid: n.misc.id, cid: n.misc.uploadSdkLogUrl, params: [{ type: "string", name: "url" }] }, audioToText: { sid: n.misc.id, cid: n.misc.audioToText, params: [{ type: "Property", name: "audioToText" }] }, processImage: { sid: n.misc.id, cid: n.misc.processImage, params: [{ type: "String", name: "url" }, { type: "PropertyArray", name: "imageOps", entity: "imageOp" }] }, getClientAntispam: { sid: n.misc.id, cid: n.misc.getClientAntispam, params: [{ type: "Property", name: "clientAntispam" }] }, getNosTokenTrans: { sid: n.misc.id, cid: n.misc.getNosTokenTrans, params: [{ type: "Property", name: "transToken" }] }, fetchFile: { sid: n.misc.id, cid: n.misc.fetchFile, params: [{ type: "String", name: "docId" }] }, fetchFileList: { sid: n.misc.id, cid: n.misc.fetchFileList, params: [{ type: "Property", name: "fileListParam" }] }, removeFile: { sid: n.misc.id, cid: n.misc.removeFile, params: [{ type: "String", name: "docId" }] } },s = { "1_2": { service: "link", cmd: "heartbeat" }, "6_1": { service: "misc", cmd: "getSimpleNosToken", response: [{ type: "PropertyArray", name: "nosTokens", entity: "nosToken" }] }, "6_2": { service: "misc", cmd: "getNosToken", response: [{ type: "Property", name: "nosToken" }] }, "6_3": { service: "misc", cmd: "notifyUploadLog" }, "6_5": { service: "misc", cmd: "audioToText", response: [{ type: "String", name: "text" }] }, "6_6": { service: "misc", cmd: "processImage", response: [{ type: "String", name: "url" }] }, "6_17": { service: "misc", cmd: "getClientAntispam", response: [{ type: "Property", name: "clientAntispam" }] }, "6_7": { service: "misc", cmd: "getNosTokenTrans", response: [{ type: "Property", name: "nosToken" }, { type: "String", name: "docId" }] }, "6_8": { service: "misc", cmd: "notifyTransLog", response: [{ type: "Property", name: "transInfo" }] }, "6_9": { service: "misc", cmd: "fetchFile", response: [{ type: "Property", name: "info", entity: "transInfo" }] }, "6_10": { service: "misc", cmd: "fetchFileList", response: [{ type: "PropertyArray", name: "list", entity: "transInfo" }, { type: "Number", name: "totalCount" }] }, "6_11": { service: "misc", cmd: "removeFile", response: [{ type: "String", name: "res" }] } };e.exports = { idMap: n, cmdConfig: r, packetConfig: s };}, function (e, t, n) {"use strict";var r = n(8),s = r.getGlobal(),o = {},i = s.name || "_parent",a = [],c = "MSG|",u = [];o.addMsgListener = function (e) {a.push(e);};var l = function l(e) {for (var t = 0, n = a.length; t < n; t++) {try {a[t].call(null, e);} catch (r) {}}},d = function () {var e = /^([\w]+?:\/\/.*?(?=\/|$))/i;return function (t) {return t = t || "", e.test(t) ? RegExp.$1 : "*";};}(),m = function m() {var e = unescape(s.name || "").trim();if (e && 0 === e.indexOf(c)) {s.name = "";var t = r.string2object(e.replace(c, ""), "|"),n = (t.origin || "").toLowerCase();n && "*" !== n && 0 !== location.href.toLowerCase().indexOf(n) || l({ data: JSON.parse(t.data || "null"), source: s.frames[t.self] || t.self, origin: d(t.ref || document.referrer) });}},f = function () {var e,t = function t(e, _t3) {for (var n = 0, r = e.length; n < r; n++) {if (e[n] === _t3) return !0;}return !1;};return function () {if (u.length) {e = [];for (var n, r = u.length - 1; r >= 0; r--) {n = u[r], t(e, n.w) || (e.push(n.w), u.splice(r, 1), n.w.name = n.d);}e = null;}};}(),p = o.startTimer = function () {var e = !1;return function () {e || (e = !0, s.postMessage || (setInterval(f, 100), setInterval(m, 20)));};}();o.postMessage = function (e) {var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};if (r.fillUndef(t, { origin: "*", source: i }), s.postMessage) {var n = t.data;s.FormData || (n = JSON.stringify(n)), e.postMessage(n, t.origin);} else {if (p(), r.isObject(t)) {var o = {};o.origin = t.origin || "", o.ref = location.href, o.self = t.source, o.data = JSON.stringify(t.data), t = c + r.object2string(o, "|", !0);}u.unshift({ w: e, d: escape(t) });}}, e.exports = o;}, function (e, t, n) {"use strict";var r = n(1),s = {};s.fromDataURL = r.blobFromDataURL, e.exports = s;}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}t.__esModule = !0;var s = n(129),o = r(s),i = n(127),a = r(i),c = n(4),u = r(c);t["default"] = function (e, t) {if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + ("undefined" == typeof t ? "undefined" : (0, u["default"])(t)));e.prototype = (0, a["default"])(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (o["default"] ? (0, o["default"])(e, t) : e.__proto__ = t);};}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}t.__esModule = !0;var s = n(4),o = r(s);t["default"] = function (e, t) {if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return !t || "object" !== ("undefined" == typeof t ? "undefined" : (0, o["default"])(t)) && "function" != typeof t ? e : t;};}, function (e, t) {var n = {}.toString;e.exports = function (e) {return n.call(e).slice(8, -1);};}, function (e, t, n) {var r = n(139);e.exports = function (e, t, n) {if (r(e), void 0 === t) return e;switch (n) {case 1:return function (n) {return e.call(t, n);};case 2:return function (n, r) {return e.call(t, n, r);};case 3:return function (n, r, s) {return e.call(t, n, r, s);};}return function () {return e.apply(t, arguments);};};}, function (e, t, n) {var r = n(17),s = n(9).document,o = r(s) && r(s.createElement);e.exports = function (e) {return o ? s.createElement(e) : {};};}, function (e, t, n) {e.exports = !n(12) && !n(31)(function () {return 7 != Object.defineProperty(n(77)("div"), "a", { get: function get() {return 7;} }).a;});}, function (e, t, n) {"use strict";var r = n(47),s = n(26),o = n(84),i = n(16),a = n(13),c = n(46),u = n(146),l = n(51),d = n(151),m = n(19)("iterator"),f = !([].keys && "next" in [].keys()),p = "@@iterator",g = "keys",y = "values",h = function h() {return this;};e.exports = function (e, t, n, v, b, M, T) {u(n, t, v);var S,k,w,C = function C(e) {if (!f && e in x) return x[e];switch (e) {case g:return function () {return new n(this, e);};case y:return function () {return new n(this, e);};}return function () {return new n(this, e);};},I = t + " Iterator",_ = b == y,O = !1,x = e.prototype,E = x[m] || x[p] || b && x[b],P = !f && E || C(b),A = b ? _ ? C("entries") : P : void 0,R = "Array" == t ? x.entries || E : E;if (R && (w = d(R.call(new e())), w !== Object.prototype && w.next && (l(w, I, !0), r || a(w, m) || i(w, m, h))), _ && E && E.name !== y && (O = !0, P = function P() {return E.call(this);}), r && !T || !f && !O && x[m] || i(x, m, P), c[t] = P, c[I] = h, b) if (S = { values: _ ? P : C(y), keys: M ? P : C(g), entries: A }, T) for (k in S) {k in x || o(x, k, S[k]);} else s(s.P + s.F * (f || O), t, S);return S;};}, function (e, t, n) {var r = n(50),s = n(32),o = n(18),i = n(55),a = n(13),c = n(78),u = Object.getOwnPropertyDescriptor;t.f = n(12) ? u : function (e, t) {if (e = o(e), t = i(t, !0), c) try {return u(e, t);} catch (n) {}if (a(e, t)) return s(!r.f.call(e, t), e[t]);};}, function (e, t, n) {var r = n(83),s = n(45).concat("length", "prototype");t.f = Object.getOwnPropertyNames || function (e) {return r(e, s);};}, function (e, t) {t.f = Object.getOwnPropertySymbols;}, function (e, t, n) {var r = n(13),s = n(18),o = n(141)(!1),i = n(52)("IE_PROTO");e.exports = function (e, t) {var n,a = s(e),c = 0,u = [];for (n in a) {n != i && r(a, n) && u.push(n);}for (; t.length > c;) {r(a, n = t[c++]) && (~o(u, n) || u.push(n));}return u;};}, function (e, t, n) {e.exports = n(16);}, function (e, t) {function n(e) {var t = r.call(e);return "[object Function]" === t || "function" == typeof e && "[object RegExp]" !== t || "undefined" != typeof window && (e === window.setTimeout || e === window.alert || e === window.confirm || e === window.prompt);}e.exports = n;var r = Object.prototype.toString;}, function (e, t) {e.exports = function n(e, t) {"use strict";var r,s,o = /(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,i = /(^[ ]*|[ ]*$)/g,a = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,c = /^0x[0-9a-f]+$/i,u = /^0/,l = function l(e) {return n.insensitive && ("" + e).toLowerCase() || "" + e;},d = l(e).replace(i, "") || "",m = l(t).replace(i, "") || "",f = d.replace(o, "\0$1\0").replace(/\0$/, "").replace(/^\0/, "").split("\0"),p = m.replace(o, "\0$1\0").replace(/\0$/, "").replace(/^\0/, "").split("\0"),g = parseInt(d.match(c), 16) || 1 !== f.length && d.match(a) && Date.parse(d),y = parseInt(m.match(c), 16) || g && m.match(a) && Date.parse(m) || null;if (y) {if (g < y) return -1;if (g > y) return 1;}for (var h = 0, v = Math.max(f.length, p.length); h < v; h++) {if (r = !(f[h] || "").match(u) && parseFloat(f[h]) || f[h] || 0, s = !(p[h] || "").match(u) && parseFloat(p[h]) || p[h] || 0, isNaN(r) !== isNaN(s)) return isNaN(r) ? 1 : -1;if (typeof r != typeof s && (r += "", s += ""), r < s) return -1;if (r > s) return 1;}return 0;};}, function (e, t) {/*
object-assign
c) Sindre Sorhus
license MIT

    "use strict";function n(e) {if (null === e || void 0 === e) throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e);}function r() {try {if (!Object.assign) return !1;var e = new String("abc");if (e[5] = "de", "5" === Object.getOwnPropertyNames(e)[0]) return !1;for (var t = {}, n = 0; n < 10; n++) {t["_" + String.fromCharCode(n)] = n;}var r = Object.getOwnPropertyNames(t).map(function (e) {return t[e];});if ("0123456789" !== r.join("")) return !1;var s = {};return "abcdefghijklmnopqrst".split("").forEach(function (e) {s[e] = e;}), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, s)).join("");} catch (o) {return !1;}}var s = Object.getOwnPropertySymbols,o = Object.prototype.hasOwnProperty,i = Object.prototype.propertyIsEnumerable;e.exports = r() ? Object.assign : function (e, t) {for (var r, a, c = n(e), u = 1; u < arguments.length; u++) {r = Object(arguments[u]);for (var l in r) {o.call(r, l) && (c[l] = r[l]);}if (s) {a = s(r);for (var d = 0; d < a.length; d++) {i.call(r, a[d]) && (c[a[d]] = r[a[d]]);}}}return c;};}, function (e, t) {e.exports = function (e) {return e.webpackPolyfill || (e.deprecate = function () {}, e.paths = [], e.children = [], e.webpackPolyfill = 1), e;};}, function (e, t, n) {var r;(function (s) {!function (o, i) {"use strict";function a() {return "undefined" != typeof o ? o : "undefined" != typeof self ? self : "undefined" != typeof s ? s : {};}o = a();var c,u = o.IDBKeyRange || o.webkitIDBKeyRange,l = { readonly: "readonly", readwrite: "readwrite" },d = Object.prototype.hasOwnProperty,m = function m() {if (!c && (c = o.indexedDB || o.webkitIndexedDB || o.mozIndexedDB || o.oIndexedDB || o.msIndexedDB || (null === o.indexedDB && o.shimIndexedDB ? o.shimIndexedDB : i), !c)) throw "IndexedDB required";return c;},f = function f(e) {return e;},p = function p(e) {return Object.prototype.toString.call(e).slice(8, -1).toLowerCase();},g = function g(e) {return "function" == typeof e;},y = function y(e) {return "number" === p(e);},h = function h(e) {return "array" === p(e);},v = function v(e) {return e === i;},b = function b(e, t) {var n = this,r = !1;this.name = t, this.getIndexedDB = function () {return e;}, this.add = function (t) {if (r) throw "Database has been closed";for (var s = [], o = 0, i = 0; i < arguments.length - 1; i++) {if (Array.isArray(arguments[i + 1])) for (var a = 0; a < arguments[i + 1].length; a++) {s[o] = arguments[i + 1][a], o++;} else s[o] = arguments[i + 1], o++;}var c = e.transaction(t, l.readwrite),u = c.objectStore(t);return new Promise(function (e, t) {s.forEach(function (e) {var t;if (e.item && e.key) {var n = e.key;e = e.item, t = u.add(e, n);} else t = u.add(e);t.onsuccess = function (t) {var n = t.target,r = n.source.keyPath;null === r && (r = "__id__"), Object.defineProperty(e, r, { value: n.result, enumerable: !0 });};}), c.oncomplete = function () {e(s, n);}, c.onerror = function (e) {e.preventDefault(), t(e);}, c.onabort = function (e) {t(e);};});}, this.updateAndDelete = function (t, n, s) {if (r) throw "Database has been closed";var o = e.transaction(t, l.readwrite),i = o.objectStore(t),a = i.keyPath;return new Promise(function (e, t) {n.forEach(function (e) {if (e.item && e.key) {var t = e.key;e = e.item, i.put(e, t);} else i.put(e);}), s.forEach(function (e) {i["delete"](e[a]);}), o.oncomplete = function () {e([n, s]);}, o.onerror = function (e) {t(e);};});}, this.update = function (t) {if (r) throw "Database has been closed";for (var s, o = [], i = 1; i < arguments.length; i++) {s = arguments[i], Array.isArray(s) ? o = o.concat(s) : o.push(s);}var a = e.transaction(t, l.readwrite),c = a.objectStore(t);c.keyPath;return new Promise(function (e, t) {o.forEach(function (e) {var t;if (e.item && e.key) {var n = e.key;e = e.item, t = c.put(e, n);} else t = c.put(e);t.onsuccess = function (e) {}, t.onerror = function (e) {};}), a.oncomplete = function () {e(o, n);}, a.onerror = function (e) {t(e);}, a.onabort = function (e) {t(e);};});}, this.remove = function (t, n) {if (r) throw "Database has been closed";var s = e.transaction(t, l.readwrite),o = s.objectStore(t);return new Promise(function (e, t) {Array.isArray(n) || (n = [n]), n.forEach(function (e) {o["delete"](e);}), s.oncomplete = function () {e(n);}, s.onerror = function (e) {t(e);}, s.onabort = function (e) {t(e);};});}, this.clear = function (t) {if (r) throw "Database has been closed";var n = e.transaction(t, l.readwrite),s = n.objectStore(t);s.clear();return new Promise(function (e, t) {n.oncomplete = function () {e();}, n.onerror = function (e) {t(e);};});}, this.close = function () {r || (e.close(), r = !0, delete k[t]);}, this.get = function (t, n) {if (r) throw "Database has been closed";var s = e.transaction(t),o = s.objectStore(t),i = o.get(n);return new Promise(function (e, t) {i.onsuccess = function (t) {e(t.target.result);}, s.onerror = function (e) {t(e);};});}, this.query = function (t, n) {if (r) throw "Database has been closed";return new M(t, e, n);}, this.count = function (t, n) {if (r) throw "Database has been closed";var s = e.transaction(t);s.objectStore(t);};for (var s = 0, o = e.objectStoreNames.length; s < o; s++) {!function (e) {n[e] = {};for (var t in n) {d.call(n, t) && "close" !== t && (n[e][t] = function (t) {return function () {var r = [e].concat([].slice.call(arguments, 0));return n[t].apply(n, r);};}(t));}}(e.objectStoreNames[s]);}},M = function M(e, t, n) {var r = this,s = !1,o = !1,a = function a(r, _a, c, d, m, f, p) {return new Promise(function (y, h) {var v = s || o ? l.readwrite : l.readonly,b = t.transaction(e, v),M = b.objectStore(e),T = n ? M.index(n) : M,S = r ? u[r].apply(null, _a) : null,k = [],w = [S],C = 0;m = m ? m : null, f = f ? f : [], "count" !== c && w.push(d || "next");var I = !!s && Object.keys(s),_ = function _(e) {for (var t = 0; t < I.length; t++) {var n = I[t],r = s[n];r instanceof Function && (r = r(e)), e[n] = r;}return e;};T[c].apply(T, w).onsuccess = function (e) {var t = e.target.result;if ("number" == typeof t) k = t;else if (t) if (null !== m && m[0] > C) C = m[0], t.advance(m[0]);else if (null !== m && C >= m[0] + m[1]) ;else {var n = !0,r = "value" in t ? t.value : t.key;f.forEach(function (e) {e && e.length && (2 === e.length ? n = n && r[e[0]] === e[1] : g(e[0]) && (n = n && e[0].apply(i, [r])));}), n && (C++, k.push(p(r)), o ? t["delete"]() : s && (r = _(r), t.update(r))), t["continue"]();}}, b.oncomplete = function () {y(k);}, b.onerror = function (e) {h(e);}, b.onabort = function (e) {h(e);};});},c = function c(e, t) {var n = "next",r = "openCursor",i = [],c = null,u = f,l = !1,d = function d() {return a(e, t, r, l ? n + "unique" : n, c, i, u);},m = function m() {return n = null, r = "count", { execute: d };},p = function p() {return c = h(arguments[0]) ? arguments[0] : Array.prototype.slice.call(arguments, 0, 2), 1 == c.length && c.unshift(0), y(c[1]) || (c = null), { execute: d, count: m, keys: b, filter: M, asc: T, desc: S, distinct: k, modify: w, limit: p, map: C, remove: I };},b = function b(e) {return e = !!v(e) || !!e, e && (r = "openKeyCursor"), { execute: d, keys: b, filter: M, asc: T, desc: S, distinct: k, modify: w, limit: p, map: C, remove: I };},M = function M() {return i.push(Array.prototype.slice.call(arguments, 0, 2)), { execute: d, count: m, keys: b, filter: M, asc: T, desc: S, distinct: k, modify: w, limit: p, map: C, remove: I };},T = function T(e) {return e = !!v(e) || !!e, n = e ? "next" : "prev", { execute: d, count: m, keys: b, filter: M, asc: T, desc: S, distinct: k, modify: w, limit: p, map: C, remove: I };},S = function S(e) {return e = !!v(e) || !!e, n = e ? "prev" : "next", { execute: d, count: m, keys: b, filter: M, asc: T, desc: S, distinct: k, modify: w, limit: p, map: C, remove: I };},k = function k(e) {return e = !!v(e) || !!e, l = e, { execute: d, count: m, keys: b, filter: M, asc: T, desc: S, distinct: k, modify: w, limit: p, map: C, remove: I };},w = function w(e) {return s = e, { execute: d, count: m, keys: b, filter: M, asc: T, desc: S, distinct: k, modify: w, limit: p, map: C, remove: I };},C = function C(e) {return g(e) && (u = e), { execute: d, count: m, keys: b, filter: M, asc: T, desc: S, distinct: k, modify: w, limit: p, map: C, remove: I };},I = function I(e) {return e = !!v(e) || !!e, o = e, { execute: d, count: m, keys: b, filter: M, asc: T, desc: S, distinct: k, modify: w, limit: p, map: C, remove: I };};return { execute: d, count: m, keys: b, filter: M, asc: T, desc: S, distinct: k, modify: w, limit: p, map: C, remove: I };};"only bound upperBound lowerBound".split(" ").forEach(function (e) {r[e] = function () {return new c(e, arguments);};}), this.filter = function () {var e = new c(null, null);return e.filter.apply(e, arguments);}, this.all = function () {return this.filter();};},T = function T(e, t, n) {"function" == typeof t && (t = t());for (var r in t) {var s,o = t[r];s = !d.call(t, r) || n.objectStoreNames.contains(r) ? e.currentTarget.transaction.objectStore(r) : n.createObjectStore(r, o.key);for (var i in o.indexes) {var a = o.indexes[i];try {s.index(i);} catch (e) {s.createIndex(i, a.key || i, Object.keys(a).length ? a : { unique: !1 });}}}},S = function S(e, t, n, r) {var s = e.target.result,o = new b(s, t);return k[t] = s, Promise.resolve(o);},k = {},w = { version: "0.10.2", open: function open(e) {var t;return new Promise(function (n, r) {if (k[e.server]) S({ target: { result: k[e.server] } }, e.server, e.version, e.schema).then(n, r);else {try {t = m().open(e.server, e.version);} catch (s) {r(s);}t.onsuccess = function (t) {S(t, e.server, e.version, e.schema).then(n, r);}, t.onupgradeneeded = function (t) {T(t, e.schema, t.target.result);}, t.onerror = function (e) {r(e);};}});}, remove: function remove(e) {return new Promise(function (t, n) {if (!e) return t();typeof e === b && (e = e.name);var r;"string" == typeof e && (r = k[e]), r && "function" == typeof r.close && r.close();var s;try {s = m().deleteDatabase(e);} catch (o) {n(o);}s.onsuccess = function (n) {delete k[e], t(e);}, s.onerror = function (e) {n(e);}, s.onblocked = function (e) {n(e);};});} };"undefined" != typeof e && "undefined" != typeof e.exports ? e.exports = w : (r = function () {return w;}.call(t, n, t, e), !(r !== i && (e.exports = r)));}(window);}).call(t, function () {return this;}());}, function (e, t, n) {"use strict";var r = n(27),s = n(177),o = n(35),i = n(86),a = n(60),c = n(89),u = n(1),l = n(94),d = n(72),m = n(20),f = n(2).Promise,p = n(124);e.exports = function (e) {u.merge(e, { platform: r, xhr: s, io: o, naturalSort: i, deepAccess: a, db: c, util: u, support: l, blob: d, ajax: m, Promise: f, LoggerPlugin: p });};},, function (e, t, n) {"use strict";function r(e) {var t = this;o(e.shouldPushNotificationWhenPCOnline) && (t.open = e.shouldPushNotificationWhenPCOnline ? 2 : 1);}var s = n(1),o = s.notundef;r.getDefaultConfig = function () {return { shouldPushNotificationWhenPCOnline: !0 };}, r.reverse = function (e) {var t = { shouldPushNotificationWhenPCOnline: 1 !== +e.open };return t;}, e.exports = r;}, function (e, t, n) {"use strict";var r = n(1),s = n(70),o = r.merge({}, s.idMap, { auth: { id: 2, login: 3, kicked: 5, logout: 6, multiPortLogin: 7, kick: 8 }, user: { id: 3, markInBlacklist: 3, getBlacklist: 4, markInMutelist: 5, getMutelist: 6, getRelations: 8, getUsers: 7, updateMyInfo: 10, updateDonnop: 15, syncMyInfo: 109, syncUpdateMyInfo: 110 }, notify: { id: 4, markRead: 3, syncOfflineMsgs: 4, batchMarkRead: 5, syncOfflineSysMsgs: 6, syncRoamingMsgs: 9, syncMsgReceipts: 12, syncRobots: 15, syncBroadcastMsgs: 16 }, sync: { id: 5, sync: 1, syncTeamMembers: 2 }, msg: { id: 7, sendMsg: 1, msg: 2, sysMsg: 3, getHistoryMsgs: 6, sendCustomSysMsg: 7, searchHistoryMsgs: 8, deleteSessions: 9, getSessions: 10, syncSendMsg: 101, sendMsgReceipt: 11, msgReceipt: 12, deleteMsg: 13, msgDeleted: 14, markSessionAck: 16, broadcastMsg: 17 }, team: { id: 8, createTeam: 1, sendTeamMsg: 2, teamMsg: 3, teamMsgs: 4, addTeamMembers: 5, removeTeamMembers: 6, updateTeam: 7, leaveTeam: 8, getTeam: 9, getTeams: 10, getTeamMembers: 11, dismissTeam: 12, applyTeam: 13, passTeamApply: 14, rejectTeamApply: 15, addTeamManagers: 16, removeTeamManagers: 17, transferTeam: 18, updateInfoInTeam: 19, updateNickInTeam: 20, acceptTeamInvite: 21, rejectTeamInvite: 22, getTeamHistoryMsgs: 23, searchTeamHistoryMsgs: 24, updateMuteStateInTeam: 25, getMyTeamMembers: 26, getMutedTeamMembers: 27, sendTeamMsgReceipt: 28, getTeamMsgReads: 29, getTeamMsgReadAccounts: 30, notifyTeamMsgReads: 31, muteTeamAll: 32, syncMyTeamMembers: 126, syncTeams: 109, syncTeamMembers: 111, syncCreateTeam: 101, syncSendTeamMsg: 102, syncUpdateTeamMember: 119 }, friend: { id: 12, friendRequest: 1, syncFriendRequest: 101, deleteFriend: 2, syncDeleteFriend: 102, updateFriend: 3, syncUpdateFriend: 103, getFriends: 4 }, chatroom: { id: 13, getChatroomAddress: 1 }, filter: { id: 101, sendFilterMsg: 1, filterMsg: 2, filterSysMsg: 3, sendFilterCustomSysMsg: 7 }, eventService: { id: 14, publishEvent: 1, pushEvent: 2, subscribeEvent: 3, unSubscribeEventsByAccounts: 4, unSubscribeEventsByType: 5, querySubscribeEventsByAccounts: 6, querySubscribeEventsByType: 7, pushEvents: 9 } }),i = r.merge({}, s.cmdConfig, { login: { sid: o.auth.id, cid: o.auth.login, params: [{ type: "Property", name: "login" }] }, logout: { sid: o.auth.id, cid: o.auth.logout }, kick: { sid: o.auth.id, cid: o.auth.kick, params: [{ type: "StrArray", name: "deviceIds" }] }, markInBlacklist: { sid: o.user.id, cid: o.user.markInBlacklist, params: [{ type: "String", name: "account" }, { type: "bool", name: "isAdd" }] }, getBlacklist: { sid: o.user.id, cid: o.user.getBlacklist, params: [{ type: "long", name: "time" }] }, markInMutelist: { sid: o.user.id, cid: o.user.markInMutelist, params: [{ type: "String", name: "account" }, { type: "bool", name: "isAdd" }] }, getMutelist: { sid: o.user.id, cid: o.user.getMutelist, params: [{ type: "long", name: "time" }] }, getRelations: { sid: o.user.id, cid: o.user.getRelations, params: [{ type: "long", name: "timetag" }] }, getUsers: { sid: o.user.id, cid: o.user.getUsers, params: [{ type: "StrArray", name: "accounts" }] }, updateMyInfo: { sid: o.user.id, cid: o.user.updateMyInfo, params: [{ type: "Property", name: "user" }] }, updateDonnop: { sid: o.user.id, cid: o.user.updateDonnop, params: [{ type: "Property", name: "donnop" }] }, markRead: { sid: o.notify.id, cid: o.notify.markRead, params: [{ type: "long", name: "id" }, { type: "ph", name: "ph" }] }, batchMarkRead: { sid: o.notify.id, cid: o.notify.batchMarkRead, params: [{ type: "byte", name: "sid" }, { type: "byte", name: "cid" }, { type: "LongArray", name: "ids" }] }, sync: { sid: o.sync.id, cid: o.sync.sync, params: [{ type: "Property", name: "sync" }] }, syncTeamMembers: { sid: o.sync.id, cid: o.sync.syncTeamMembers, params: [{ type: "LongLongMap", name: "sync" }] }, sendMsg: { sid: o.msg.id, cid: o.msg.sendMsg, params: [{ type: "Property", name: "msg" }] }, getHistoryMsgs: { sid: o.msg.id, cid: o.msg.getHistoryMsgs, params: [{ type: "String", name: "to" }, { type: "long", name: "beginTime" }, { type: "long", name: "endTime" }, { type: "long", name: "lastMsgId" }, { type: "int", name: "limit" }, { type: "bool", name: "reverse" }] }, sendCustomSysMsg: { sid: o.msg.id, cid: o.msg.sendCustomSysMsg, params: [{ type: "Property", name: "sysMsg" }] }, searchHistoryMsgs: { sid: o.msg.id, cid: o.msg.searchHistoryMsgs, params: [{ type: "String", name: "to" }, { type: "long", name: "beginTime" }, { type: "long", name: "endTime" }, { type: "String", name: "keyword" }, { type: "int", name: "limit" }, { type: "bool", name: "reverse" }] }, getSessions: { sid: o.msg.id, cid: o.msg.getSessions, params: [{ type: "long", name: "time" }] }, deleteSessions: { sid: o.msg.id, cid: o.msg.deleteSessions, params: [{ type: "StrArray", name: "sessions" }] }, sendMsgReceipt: { sid: o.msg.id, cid: o.msg.sendMsgReceipt, params: [{ type: "Property", name: "msgReceipt" }] }, deleteMsg: { sid: o.msg.id, cid: o.msg.deleteMsg, params: [{ type: "Property", name: "sysMsg" }] }, markSessionAck: { sid: o.msg.id, cid: o.msg.markSessionAck, params: [{ type: "byte", name: "scene" }, { type: "String", name: "to" }, { type: "long", name: "timetag" }] }, createTeam: { sid: o.team.id, cid: o.team.createTeam, params: [{ type: "Property", name: "team" }, { type: "StrArray", name: "accounts" }, { type: "String", name: "ps" }] }, sendTeamMsg: { sid: o.team.id, cid: o.team.sendTeamMsg, params: [{ type: "Property", name: "msg" }] }, addTeamMembers: { sid: o.team.id, cid: o.team.addTeamMembers, params: [{ type: "long", name: "teamId" }, { type: "StrArray", name: "accounts" }, { type: "String", name: "ps" }] }, removeTeamMembers: { sid: o.team.id, cid: o.team.removeTeamMembers, params: [{ type: "long", name: "teamId" }, { type: "StrArray", name: "accounts" }] }, updateTeam: { sid: o.team.id, cid: o.team.updateTeam, params: [{ type: "Property", name: "team" }] }, leaveTeam: { sid: o.team.id, cid: o.team.leaveTeam, params: [{ type: "long", name: "teamId" }] }, getTeam: { sid: o.team.id, cid: o.team.getTeam, params: [{ type: "long", name: "teamId" }] }, getTeams: { sid: o.team.id, cid: o.team.getTeams, params: [{ type: "long", name: "timetag" }] }, getTeamMembers: { sid: o.team.id, cid: o.team.getTeamMembers, params: [{ type: "long", name: "teamId" }, { type: "long", name: "timetag" }] }, dismissTeam: { sid: o.team.id, cid: o.team.dismissTeam, params: [{ type: "long", name: "teamId" }] }, applyTeam: { sid: o.team.id, cid: o.team.applyTeam, params: [{ type: "long", name: "teamId" }, { type: "String", name: "ps" }] }, passTeamApply: { sid: o.team.id, cid: o.team.passTeamApply, params: [{ type: "long", name: "teamId" }, { type: "String", name: "from" }] }, rejectTeamApply: { sid: o.team.id, cid: o.team.rejectTeamApply, params: [{ type: "long", name: "teamId" }, { type: "String", name: "from" }, { type: "String", name: "ps" }] }, addTeamManagers: { sid: o.team.id, cid: o.team.addTeamManagers, params: [{ type: "long", name: "teamId" }, { type: "StrArray", name: "accounts" }] }, removeTeamManagers: { sid: o.team.id, cid: o.team.removeTeamManagers, params: [{ type: "long", name: "teamId" }, { type: "StrArray", name: "accounts" }] }, transferTeam: { sid: o.team.id, cid: o.team.transferTeam, params: [{ type: "long", name: "teamId" }, { type: "String", name: "account" }, { type: "bool", name: "leave" }] }, updateInfoInTeam: { sid: o.team.id, cid: o.team.updateInfoInTeam, params: [{ type: "Property", name: "teamMember" }] }, updateNickInTeam: { sid: o.team.id, cid: o.team.updateNickInTeam, params: [{ type: "Property", name: "teamMember" }] }, acceptTeamInvite: { sid: o.team.id, cid: o.team.acceptTeamInvite, params: [{ type: "long", name: "teamId" }, { type: "String", name: "from" }] }, rejectTeamInvite: { sid: o.team.id, cid: o.team.rejectTeamInvite, params: [{ type: "long", name: "teamId" }, { type: "String", name: "from" }, { type: "String", name: "ps" }] }, getTeamHistoryMsgs: { sid: o.team.id, cid: o.team.getTeamHistoryMsgs, params: [{ type: "long", name: "to" }, { type: "long", name: "beginTime" }, { type: "long", name: "endTime" }, { type: "long", name: "lastMsgId" }, { type: "int", name: "limit" }, { type: "bool", name: "reverse" }] }, searchTeamHistoryMsgs: { sid: o.team.id, cid: o.team.searchTeamHistoryMsgs, params: [{ type: "long", name: "to" }, { type: "long", name: "beginTime" }, { type: "long", name: "endTime" }, { type: "String", name: "keyword" }, { type: "int", name: "limit" }, { type: "bool", name: "reverse" }] }, updateMuteStateInTeam: { sid: o.team.id, cid: o.team.updateMuteStateInTeam, params: [{ type: "long", name: "teamId" }, { type: "String", name: "account" }, { type: "int", name: "mute" }] }, getMyTeamMembers: { sid: o.team.id, cid: o.team.getMyTeamMembers, params: [{ type: "LongArray", name: "teamIds" }] }, getMutedTeamMembers: { sid: o.team.id, cid: o.team.getMutedTeamMembers, params: [{ type: "long", name: "teamId" }] }, sendTeamMsgReceipt: { sid: o.team.id, cid: o.team.sendTeamMsgReceipt, params: [{ type: "PropertyArray", name: "teamMsgReceipts", entity: "teamMsgReceipt" }] }, getTeamMsgReads: { sid: o.team.id, cid: o.team.getTeamMsgReads, params: [{ type: "PropertyArray", name: "teamMsgReceipts", entity: "teamMsgReceipt" }] }, getTeamMsgReadAccounts: { sid: o.team.id, cid: o.team.getTeamMsgReadAccounts, params: [{ type: "Property", name: "teamMsgReceipt" }] }, muteTeamAll: { sid: o.team.id, cid: o.team.muteTeamAll, params: [{ type: "long", name: "teamId" }, { type: "int", name: "muteType" }] }, friendRequest: { sid: o.friend.id, cid: o.friend.friendRequest, params: [{ type: "String", name: "account" }, { type: "byte", name: "type" }, { type: "String", name: "ps" }] }, deleteFriend: { sid: o.friend.id, cid: o.friend.deleteFriend, params: [{ type: "String", name: "account" }] }, updateFriend: { sid: o.friend.id, cid: o.friend.updateFriend, params: [{ type: "Property", name: "friend" }] }, getFriends: { sid: o.friend.id, cid: o.friend.getFriends, params: [{ type: "long", name: "timetag" }] }, getChatroomAddress: { sid: o.chatroom.id, cid: o.chatroom.getChatroomAddress, params: [{ type: "long", name: "chatroomId" }] }, sendFilterMsg: { sid: o.filter.id, cid: o.filter.sendFilterMsg, params: [{ type: "Property", name: "msg" }] }, sendFilterCustomSysMsg: { sid: o.filter.id, cid: o.filter.sendFilterCustomSysMsg, params: [{ type: "Property", name: "sysMsg" }] }, publishEvent: { sid: o.eventService.id, cid: o.eventService.publishEvent, params: [{ type: "Property", name: "msgEvent" }] }, pushEvent: { sid: o.eventService.id, cid: o.eventService.pushEvent }, subscribeEvent: { sid: o.eventService.id, cid: o.eventService.subscribeEvent, params: [{ type: "Property", name: "msgEventSubscribe" }, { type: "StrArray", name: "accounts" }] }, unSubscribeEventsByAccounts: { sid: o.eventService.id, cid: o.eventService.unSubscribeEventsByAccounts, params: [{ type: "Property", name: "msgEventSubscribe" }, { type: "StrArray", name: "accounts" }] }, unSubscribeEventsByType: { sid: o.eventService.id, cid: o.eventService.unSubscribeEventsByType, params: [{ type: "Property", name: "msgEventSubscribe" }] }, querySubscribeEventsByAccounts: { sid: o.eventService.id, cid: o.eventService.querySubscribeEventsByAccounts, params: [{ type: "Property", name: "msgEventSubscribe" }, { type: "StrArray", name: "accounts" }] }, querySubscribeEventsByType: { sid: o.eventService.id, cid: o.eventService.querySubscribeEventsByType, params: [{ type: "Property", name: "msgEventSubscribe" }] }, pushEvents: { sid: o.eventService.id, cid: o.eventService.pushEvents } }),a = r.merge({}, s.packetConfig, { "2_3": { service: "auth", cmd: "login", response: [{ type: "Property", name: "loginRes" }, { type: "PropertyArray", name: "loginPorts", entity: "loginPort" }] }, "2_5": { service: "auth", cmd: "kicked", response: [{ type: "Number", name: "from" }, { type: "Number", name: "reason" }] }, "2_6": { service: "auth", cmd: "logout" }, "2_7": { service: "auth", cmd: "multiPortLogin", response: [{ type: "Number", name: "state" }, { type: "PropertyArray", name: "loginPorts", entity: "loginPort" }] }, "2_8": { service: "auth", cmd: "kick", response: [{ type: "StrArray", name: "deviceIds" }] }, "3_3": { service: "user", cmd: "markInBlacklist" }, "3_103": { service: "user", cmd: "syncMarkInBlacklist", response: [{ type: "String", name: "account" }, { type: "Boolean", name: "isAdd" }] }, "3_4": { service: "user", cmd: "getBlacklist", response: [{ type: "StrArray", name: "blacklist" }] }, "3_5": { service: "user", cmd: "markInMutelist" }, "3_105": { service: "user", cmd: "syncMarkInMutelist", response: [{ type: "String", name: "account" }, { type: "Boolean", name: "isAdd" }] }, "3_6": { service: "user", cmd: "getMutelist", response: [{ type: "StrArray", name: "mutelist" }] }, "3_8": { service: "user", cmd: "getRelations", response: [{ type: "PropertyArray", name: "specialRelations", entity: "specialRelation" }, { type: "Number", name: "timetag" }] }, "3_7": { service: "user", cmd: "getUsers", response: [{ type: "PropertyArray", name: "users", entity: "user" }] }, "3_10": { service: "user", cmd: "updateMyInfo", response: [{ type: "Number", name: "timetag" }] }, "3_15": { service: "user", cmd: "updateDonnop", response: [{ type: "Number", name: "timetag" }] }, "3_115": { service: "user", cmd: "syncUpdateDonnop", response: [{ type: "Property", name: "donnop" }, { type: "Number", name: "timetag" }] }, "3_109": { service: "user", cmd: "syncMyInfo", response: [{ type: "Property", name: "user" }, { type: "Number", name: "timetag" }] }, "3_110": { service: "user", cmd: "syncUpdateMyInfo", response: [{ type: "Property", name: "user" }] }, "4_1": { service: "notify" }, "4_2": { service: "notify" }, "4_3": { service: "notify", cmd: "markRead" }, "4_4": { service: "notify", cmd: "syncOfflineMsgs", response: [{ type: "PropertyArray", name: "msgs", entity: "msg" }] }, "4_5": { service: "notify", cmd: "batchMarkRead" }, "4_6": { service: "notify", cmd: "syncOfflineSysMsgs", response: [{ type: "PropertyArray", name: "sysMsgs", entity: "sysMsg" }] }, "4_9": { service: "notify", cmd: "syncRoamingMsgs", response: [{ type: "PropertyArray", name: "msgs", entity: "msg" }] }, "4_12": { service: "notify", cmd: "syncMsgReceipts", response: [{ type: "PropertyArray", name: "msgReceipts", entity: "msgReceipt" }, { type: "Number", name: "timetag" }] }, "4_13": { service: "notify", cmd: "syncDonnop", response: [{ type: "Property", name: "donnop" }, { type: "Number", name: "timetag" }] }, "4_14": { service: "notify", cmd: "syncSessionAck", response: [{ type: "StrLongMap", name: "p2p" }, { type: "LongLongMap", name: "team" }, { type: "Number", name: "timetag" }] }, "4_15": { service: "notify", cmd: "syncRobots", response: [{ type: "PropertyArray", name: "robots", entity: "robot" }] }, "4_16": { service: "notify", cmd: "syncBroadcastMsgs", response: [{ type: "PropertyArray", name: "broadcastMsgs", entity: "broadcastMsg" }] }, "4_100": { service: "notify", cmd: "syncOfflineFilterMsgs", response: [{ type: "PropertyArray", name: "msgs", entity: "msg" }] }, "4_101": { service: "notify", cmd: "syncOfflineFilterSysMsgs", response: [{ type: "PropertyArray", name: "sysMsgs", entity: "sysMsg" }] }, "5_1": { service: "sync", cmd: "syncDone", response: [{ type: "Number", name: "timetag" }] }, "5_2": { service: "sync", cmd: "syncTeamMembersDone", response: [{ type: "Number", name: "timetag" }] }, "7_1": { service: "msg", cmd: "sendMsg", response: [{ type: "Property", name: "msg" }], trivialErrorCodes: [7101] }, "7_2": { service: "msg", cmd: "msg", response: [{ type: "Property", name: "msg" }] }, "7_3": { service: "msg", cmd: "sysMsg", response: [{ type: "Property", name: "sysMsg" }] }, "7_6": { service: "msg", cmd: "getHistoryMsgs", response: [{ type: "PropertyArray", name: "msgs", entity: "msg" }] }, "7_7": { service: "msg", cmd: "sendCustomSysMsg", trivialErrorCodes: [7101] }, "7_8": { service: "msg", cmd: "searchHistoryMsgs", response: [{ type: "PropertyArray", name: "msgs", entity: "msg" }] }, "7_9": { service: "msg", cmd: "deleteSessions" }, "7_10": { service: "msg", cmd: "getSessions", response: [{ type: "StrArray", name: "sessions" }] }, "7_101": { service: "msg", cmd: "syncSendMsg", response: [{ type: "Property", name: "msg" }] }, "7_11": { service: "msg", cmd: "sendMsgReceipt", response: [{ type: "Property", name: "msgReceipt" }] }, "7_12": { service: "msg", cmd: "msgReceipt", response: [{ type: "Property", name: "msgReceipt" }] }, "7_13": { service: "msg", cmd: "onDeleteMsg" }, "7_14": { service: "msg", cmd: "onMsgDeleted", response: [{ type: "Property", name: "sysMsg" }] }, "7_15": { service: "msg", cmd: "onDeleteMsgOfflineRoaming", response: [{ type: "PropertyArray", name: "sysMsgs", entity: "sysMsg" }, { type: "Number", name: "timetag" }, { type: "Number", name: "type" }] }, "7_16": { service: "msg", cmd: "onMarkSessionAck" }, "7_17": { service: "msg", cmd: "broadcastMsg", response: [{ type: "Property", name: "broadcastMsg" }] }, "7_116": { service: "msg", cmd: "syncMarkSessionAck", response: [{ type: "Number", name: "scene" }, { type: "String", name: "to" }, { type: "Number", name: "timetag" }] }, "8_1": { service: "team", cmd: "createTeam", response: [{ type: "Property", name: "team" }] }, "8_2": { service: "team", cmd: "sendTeamMsg", response: [{ type: "Property", name: "msg" }] }, "8_3": { service: "team", cmd: "teamMsg", response: [{ type: "Property", name: "msg" }] }, "8_4": { service: "team", cmd: "teamMsgs", response: [{ type: "PropertyArray", name: "msgs", entity: "msg" }] }, "8_5": { service: "team", cmd: "addTeamMembers" }, "8_6": { service: "team", cmd: "removeTeamMembers" }, "8_7": { service: "team", cmd: "updateTeam", response: [{ type: "Number", name: "id" }, { type: "Number", name: "time" }] }, "8_8": { service: "team", cmd: "leaveTeam" }, "8_9": { service: "team", cmd: "getTeam", response: [{ type: "Property", name: "team" }] }, "8_10": { service: "team", cmd: "getTeams", response: [{ type: "PropertyArray", name: "teams", entity: "team" }, { type: "Number", name: "timetag" }] }, "8_11": { service: "team", cmd: "getTeamMembers", response: [{ type: "Number", name: "teamId" }, { type: "PropertyArray", name: "members", entity: "teamMember" }, { type: "Number", name: "timetag" }] }, "8_12": { service: "team", cmd: "dismissTeam" }, "8_13": { service: "team", cmd: "applyTeam", response: [{ type: "Property", name: "team" }] }, "8_14": { service: "team", cmd: "passTeamApply" }, "8_15": { service: "team", cmd: "rejectTeamApply" }, "8_16": { service: "team", cmd: "addTeamManagers" }, "8_17": { service: "team", cmd: "removeTeamManagers" }, "8_18": { service: "team", cmd: "transferTeam" }, "8_19": { service: "team", cmd: "updateInfoInTeam" }, "8_20": { service: "team", cmd: "updateNickInTeam" }, "8_21": { service: "team", cmd: "acceptTeamInvite", response: [{ type: "Property", name: "team" }] }, "8_22": { service: "team", cmd: "rejectTeamInvite" }, "8_23": { service: "team", cmd: "getTeamHistoryMsgs", response: [{ type: "PropertyArray", name: "msgs", entity: "msg" }] }, "8_24": { service: "team", cmd: "searchTeamHistoryMsgs", response: [{ type: "PropertyArray", name: "msgs", entity: "msg" }] }, "8_25": { service: "team", cmd: "updateMuteStateInTeam" }, "8_26": { service: "team", cmd: "getMyTeamMembers", response: [{ type: "PropertyArray", name: "teamMembers", entity: "teamMember" }] }, "8_27": { service: "team", cmd: "getMutedTeamMembers", response: [{ type: "Number", name: "teamId" }, { type: "PropertyArray", name: "teamMembers", entity: "teamMember" }] }, "8_28": { service: "team", cmd: "sendTeamMsgReceipt", response: [{ type: "PropertyArray", name: "teamMsgReceipts", entity: "teamMsgReceipt" }] }, "8_29": { service: "team", cmd: "getTeamMsgReads", response: [{ type: "PropertyArray", name: "teamMsgReceipts", entity: "teamMsgReceipt" }] }, "8_30": { service: "team", cmd: "getTeamMsgReadAccounts", response: [{ type: "String", name: "idClient" }, { type: "StrArray", name: "readAccounts" }, { type: "StrArray", name: "unreadAccounts" }] }, "8_31": { service: "team", cmd: "notifyTeamMsgReads", response: [{ type: "PropertyArray", name: "teamMsgReceipts", entity: "teamMsgReceipt" }] }, "8_32": { service: "team", cmd: "muteTeamAll", response: [] }, "8_126": { service: "team", cmd: "syncMyTeamMembers", response: [{ type: "PropertyArray", name: "teamMembers", entity: "teamMember" }, { type: "Number", name: "timetag" }] }, "8_109": { service: "team", cmd: "syncTeams", response: [{ type: "Number", name: "timetag" }, { type: "PropertyArray", name: "teams", entity: "team" }] }, "8_111": { service: "team", cmd: "syncTeamMembers", response: [{ type: "Number", name: "teamId" }, { type: "PropertyArray", name: "members", entity: "teamMember" }, { type: "Number", name: "timetag" }] }, "8_101": { service: "team", cmd: "syncCreateTeam", response: [{ type: "Property", name: "team" }] }, "8_102": { service: "team", cmd: "syncSendTeamMsg", response: [{ type: "Property", name: "msg" }] }, "8_119": { service: "team", cmd: "syncUpdateTeamMember", response: [{ type: "Property", name: "teamMember" }] }, "12_1": { service: "friend", cmd: "friendRequest" }, "12_101": { service: "friend", cmd: "syncFriendRequest", response: [{ type: "String", name: "account" }, { type: "Number", name: "type" }, { type: "String", name: "ps" }] }, "12_2": { service: "friend", cmd: "deleteFriend" }, "12_102": { service: "friend", cmd: "syncDeleteFriend", response: [{ type: "String", name: "account" }] }, "12_3": { service: "friend", cmd: "updateFriend" }, "12_103": { service: "friend", cmd: "syncUpdateFriend", response: [{ type: "Property", name: "friend" }] }, "12_4": { service: "friend", cmd: "getFriends", response: [{ type: "PropertyArray", name: "friends", entity: "friend" }, { type: "Number", name: "timetag" }] }, "12_5": { service: "friend", cmd: "syncFriends", response: [{ type: "PropertyArray", name: "friends", entity: "friend" }, { type: "Number", name: "timetag" }] }, "12_6": { service: "friend", cmd: "syncFriendUsers", response: [{ type: "PropertyArray", name: "users", entity: "user" }, { type: "Number", name: "timetag" }] }, "13_1": { service: "chatroom", cmd: "getChatroomAddress", response: [{ type: "StrArray", name: "address" }] }, "14_1": { service: "eventService", cmd: "publishEvent", response: [{ type: "Property", name: "msgEvent" }] }, "14_2": { service: "eventService", cmd: "pushEvent", response: [{ type: "Property", name: "msgEvent" }] }, "14_3": { service: "eventService", cmd: "subscribeEvent", response: [{ type: "StrArray", name: "accounts" }] }, "14_4": { service: "eventService", cmd: "unSubscribeEventsByAccounts", response: [{ type: "StrArray", name: "accounts" }] }, "14_5": { service: "eventService", cmd: "unSubscribeEventsByType" }, "14_6": { service: "eventService", cmd: "querySubscribeEventsByAccounts", response: [{ type: "PropertyArray", name: "msgEventSubscribes", entity: "msgEventSubscribe" }] }, "14_7": { service: "eventService", cmd: "querySubscribeEventsByType", response: [{ type: "PropertyArray", name: "msgEventSubscribes", entity: "msgEventSubscribe" }] }, "14_9": { service: "eventService", cmd: "pushEvents", response: [{ type: "PropertyArray", name: "msgEvents", entity: "msgEvent" }] }, "101_1": { service: "filter", cmd: "sendFilterMsg", response: [{ type: "Property", name: "msg" }] }, "101_2": { service: "filter", cmd: "filterMsg", response: [{ type: "Property", name: "msg" }] }, "101_3": { service: "filter", cmd: "filterSysMsg", response: [{ type: "Property", name: "sysMsg" }] }, "101_7": { service: "filter", cmd: "sendFilterCustomSysMsg" } });e.exports = { idMap: o, cmdConfig: i, packetConfig: a };}, function (e, t) {"use strict";var n = {};n.set = function (e, t, r) {n[e] = t, r && (r.support = t);}, e.exports = n;}, function (e, t, n) {"use strict";function r() {}var s = n(21);r.typeMap = { text: 0, image: 1, audio: 2, video: 3, geo: 4, notification: 5, file: 6, tip: 10, robot: 11, custom: 100 };var o = r.typeReverseMap = { 0: "text", 1: "image", 2: "audio", 3: "video", 4: "geo", 5: "notification", 6: "file", 10: "tip", 11: "robot", 100: "custom" };r.validTypes = Object.keys(r.typeMap), r.setFlow = function (e, t) {var n = t === e.from;n && t === e.to && (n = s.deviceId === e.fromDeviceId), e.flow = n ? "out" : "in", "robot" === e.type && e.content && e.content.msgOut && (e.flow = "in");}, r.getType = function (e) {var t = e.type;return o[t] || t;}, e.exports = r;}, function (e, t, n) {"use strict";var r = n(97).polyfill;try {r();} catch (s) {}try {r(GameGlobal);} catch (s) {}try {window = window || {}, r(window);} catch (s) {}try {localStorage = localStorage || n(65);} catch (s) {}try {XMLHttpRequest = XMLHttpRequest || n(68);} catch (s) {}try {FormData = FormData || n(36);} catch (s) {}try {WebSocket = WebSocket || n(67);} catch (s) {}try {navigator = navigator || n(66);} catch (s) {}}, function (e, t, n) {(function (t) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}var s = n(4),o = r(s),i = n(65),a = n(68),c = n(36),u = n(67),l = n(98),d = n(66);e.exports = { polyfill: function polyfill() {var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : t || window;if ("object" !== ("undefined" == typeof e ? "undefined" : (0, o["default"])(e))) throw new Error("polyfill target is not an Object");var n = { localStorage: i, XMLHttpRequest: a, FormData: c, WebSocket: u, Object: Object, navigator: d };for (var r in n) {e[r] || (e[r] = n[r]);}l.polyfill(e), e.navigator.product = "ReactNative";}, localStorage: i, XMLHttpRequest: a, FormData: c, WebSocket: u };}).call(t, function () {return this;}());}, function (e, t, n) {"use strict";var r = n(59);t.polyfill = function (e) {if (wx.onNetworkStatusChange && !e.__onlineOfflinePolyfilled) {e.__onlineOfflinePolyfilled = !0;var t = new r();e.dispatchEvent || (e.addEventListener = t.addEventListener.bind(t), e.removeEventListener = t.removeEventListener.bind(t), e.dispatchEvent = t.dispatchEvent.bind(t), "function" != typeof postMessage || e.importScripts || (e.importScripts = function () {throw new Error("mocked");})), wx.getNetworkType({
          success: function success(t) {var n = t.networkType;e.onLine = "none" !== n, wx.onNetworkStatusChange(function (t) {var n = t.isConnected;e.onLine !== n && (e.onLine = n, e.dispatchEvent({ type: n ? "online" : "offline" }));});} });}};}, function (e, t, n) {"use strict";n(96);}, function (e, t, n) {"use strict";var r = n(10).fn;r.isConnected = function () {return this.protocol.isConnected();}, r.connect = function () {this.protocol.appLogin = 0, this.protocol.connect();}, r.disconnect = function () {this.protocol.disconnect();};}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s(e, t, n, r) {var s = !1,o = "";if (1 === n ? e.indexOf(t) >= 0 && (s = !0, o = t) : 2 === n && (o = new RegExp(t, "g"), o.test(e) && (s = !0)), s && "" !== o) switch (r) {case 1:return e.replace(o, "*");case 2:return { code: 2 };case 3:return { code: 3 };}return e;}function o(e, t) {for (var n = this, r = t.match, o = t.operate, i = e, c = 0; c < t.keys.length; c++) {var u = t.keys[c],l = u.match || r,d = u.operate || o;try {if (i = s(i, u.key, l, d), "object" === ("undefined" == typeof i ? "undefined" : (0, a["default"])(i))) return i;} catch (m) {n.logger.warn("misc::filterContent: js cannot parse this regexp ", m);}}return i;}var i = n(4),a = r(i),c = n(1),u = n(10).fn;u.uploadSdkLogUrl = function (e) {return c.verifyOptions(e, "url", "misc::uploadSdkLogUrl"), this.cbAndSendCmd("uploadSdkLogUrl", e);}, u.getClientAntispamLexicon = function (e) {var t = this;e = e || {};var n = e.done;n instanceof Function || (n = function n() {}), e = { clientAntispam: { version: 0 } };var r = this;return this.protocol.sendCmd("getClientAntispam", e, function (e, s, o) {e ? (r.protocol.logger.error("misc::getClientAntispamLexicon:", e), n.call(t, e, {})) : (n.call(t, null, o), r.antispamLexicon = o.clientAntispam || {});});}, u.filterClientAntispam = function (e) {var t = e.content,n = e.antispamLexicon;if (!t) return { code: 404, errmsg: "待反垃圾文本content不存在" };n = n || this.antispamLexicon || {};var r = this.antispamLexicon && this.antispamLexicon.thesaurus;if (!r) return { code: 404, errmsg: "没有反垃圾词库或者词库格式不合法" };try {r = JSON.parse(r).thesaurus;} catch (s) {return this.protocol.logger.error("misc::filterClientAntispam: parse thesaurus error"), { code: 500, errmsg: "反垃圾词库格式不合法" };}for (var i = t, c = 0; c < r.length; c++) {if (i = o.call(this, i, r[c]), "object" === ("undefined" == typeof i ? "undefined" : (0, a["default"])(i))) {if (2 === i.code) return { code: 200, type: 2, errmsg: "建议拒绝发送", content: t, result: "" };if (3 === i.code) return { code: 200, type: 3, errmsg: "建议服务器处理反垃圾，发消息带上字段clientAntiSpam", content: t, result: t };}}return i === t ? { code: 200, type: 0, errmsg: "", content: t, result: i } : { code: 200, type: 1, errmsg: "已对特殊字符做了过滤", content: t, result: i };};}, function (e, t, n) {"use strict";var r = n(10).fn,s = n(1),o = n(176),i = n(6),a = n(3),c = n(125),u = (n(126), n(72));r.sendText = function (e) {var t = this;return t.processCallback(e), e.msg = new t.message.TextMessage(e), t.sendMsg(e);}, r.previewFile = function (e) {if (s.verifyOptions(e, "done", "msg::previewFile"), e.type || (e.type = "file"), s.verifyParamPresentJustOne(e, "dataURL blob fileInput wxFilePath", "msg::previewFile"), e.dataURL) e.blob = u.fromDataURL(e.dataURL);else if (e.blob) ;else if (e.fileInput) {if (e.fileInput = s.verifyFileInput(e.fileInput, "msg::previewFile"), e.fileInput.files) {if (!e.fileInput.files.length) return void e.done(i.newNoFileError("请选择" + e.type + "文件", { callFunc: "msg::previewFile", fileInput: e.fileInput }), e);e.fileSize = e.fileInput.files[0].size;}e.fileInputName = s.getFileName(e.fileInput), e.fileInfo = s.getFileInfo(e.fileInput), e.transtype = e.fileInfo.type;}this.processCallback(e);var t = JSON.stringify(c.genResponseBody(e.type) || {}).replace(/"/gi, '\\"'),n = null,r = e.transcode ? "getNosTokenTrans" : "getNosToken";n = e.transcode ? { transToken: { name: e.fileInfo.name, type: e.fileInfo.transcodeType, transType: "png" === e.transcode ? 11 : 10, size: e.fileInfo.size, body: t } } : t, this[r]({ responseBody: n, callback: function (t, n) {return t ? void e.done(t, e.callback.options) : (e.transcode ? (e.nosToken = n.nosToken, e.docId = n.docId) : e.nosToken = n, void this._doPreviewFile(e));}.bind(this) });}, r._doPreviewFile = function (e) {function t(t, o) {if (e.uploaddone = r, t) return void e.done(t, e.callback.options);if (o = c.parseResponse(o, n.options.exifOrientation), o.url = a.genDownloadUrl(e.nosToken.bucket, i.Object), s.exist(e.fileInputName)) o.name = e.fileInputName;else if (e.blob) {var u = e.blob.name;if (o.name = u || "blob-" + o.md5, !u) {var l = e.blob.type;o.ext = l.slice(l.lastIndexOf("/") + 1);}}if (o.name = e.wxFilePath, !o.ext) {var d = o.name.lastIndexOf(".");d === -1 ? o.ext = "unknown" : o.ext = o.name.slice(d + 1);}return void e.done(null, s.copy(o));}console.log("_doPreviewFile", e);var n = this,r = e.uploaddone,o = a.genUploadUrl(e.nosToken.bucket),i = this.assembleUploadParams(e.nosToken),u = "file";s.verifyOptions(e, "wxFilePath", "msg::_doPreviewFile"), wx.uploadFile({ url: o, filePath: e.wxFilePath, name: u, formData: i, fail: function fail(e) {console.log(e);}, success: function success(e) {if (console.log(e), 200 === e.statusCode) try {t(null, JSON.parse(e.data));} catch (n) {console.error("parse wx upload file res error", n), t({ code: "PARSE_WX_UPLOAD_FILE_RES_ERROR", str: e.data, msg: e.errMsg });} else t({ code: e.statusCode, msg: e.errMsg });} });}, r.sendFile = function (e) {var t = this;if (e.type || (e.type = "file"), s.verifyParamPresentJustOne(e, "dataURL blob fileInput file wxFilePath", "msg::sendFile"), t.processCallback(e), e.dataURL) t._previewAndSendFile(e);else if (e.blob) t._previewAndSendFile(e);else if (e.fileInput) {if (e.fileInput = s.verifyFileInput(e.fileInput, "msg::sendFile"), e.fileInput.files && !e.fileInput.files.length) return void e.done(i.newNoFileError("请选择" + e.type + "文件", { callFunc: "msg::sendFile", fileInput: e.fileInput }), e.callback.options);t._previewAndSendFile(e);} else if (e.wxFilePath) t._previewAndSendFile(e);else if (e.file) return e.msg = new t.message.FileMessage(e), t.sendMsg(e);}, r._previewAndSendFile = function (e) {var t = this;s.verifyCallback(e, "uploaddone beforesend", "msg::_previewAndSendFile");var n = e.done;e.done = function (r, o) {if (e.done = n, r) e.uploaddone(r, e.callback.options);else {if (/chatroom/.test(e.scene)) return;e.uploaddone(null, s.copy(o)), e.file = o, e.msg = new t.message.FileMessage(e), e.beforesend(t.sendMsg(e));}}, t.previewFile(e);}, r.assembleUploadParams = function (e) {return e ? { Object: decodeURIComponent(e.objectName), "x-nos-token": e.token, "x-nos-entity-type": "json" } : null;}, r.deleteFile = function (e) {s.verifyParamPresentJustOne(e, "docId", "msg::deleteFile"), this.removeFile({ docId: e.docId, callback: function callback(t, n) {t ? e.error && e.error(t, n) : e.success && e.success(n);} });}, r.getFile = function (e) {s.verifyParamPresentJustOne(e, "docId", "msg::getFile"), this.fetchFile({ docId: e.docId, callback: function callback(t, n) {t ? e.error && e.error(t, n) : e.success && e.success(n.info);} });}, r.getFileList = function (e) {var t = e.fromDocId,n = void 0 === t ? "" : t,r = e.limit,s = void 0 === r ? 10 : r,o = { limit: s };n && (o.fromDocId = n), this.fetchFileList({ fileListParam: o, callback: function callback(t, n) {t ? (s > 30 && (t.message = t.message + "::文档条数超过限制:30"), e.error && e.error(t, n)) : e.success && e.success(n);} });}, r.sendGeo = function (e) {var t = this;return t.processCallback(e), e.msg = new t.message.GeoMessage(e), t.sendMsg(e);}, r.sendTipMsg = function (e) {var t = this;return t.processCallback(e), e.msg = new t.message.TipMessage(e), t.sendMsg(e);}, r.sendCustomMsg = function (e) {var t = this;return t.processCallback(e), e.msg = new t.message.CustomMessage(e), t.sendMsg(e);}, r.sendRobotMsg = function (e) {var t = this;return t.processCallback(e), e.msg = new t.message.RobotMessage(e), t.sendMsg(e);}, r.sendMsg = function (e) {var t = this,n = t.protocol,r = e.msg,o = {},i = !!e.isLocal;if (i && e.time && (r.time = e.time), e.resend && ("out" !== e.flow || "fail" !== e.status)) return s.onError("只能重发发送失败的消息");e.callback.options.idClient = r.idClient, t.beforeSendMsg(e, o);var a = e.rtnMsg = t.formatReturnMsg(r);return i && (a.status = "success", a.isLocal = !0), n.storeSendMsg && (o.promise = n.storeSendMsg(a)), e.cbaop = function (e) {if (e && "server" !== e.from) return a.status = "fail", n.updateSendMsgError && n.updateSendMsgError(a), a;}, i || (o.msg = r, t.sendCmd(e.cmd, o, e.callback)), t.afterSendMsg(e), i && setTimeout(function () {a = s.simpleClone(a), e.done(null, a);}, 0), s.copy(a);}, r.beforeSendMsg = function () {}, r.afterSendMsg = function () {}, r.formatReturnMsg = function (e) {var t = this;return e = s.copy(e), t.protocol.completeMsg(e), e.status = "sending", e = t.message.reverse(e);}, r.resendMsg = function (e) {var t = this;return s.verifyOptions(e, "msg", "msg::resendMsg"), t.trimMsgFlag(e), e.resend = !0, t._sendMsgByType(e);}, r.forwardMsg = function (e) {var t = this;return s.verifyOptions(e, "msg", "msg::forwardMsg"), t.beforeForwardMsg(e), t.trimMsgFlag(e), e.forward = !0, e.msg.idClient = s.guid(), t._sendMsgByType(e);}, r.trimMsgFlag = function (e) {e && e.msg && (e.msg = s.copy(e.msg), delete e.msg.resend, delete e.msg.forward);}, r.beforeForwardMsg = function () {}, r._sendMsgByType = function (e) {var t = this;switch (s.verifyOptions(e, "msg", "msg::_sendMsgByType"), s.verifyParamValid("msg.type", e.msg.type, t.message.validTypes, "msg::_sendMsgByType"), s.merge(e, e.msg), e.type) {case "text":return t.sendText(e);case "image":case "audio":case "video":case "file":return t.sendFile(e);case "geo":return t.sendGeo(e);case "custom":return t.sendCustomMsg(e);case "tip":return t.sendTipMsg(e);default:throw new i("不能发送类型为 " + e.type + " 的消息");}}, r.parseRobotTemplate = function (e) {function t(e) {if (e.link) {var t = e.link;Array.isArray(t) || (t = [t]), t = t.map(function (e) {return e.image && (e.image = r(e)), e.text && (e.text = n(e)), "url" === e._type ? (e.type = "url", e.style = e._style || "", e.target = e._target, delete e._target, delete e._style) : "block" === e._type && (e.type = "block", e.style = e._style || "", e.params = e._params || "", e.target = e._target, delete e._params, delete e._target, delete e._style), delete e._type, e;}), e.link = t;}return e.link;}function n(e) {return Array.isArray(e.text) || (e.text = [e.text]), e.text = e.text.map(function (e) {return { type: "text", name: e._name, text: e.__text };}), e.text;}function r(e) {return Array.isArray(e.image) || (e.image = [e.image]), e.image = e.image.map(function (e) {return { type: "image", name: e._name, url: e._url };}), e.image;}if (/<template[^>\/]+\/>/.test(e)) return { raw: e, json: [{ type: "text", name: "", text: "" }] };if (!/<template[^>\/]+>/.test(e)) return { raw: e, json: [{ type: "text", name: "", text: e }] };var s = new o({ escapeMode: !1 });e = e.replace(/<template [^>]+>/, "<template>");var i = s.xml2js(e);i = i.template.LinearLayout, Array.isArray(i) || (i = [i]);var a = [];return i = i.forEach(function (e) {e.image && (a = a.concat(r(e))), e.text && (a = a.concat(n(e))), e.link && (a = a.concat(t(e)));}), { raw: e, json: a };};}, function (e, t, n) {"use strict";var r = n(1),s = n(10).fn,o = n(69);s.getSimpleNosToken = function () {var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};return e.num = 1, r.verifyOptions(e), this.cbAndSendCmd("getSimpleNosToken", e);}, s.getNosToken = function (e) {this.sendCmd("getNosToken", { responseBody: e.responseBody }, e.callback);}, s.getNosTokenTrans = function (e) {this.sendCmd("getNosTokenTrans", e.responseBody, e.callback);}, s.packFileDownloadName = function (e) {r.verifyOptions(e, "url name", !0, "", "nos::packFileDownloadName");var t = e.url;return t + r.genUrlSep(t) + "download=" + encodeURIComponent(e.name);}, s.audioToMp3 = function (e) {r.verifyOptions(e, "url", "nos::audioToMp3");var t = e.url;return t + r.genUrlSep(t) + "audioTrans&type=mp3";}, s.removeFile = function (e) {this.sendCmd("removeFile", e, e.callback);}, s.fetchFile = function (e) {this.sendCmd("fetchFile", e, e.callback);}, s.fetchFileList = function (e) {this.sendCmd("fetchFileList", e, e.callback);}, s.stripImageMeta = function (e) {return this.beforeProcessImage(e, "stripmeta");}, s.qualityImage = function (e) {return this.beforeProcessImage(e, "quality");}, s.interlaceImage = function (e) {return this.beforeProcessImage(e, "interlace");}, s.rotateImage = function (e) {return this.beforeProcessImage(e, "rotate");}, s.blurImage = function (e) {return this.beforeProcessImage(e, "blur");}, s.cropImage = function (e) {return this.beforeProcessImage(e, "crop");}, s.thumbnailImage = function (e) {return this.beforeProcessImage(e, "thumbnail");}, s.beforeProcessImage = function (e, t) {var n = r.copy(e);return n.type = t, e.ops = [n], this.processImage(e);}, s.processImage = function (e) {var t = this;r.verifyOptions(e, "url ops", !0, "", "nos::processImage"), r.verifyParamType("ops", e.ops, "array", "nos::processImage");var n = e.ops.map(function (e) {return r.verifyOptions(e, "type", !0, "", "nos::processImage"), r.verifyParamValid("type", e.type, o.validTypes, "nos::processImage"), t["gen" + e.type.slice(0, 1).toUpperCase() + e.type.slice(1) + "Op"](e);});t.processCallback(e), t.sendCmd("processImage", { url: e.url, imageOps: n }, e.callback);}, s.genStripmetaOp = function (e) {return new o({ type: e.type, stripmeta: e.strip ? 1 : 0 });}, s.genQualityOp = function (e) {r.verifyOptions(e, "quality", !0, "", "nos::genQualityOp"), r.verifyParamType("quality", e.quality, "number", "nos::genQualityOp"), r.verifyParamMin("quality", e.quality, 0, "nos::genQualityOp"), r.verifyParamMax("quality", e.quality, 100, "nos::genQualityOp");var t = Math.round(e.quality);return new o({ type: e.type, qualityQuality: t });}, s.genInterlaceOp = function (e) {return new o({ type: e.type });}, s.genRotateOp = function (e) {for (r.verifyOptions(e, "angle", !0, "", "nos::genRotateOp"), r.verifyParamType("angle", e.angle, "number", "nos::genRotateOp"); e.angle < 0;) {e.angle = e.angle + 360;}e.angle = e.angle % 360;var t = Math.round(e.angle);return new o({ type: e.type, rotateAngle: t });}, s.genBlurOp = function (e) {r.verifyOptions(e, "radius sigma", "nos::genBlurOp"), r.verifyParamType("radius", e.radius, "number", "nos::genBlurOp"), r.verifyParamMin("radius", e.radius, 1, "nos::genBlurOp"), r.verifyParamMax("radius", e.radius, 50, "nos::genBlurOp"), r.verifyParamType("sigma", e.sigma, "number", "nos::genBlurOp"), r.verifyParamMin("sigma", e.sigma, 0, "nos::genBlurOp");var t = Math.round(e.radius),n = Math.round(e.sigma);return new o({ type: e.type, blurRadius: t, blurSigma: n });}, s.genCropOp = function (e) {r.verifyOptions(e, "x y width height", "nos::genCropOp"), r.verifyParamType("x", e.x, "number", "nos::genCropOp"), r.verifyParamMin("x", e.x, 0, "nos::genCropOp"), r.verifyParamType("y", e.y, "number", "nos::genCropOp"), r.verifyParamMin("y", e.y, 0, "nos::genCropOp"), r.verifyParamType("width", e.width, "number", "nos::genCropOp"), r.verifyParamMin("width", e.width, 0, "nos::genCropOp"), r.verifyParamType("height", e.height, "number", "nos::genCropOp"), r.verifyParamMin("height", e.height, 0, "nos::genCropOp");var t = Math.round(e.x),n = Math.round(e.y),s = Math.round(e.width),i = Math.round(e.height);return new o({ type: e.type, cropX: t, cropY: n, cropWidth: s, cropHeight: i });}, s.genThumbnailOp = function () {var e = { cover: "z", contain: "x", crop: "y" };return function (t) {r.verifyOptions(t, "mode", "nos::genThumbnailOp"), r.verifyParamValid("mode", t.mode, Object.keys(e), "nos::genThumbnailOp"), "contain" === t.mode ? r.verifyParamAtLeastPresentOne(t, "width height", "nos::genThumbnailOp") : r.verifyOptions(t, "width height", "nos::genThumbnailOp"), r.undef(t.width) && (t.width = 0), r.undef(t.height) && (t.height = 0), r.verifyParamType("width", t.width, "number", "nos::genThumbnailOp"), r.verifyParamMin("width", t.width, 0, "nos::genThumbnailOp"), r.verifyParamType("height", t.height, "number", "nos::genThumbnailOp"), r.verifyParamMin("height", t.height, 0, "nos::genThumbnailOp");var n = Math.round(t.width),s = Math.round(t.height),i = new o({ type: t.type, thumbnailMode: e[t.mode], thumbnailWidth: n, thumbnailHeight: s });if ("crop" === t.mode && r.notundef(t.axis)) {r.undef(t.axis.x) && (t.axis.x = 5), r.undef(t.axis.y) && (t.axis.y = 5), r.verifyParamMin("axis.x", t.axis.x, 0, "nos::genThumbnailOp"), r.verifyParamMax("axis.x", t.axis.x, 10, "nos::genThumbnailOp"), r.verifyParamMin("axis.y", t.axis.y, 0, "nos::genThumbnailOp"), r.verifyParamMax("axis.y", t.axis.y, 10, "nos::genThumbnailOp");var a = Math.round(t.axis.x),c = Math.round(t.axis.y);i.thumbnailAxisX = a, i.thumbnailAxisY = c;}return r.notundef(t.enlarge) && (r.verifyParamType("enlarge", t.enlarge, "boolean", "nos::genThumbnailOp"), t.enlarge && (i.thumbnailEnlarge = 1)), i;};}();}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}var s = n(4),o = r(s),i = n(28),a = n(1),c = n(10).fn;c.viewImageSync = function (e) {var t = this.options;a.verifyOptions(e, "url", "nos::viewImageSync");var n = e.url,r = (0, i.url2object)(n),s = r.protocol,c = r.hostname,u = r.path,l = r.query;if ("boolean" == typeof e.strip && (l.stripmeta = e.strip ? 1 : 0), "number" == typeof e.quality && (a.verifyParamMin("quality", e.quality, 0, "nos::viewImageSync"), a.verifyParamMax("quality", e.quality, 100, "nos::viewImageSync"), l.quality = Math.round(e.quality)), "boolean" == typeof e.interlace && (l.interlace = e.interlace ? 1 : 0), "number" == typeof e.rotate && (l.rotate = Math.round(e.rotate)), "object" === (0, o["default"])(e.thumbnail)) {var d = e.thumbnail.mode || "crop",m = e.thumbnail.width,f = e.thumbnail.height;if (m >= 0 && f >= 0 && m < 4096 && f < 4096 && (m > 0 || f > 0)) {switch (d) {case "crop":d = "y";break;case "contain":d = "x";break;case "cover":d = "z";break;default:d = "x";}l.thumbnail = "" + m + d + f;}}if (t.downloadUrl) {var p = (0, i.url2object)(e.url),g = t.downloadUrl,y = p.path,h = y.indexOf("/");if (h !== -1) {var v = y.substring(0, h),b = y.substring(h + 1);g = g.replace("{bucket}", v).replace("{object}", b);}var M = (0, i.url2object)(g);return (0, i.object2url)({ protocol: M.protocol, hostname: M.hostname, path: M.path, query: a.merge(M.query, l) });}return (0, i.object2url)({ protocol: s, hostname: c, path: u, query: l });}, c.viewImageStripMeta = function (e) {a.verifyOptions(e, "url strip", "nos::viewImageStripMeta"), a.verifyParamType("strip", e.strip, "boolean", "nos::viewImageStripMeta");var t = "stripmeta=" + (e.strip ? 1 : 0),n = (0, i.genUrlSep)(e.url);return e.url + n + t;}, c.viewImageQuality = function (e) {a.verifyOptions(e, "url quality", "nos::viewImageQuality"), a.verifyParamType("quality", e.quality, "number", "nos::viewImageQuality"), a.verifyParamMin("quality", e.quality, 0, "nos::viewImageQuality"), a.verifyParamMax("quality", e.quality, 100, "nos::viewImageQuality");var t = Math.round(e.quality),n = "quality=" + t,r = (0, i.genUrlSep)(e.url);return e.url + r + n;}, c.viewImageInterlace = function (e) {a.verifyOptions(e, "url", "nos::viewImageInterlace");var t = "interlace=1",n = (0, i.genUrlSep)(e.url);return e.url + n + t;}, c.viewImageRotate = function (e) {for (a.verifyOptions(e, "url angle", "nos::viewImageRotate"), a.verifyParamType("angle", e.angle, "number", "nos::viewImageRotate"); e.angle < 0;) {e.angle = e.angle + 360;}e.angle = e.angle % 360;var t = Math.round(e.angle),n = "rotate=" + t,r = (0, i.genUrlSep)(e.url);return e.url + r + n;}, c.viewImageBlur = function (e) {a.verifyOptions(e, "url radius sigma", "nos::viewImageBlur"), a.verifyParamType("radius", e.radius, "number", "nos::viewImageBlur"), a.verifyParamMin("radius", e.radius, 1, "nos::viewImageBlur"), a.verifyParamMax("radius", e.radius, 50, "nos::viewImageBlur"), a.verifyParamType("sigma", e.sigma, "number", "nos::viewImageBlur"), a.verifyParamMin("sigma", e.sigma, 0, "nos::viewImageBlur");var t = Math.round(e.radius),n = Math.round(e.sigma),r = "blur=" + t + "x" + n,s = (0, i.genUrlSep)(e.url);return e.url + s + r;}, c.viewImageCrop = function (e) {a.verifyOptions(e, "url x y width height", "nos::viewImageCrop"), a.verifyParamType("x", e.x, "number", "nos::viewImageCrop"), a.verifyParamMin("x", e.x, 0, "nos::viewImageCrop"), a.verifyParamType("y", e.y, "number", "nos::viewImageCrop"), a.verifyParamMin("y", e.y, 0, "nos::viewImageCrop"), a.verifyParamType("width", e.width, "number", "nos::viewImageCrop"), a.verifyParamMin("width", e.width, 0, "nos::viewImageCrop"), a.verifyParamType("height", e.height, "number", "nos::viewImageCrop"), a.verifyParamMin("height", e.height, 0, "nos::viewImageCrop");var t = Math.round(e.x),n = Math.round(e.y),r = Math.round(e.width),s = Math.round(e.height),o = "crop=" + t + "_" + n + "_" + r + "_" + s,c = (0, i.genUrlSep)(e.url);return e.url + c + o;}, c.viewImageThumbnail = function () {var e = { cover: "z", contain: "x", crop: "y" };return function (t) {a.verifyOptions(t, "url mode", "nos::viewImageThumbnail"), a.verifyParamValid("mode", t.mode, Object.keys(e), "nos::viewImageThumbnail"), "contain" === t.mode ? a.verifyParamAtLeastPresentOne(t, "width height", "nos::viewImageThumbnail") : a.verifyOptions(t, "width height", "nos::viewImageThumbnail"), a.undef(t.width) && (t.width = 0), a.undef(t.height) && (t.height = 0), a.verifyParamType("width", t.width, "number", "nos::viewImageThumbnail"), a.verifyParamMin("width", t.width, 0, "nos::viewImageThumbnail"), a.verifyParamType("height", t.height, "number", "nos::viewImageThumbnail"), a.verifyParamMin("height", t.height, 0, "nos::viewImageThumbnail");var n = Math.round(t.width),r = Math.round(t.height),s = "thumbnail=" + n + e[t.mode] + r;if ("crop" === t.mode && a.notundef(t.axis)) {a.undef(t.axis.x) && (t.axis.x = 5), a.undef(t.axis.y) && (t.axis.y = 5), a.verifyParamMin("axis.x", t.axis.x, 0, "nos::viewImageThumbnail"), a.verifyParamMax("axis.x", t.axis.x, 10, "nos::viewImageThumbnail"), a.verifyParamMin("axis.y", t.axis.y, 0, "nos::viewImageThumbnail"), a.verifyParamMax("axis.y", t.axis.y, 10, "nos::viewImageThumbnail");var o = Math.round(t.axis.x),c = Math.round(t.axis.y);s = s + "&axis=" + o + "_" + c;}a.notundef(t.enlarge) && (a.verifyParamType("enlarge", t.enlarge, "boolean", "nos::viewImageThumbnail"), t.enlarge && (s += "&enlarge=1"));var u = (0, i.genUrlSep)(t.url);return t.url + u + s;};}();}, function (e, t, n) {"use strict";var r = n(10).fn,s = n(3),o = n(1),i = n(20),a = n(3);r.reportLogs = function () {var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},t = this,n = t.options,r = s.info;e = o.merge(e, { appkey: n.appKey, uid: n.account, os: "web", session: t.protocol.sdkSession || "", ver: r.sdkVersion, type: t.subType });var c = a.ntServerAddress;if (c) {var u = c + o.genUrlSep(c),l = [];for (var d in e) {l.push(d + "=" + e[d]);}u += l.join("&"), i(u, { proxyUrl: o.url2origin(u) + "/lbs/res/cors/nej_proxy_frame.html", timeout: s.xhrTimeout, onload: function onload() {}, onerror: function onerror(e) {t.logger.info("report::ajax report error", e);} });}};},, function (e, t, n) {"use strict";function r(e) {s.verifyOptions(e, "account", "friend::Friend"), s.verifyParamAtLeastPresentOne(e, "alias custom", "friend::Friend"), this.account = e.account, o(e.alias) && (this.alias = e.alias), o(e.custom) && (this.custom = e.custom);}var s = n(1),o = s.notundef,i = { addFriend: 1, applyFriend: 2, passFriendApply: 3, rejectFriendApply: 4 },a = { 1: "addFriend", 2: "applyFriend", 3: "passFriendApply", 4: "rejectFriendApply" };r.reverse = function (e) {var t = s.filterObj(e, "account alias custom createTime updateTime");return o(e.flag) && (t.valid = "1" === e.flag), o(t.createTime) && (t.createTime = +t.createTime), o(t.updateTime) && (t.updateTime = +t.updateTime), t;}, r.validTypes = function () {return Object.keys(i);}, r.getByteFromType = function (e) {return i[e];}, r.getTypeFromByte = function (e) {return a[e];}, r.assembleFriend = function (e) {var t = +new Date();return { account: e, alias: "", createTime: t, custom: "", updateTime: t, valid: !0 };}, e.exports = r;}, function (e, t, n) {"use strict";var r = n(22).fn,s = n(6),o = n(27),i = n(37),a = n(21),c = n(3),u = n(1),l = u.notundef;r.login = function () {var e = this;e.sendCmd("login", e.assembleLogin(), e.onLogin.bind(e)), e.autoconnect = !1;}, r.genSessionKey = function () {var e = {};return function () {var t = this,n = t.name,r = e[n] = e[n] || u.guid();return r;};}(), r.assembleIMLogin = function () {var e = this,t = e.options,n = t.account,r = e.autoconnect ? 0 : 1;return e.sdkSession = e.genSessionKey(), { appLogin: r, appKey: t.appKey, account: n, token: t.token, sdkVersion: c.info.sdkVersion, protocolVersion: c.info.protocolVersion, os: o.os.toString(), browser: o.name + " " + o.version, session: e.sdkSession, deviceId: a.deviceId };}, r.onLogin = function (e, t) {var n = this;n.loginResult = t, e ? n.onAuthError(e, "link::onLogin") : (n.startHeartbeat(), n.afterLogin(t));}, r.afterLogin = u.emptyFunc, r.notifyLogin = function () {var e = this,t = e.loginResult;e.logger.info("link::notifyLogin: on connect", t), e.options.onconnect(t);}, r.logout = function () {var e = this;if (e.isConnected()) {var t = new s("主动退出", "logout");e.onAuthError(t, "link::logout");}}, r.onKicked = function (e) {var t = this,n = e.content,r = n.from,o = n.reason,a = n.custom,c = { reason: t.kickedReasons[o] || "unknown", message: t.kickedMessages[o] || "未知原因" };if (l(r) && (c.from = i.reverseType(r)), l(a) && (c.custom = a), t.shouldNotifyKicked(c)) {var d = new s("被踢了", "kicked");u.merge(d, c), t.onAuthError(d, "link::onKicked");} else t.logger.warn("link::onKicked: silentlyKick"), t.shouldReconnect = !0, t.hasNotifyDisconnected = !0, t.disconnectSocket();}, r.shouldNotifyKicked = function (e) {return "silentlyKick" !== e.reason;}, r.onAuthError = function (e, t) {var n = this;n.shouldReconnect = !1, e = e || s.newConnectionError({ callFunc: t }), e.callFunc = e.callFunc || t || null, n.markAllCallbackInvalid(e), n.notifyDisconnect(e);};}, function (e, t, n) {"use strict";var r = n(22).fn,s = n(6),o = n(133),i = n(35),a = n(3),c = n(1);r.initConnect = function () {var e = this;e.socket = null, e.retryCount = 0, e.connecting = !1, e.shouldReconnect = !0, e.hasNotifyDisconnected = !1;}, r.resetConnect = function () {var e = this,t = e.options;c.notundef(t.needReconnect) ? (c.verifyParamType("needReconnect", t.needReconnect, "boolean", "link::resetConnect"), e.needReconnect = t.needReconnect) : e.needReconnect = !0, e.logger.log("link::resetConnect: needReconnect " + e.needReconnect), c.notundef(t.reconnectionAttempts) && c.verifyParamType("reconnectionAttempts", t.reconnectionAttempts, "number", "link::resetConnect"), e.reconnectionAttempts = t.reconnectionAttempts || 1 / 0, e.backoff = new o({ min: a.reconnectionDelay, max: a.reconnectionDelayMax, jitter: a.reconnectionJitter });}, r.connect = function () {var e = this;if (e.isConnected() || e.connecting) return void e.logger.warn("link::connect: already connected or connecting");if (e.connecting = !0, e.hasNotifyDisconnected = !1, e.socket) e.logger.info("link::connect: try connecting..."), e.socket.socket.connect();else {var t = e.getNextSocketUrl();t ? e.connectToUrl(t) : e.refreshSocketUrl();}}, r.getNextSocketUrl = function () {return this.socketUrls.shift();}, r.isConnected = function () {var e = this;return !!e.socket && !!e.socket.socket && e.socket.socket.connected;}, r.connectToUrl = function (e) {var t = this;t.logger.log("link::connectToUrl: " + e), window.location || (window.location = {});var n = e.split(":");window.location = { protocol: n[0], hostname: n[1].slice(2), port: n[2] }, this.options.transports = ["websocket"];var r = this.options.transports || ["websocket", "xhr-polling"];t.socket = i.connect(e, { transports: r, reconnect: !1, "force new connection": !0, "connect timeout": a.connectTimeout }), t.logger.info("link::connectToUrl: socket url: " + e + ", transports: " + JSON.stringify(r)), t.socket.on("connect", t.onConnect.bind(t)), t.socket.on("handshake_failed", t.onHandshakeFailed.bind(t)), t.socket.on("connect_failed", t.onConnectFailed.bind(t)), t.socket.on("error", t.onError.bind(t)), t.socket.on("message", t.onMessage.bind(t)), t.socket.on("disconnect", function () {t.logger.warn("link::connectToUrl: socket url: " + e + ", disconnected"), t.onDisconnect(!0, "link::socketDisconnect");});}, r.disconnect = function () {var e = this;e.isConnected() && (e.logger.log("link::disconnect: start disconnecting"), e.logout());}, r.onConnect = function () {var e = this;e.backoff && e.backoff.reset(), e.reconnectStatus = e.retryCount > 0 ? 1 : 0, e.retryCount = 0, e.connecting = !1, e.shouldReconnect = !0, e.hasNotifyDisconnected = !1, e.logger.log("link::onConnect: socket onconnected, start login"), e.login();}, r.onHandshakeFailed = function () {this.api.reportLogs({ event: "ws_handshake_failed" }), this.onDisconnect(!1, "link::onHandshakeFailed");}, r.onConnectFailed = function () {this.api.reportLogs({ event: "ws_connect_failed" }), this.onDisconnect(!1, "link::onConnectFailed");}, r.onError = function () {var e = arguments[0];e && (this.api.reportLogs({ event: "connect_timeout" }), this.onMiscError("连接错误", new s(e, "LINK_ERROR", { callFunc: "link::onError" })));}, r.onDisconnect = function () {var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,n = this;n.connected = e, n.connecting = !1, n.markAllCallbackInvalid(s.newNetworkError({ callFunc: t })), n.stopHeartbeat(), n.reconnect();}, r.willReconnect = function () {var e = this;return e.shouldReconnect && e.needReconnect && e.retryCount < e.reconnectionAttempts;}, r.reconnect = function () {var e = this;if (e.willReconnect()) {e.socket = null, e.connected && (e.autoconnect = !0), e.retryCount++, e.appLogin = 1;var t = e.backoff.duration();e.logger.info("link::reconnect: will retry after " + t + "ms, retryCount " + e.retryCount), e.options.onwillreconnect({ retryCount: e.retryCount, duration: t }), setTimeout(function () {e.connect();}, t);} else e.notifyDisconnect();}, r.notifyConnectError = function (e) {var t = this,n = s.newConnectError({ message: e, callFunc: "link::notifyConnectError" });t.logger.error("link::notifyConnectError:", n), t.options.onerror(n);}, r.notifyDisconnect = function (e) {var t = this;t.hasNotifyDisconnected || (t.hasNotifyDisconnected = !0, t.disconnectSocket(), e = e || new s(), e.retryCount = t.retryCount, e.willReconnect = t.willReconnect(), t.backoff && t.backoff.reset(), t.retryCount = 0, t.connecting = !1, t.logger.info("link::notifyDisconnect: ondisconnected ", e), t.options.ondisconnect(e));}, r.disconnectSocket = function () {var e = this;if (e.isConnected()) try {e.socket.disconnect(), e.socket = null;} catch (t) {e.logger.info("link::disconnectSocket: disconnect failed, error ", t);}};}, function (e, t, n) {"use strict";var r = n(22).fn,s = n(3);r.processLink = function (e) {switch (e.cmd) {case "heartbeat":}}, r.startHeartbeat = function () {var e = this;e.stopHeartbeat(), e.heartbeatTimer = setTimeout(function () {e.sendCmd("heartbeat", null, e.onHeartbeat.bind(e));}, s.heartbeatInterval);}, r.stopHeartbeat = function () {var e = this;e.heartbeatTimer && (clearTimeout(e.heartbeatTimer), e.heartbeatTimer = null);}, r.onHeartbeat = function (e, t) {var n = this;e ? (e.callFunc = "link::onHeartbeat", n.api.reportLogs({ event: "ping_timeout" }), n.onCustomError("heartbeat error", "HEARTBEAT_ERROR", e)) : n.startHeartbeat();}, r.heartbeat = function () {};}, function (e, t, n) {"use strict";var r = n(22).fn,s = n(69);r.processMisc = function (e) {switch (e.cmd) {case "getSimpleNosToken":e.error || (e.obj = e.content.nosTokens[0]);break;case "getNosToken":e.error || (e.obj = e.content.nosToken);break;case "notifyUploadLog":e.error || this.emitAPI({ type: "notifyUploadLog" });break;case "audioToText":e.error || (e.obj.text = e.content.text);break;case "processImage":e.obj.imageOps = s.reverseImageOps(e.obj.imageOps), e.error || (e.obj = { url: e.content.url });break;case "getNosTokenTrans":e.error || (e.obj = { nosToken: e.content.nosToken, docId: e.content.docId });break;case "notifyTransLog":e.error || this.emitAPI({ type: "notifyTransLog", obj: e.content.transInfo });break;case "fetchFile":e.error || (e.obj = e.content);break;case "fetchFileList":e.error || (e.obj = e.content);break;case "removeFile":e.error || (e.obj = e.content);}};}, function (e, t, n) {"use strict";var r = n(1),s = n(70),o = r.merge({}, s.idMap, { chatroom: { id: 13, login: 2, kicked: 3, logout: 4, sendMsg: 6, msg: 7, getChatroomMembers: 8, getHistoryMsgs: 9, markChatroomMember: 11, closeChatroom: 12, getChatroom: 13, updateChatroom: 14, updateMyChatroomMemberInfo: 15, getChatroomMembersInfo: 16, kickChatroomMember: 17, updateChatroomMemberTempMute: 19, queueOffer: 20, queuePoll: 21, queueList: 22, peak: 23, queueDrop: 24, queueInit: 25 }, user: { id: 3, syncRobot: 16 } }),i = r.merge({}, s.cmdConfig, { login: { sid: o.chatroom.id, cid: o.chatroom.login, params: [{ type: "byte", name: "type" }, { type: "Property", name: "login" }, { type: "Property", name: "imLogin" }] }, logout: { sid: o.chatroom.id, cid: o.chatroom.logout }, sendMsg: { sid: o.chatroom.id, cid: o.chatroom.sendMsg, params: [{ type: "Property", name: "msg" }] }, getChatroomMembers: { sid: o.chatroom.id, cid: o.chatroom.getChatroomMembers, params: [{ type: "byte", name: "type" }, { type: "long", name: "time" }, { type: "int", name: "limit" }] }, getHistoryMsgs: { sid: o.chatroom.id, cid: o.chatroom.getHistoryMsgs, params: [{ type: "long", name: "timetag" }, { type: "int", name: "limit" }, { type: "bool", name: "reverse" }, { type: "LongArray", name: "msgTypes" }] }, markChatroomMember: { sid: o.chatroom.id, cid: o.chatroom.markChatroomMember, params: [{ type: "string", name: "account" }, { type: "int", name: "type" }, { type: "bool", name: "isAdd" }, { type: "int", name: "level" }, { type: "string", name: "custom" }] }, closeChatroom: { sid: o.chatroom.id, cid: o.chatroom.closeChatroom, params: [{ type: "string", name: "custom" }] }, getChatroom: { sid: o.chatroom.id, cid: o.chatroom.getChatroom }, updateChatroom: { sid: o.chatroom.id, cid: o.chatroom.updateChatroom, params: [{ type: "Property", name: "chatroom" }, { type: "bool", name: "needNotify" }, { type: "String", name: "custom" }] }, updateMyChatroomMemberInfo: { sid: o.chatroom.id, cid: o.chatroom.updateMyChatroomMemberInfo, params: [{ type: "Property", name: "chatroomMember" }, { type: "bool", name: "needNotify" }, { type: "String", name: "custom" }, { type: "bool", name: "needSave" }] }, getChatroomMembersInfo: { sid: o.chatroom.id, cid: o.chatroom.getChatroomMembersInfo, params: [{ type: "StrArray", name: "accounts" }] }, kickChatroomMember: { sid: o.chatroom.id, cid: o.chatroom.kickChatroomMember, params: [{ type: "string", name: "account" }, { type: "string", name: "custom" }] }, updateChatroomMemberTempMute: { sid: o.chatroom.id, cid: o.chatroom.updateChatroomMemberTempMute, params: [{ type: "String", name: "account" }, { type: "long", name: "duration" }, { type: "bool", name: "needNotify" }, { type: "String", name: "custom" }] }, queueOffer: { sid: o.chatroom.id, cid: o.chatroom.queueOffer, params: [{ type: "string", name: "elementKey" }, { type: "string", name: "elementValue" }, { type: "bool", name: "transient" }] }, queuePoll: { sid: o.chatroom.id, cid: o.chatroom.queuePoll, params: [{ type: "string", name: "elementKey" }] }, queueList: { sid: o.chatroom.id, cid: o.chatroom.queueList }, peak: { sid: o.chatroom.id,
        cid: o.chatroom.peak }, queueDrop: { sid: o.chatroom.id, cid: o.chatroom.queueDrop }, queueInit: { sid: o.chatroom.id, cid: o.chatroom.queueInit, params: [{ type: "int", name: "limit" }] }, syncRobot: { sid: o.user.id, cid: o.user.syncRobot, params: [{ type: "long", name: "timetag" }] } }),a = "chatroom",c = r.merge({}, s.packetConfig, { "4_10": { service: "notify" }, "4_11": { service: "notify" }, "3_16": { service: a, cmd: "syncRobot", response: [{ type: "PropertyArray", name: "robots", entity: "robot" }] }, "13_2": { service: a, cmd: "login", response: [{ type: "Property", name: "chatroom" }, { type: "Property", name: "chatroomMember" }] }, "13_3": { service: a, cmd: "kicked", response: [{ type: "Number", name: "reason" }, { type: "String", name: "custom" }] }, "13_4": { service: a, cmd: "logout" }, "13_6": { service: a, cmd: "sendMsg", response: [{ type: "Property", name: "msg" }] }, "13_7": { service: a, cmd: "msg", response: [{ type: "Property", name: "msg" }] }, "13_8": { service: a, cmd: "getChatroomMembers", response: [{ type: "PropertyArray", name: "members", entity: "chatroomMember" }] }, "13_9": { service: a, cmd: "getHistoryMsgs", response: [{ type: "PropertyArray", name: "msgs", entity: "msg" }] }, "13_11": { service: a, cmd: "markChatroomMember", response: [{ type: "Property", name: "chatroomMember" }] }, "13_12": { service: a, cmd: "closeChatroom" }, "13_13": { service: a, cmd: "getChatroom", response: [{ type: "Property", name: "chatroom" }] }, "13_14": { service: a, cmd: "updateChatroom" }, "13_15": { service: a, cmd: "updateMyChatroomMemberInfo" }, "13_16": { service: a, cmd: "getChatroomMembersInfo", response: [{ type: "PropertyArray", name: "members", entity: "chatroomMember" }] }, "13_17": { service: a, cmd: "kickChatroomMember" }, "13_19": { service: a, cmd: "updateChatroomMemberTempMute" }, "13_20": { service: a, cmd: "queueOffer" }, "13_21": { service: a, cmd: "queuePoll", response: [{ type: "String", name: "elementKey" }, { type: "String", name: "elementValue" }] }, "13_22": { service: a, cmd: "queueList", response: [{ type: "KVArray", name: "queueList" }] }, "13_23": { service: a, cmd: "peak", response: [{ type: "String", name: "elementKey" }, { type: "String", name: "elementValue" }] }, "13_24": { service: a, cmd: "queueDrop" }, "13_25": { service: a, cmd: "queueInit" } });e.exports = { idMap: o, cmdConfig: i, packetConfig: c };}, function (e, t) {"use strict";e.exports = { imLogin: { os: 4, sdkVersion: 6, appLogin: 8, protocolVersion: 9, deviceId: 13, appKey: 18, account: 19, browser: 24, session: 26, token: 1e3 }, nosToken: { objectName: 1, token: 2, bucket: 3, expireTime: 4 }, audioToText: { url: 2 }, imageOp: { type: 0, stripmeta: 1, typeType: 2, blurRadius: 3, blurSigma: 4, qualityQuality: 5, cropX: 6, cropY: 7, cropWidth: 8, cropHeight: 9, rotateAngle: 10, pixelPixel: 11, thumbnailMode: 12, thumbnailWidth: 13, thumbnailHeight: 14, thumbnailAxisX: 15, thumbnailAxisY: 16, thumbnailCenterX: 17, thumbnailCenterY: 18, thumbnailEnlarge: 19, thumbnailToStatic: 20, watermarkType: 21, watermarkGravity: 22, watermarkDissolve: 23, watermarkDx: 24, watermarkDy: 25, watermarkImage: 26, watermarkText: 27, watermarkFont: 28, watermarkFontSize: 29, watermarkFontColor: 30, interlace: 31 }, robot: { account: 4, nick: 5, avatar: 6, intro: 7, config: 8, valid: 9, createTime: 10, updateTime: 11, custid: 12, botid: 13, bindTime: 14 }, clientAntispam: { version: 1, md5: 2, nosurl: 3, thesaurus: 4 }, transToken: { name: 1, type: 2, transType: 3, size: 4, extra: 5, body: 6 }, transInfo: { docId: 1, name: 2, prefix: 3, size: 4, type: 5, state: 6, transType: 7, transSize: 8, pageCount: 9, picInfo: 10, extra: 11, flag: 12 }, fileListParam: { fromDocId: 1, limit: 2 }, login: { appKey: 1, account: 2, deviceId: 3, chatroomId: 5, appLogin: 8, chatroomNick: 20, chatroomAvatar: 21, chatroomCustom: 22, chatroomEnterCustom: 23, session: 26, isAnonymous: 38 }, chatroom: { id: 1, name: 3, announcement: 4, broadcastUrl: 5, custom: 12, createTime: 14, updateTime: 15, queuelevel: 16, creator: 100, onlineMemberNum: 101, mute: 102 }, msg: { idClient: 1, type: 2, attach: 3, custom: 4, resend: 5, userUpdateTime: 6, fromNick: 7, fromAvatar: 8, fromCustom: 9, yidunEnable: 10, antiSpamContent: 11, skipHistory: 12, body: 13, antiSpamBusinessId: 14, clientAntiSpam: 15, antiSpamUsingYidun: 16, time: 20, from: 21, chatroomId: 22, fromClientType: 23, highPriority: 25 }, chatroomMember: { chatroomId: 1, account: 2, type: 3, level: 4, nick: 5, avatar: 6, custom: 7, online: 8, guest: 9, enterTime: 10, blacked: 12, gaged: 13, valid: 14, updateTime: 15, tempMuted: 16, tempMuteDuration: 17 } };}, function (e, t) {"use strict";e.exports = { nosToken: { objectName: 1, token: 2, bucket: 3, expireTime: 4 }, audioToText: { url: 2 }, imageOp: { type: 0, stripmeta: 1, typeType: 2, blurRadius: 3, blurSigma: 4, qualityQuality: 5, cropX: 6, cropY: 7, cropWidth: 8, cropHeight: 9, rotateAngle: 10, pixelPixel: 11, thumbnailMode: 12, thumbnailWidth: 13, thumbnailHeight: 14, thumbnailAxisX: 15, thumbnailAxisY: 16, thumbnailCenterX: 17, thumbnailCenterY: 18, thumbnailEnlarge: 19, thumbnailToStatic: 20, watermarkType: 21, watermarkGravity: 22, watermarkDissolve: 23, watermarkDx: 24, watermarkDy: 25, watermarkImage: 26, watermarkText: 27, watermarkFont: 28, watermarkFontSize: 29, watermarkFontColor: 30, interlace: 31 }, robot: { account: 4, nick: 5, avatar: 6, intro: 7, config: 8, valid: 9, createTime: 10, updateTime: 11, custid: 12, botid: 13, bindTime: 14 }, clientAntispam: { version: 1, md5: 2, nosurl: 3, thesaurus: 4 }, transToken: { name: 1, type: 2, transType: 3, size: 4, extra: 5, body: 6 }, transInfo: { docId: 1, name: 2, prefix: 3, size: 4, type: 5, state: 6, transType: 7, transSize: 8, pageCount: 9, picInfo: 10, extra: 11, flag: 12 }, fileListParam: { fromDocId: 1, limit: 2 }, login: { os: 4, sdkVersion: 6, appLogin: 8, protocolVersion: 9, deviceId: 13, appKey: 18, account: 19, browser: 24, session: 26, token: 1e3 }, loginRes: { lastLoginDeviceId: 17, connectionId: 102, ip: 103, port: 104, country: 106 }, loginPort: { type: 3, os: 4, mac: 5, deviceId: 13, account: 19, connectionId: 102, ip: 103, time: 109 }, sync: { myInfo: 1, offlineMsgs: 2, teams: 3, netcallMsgs: 6, roamingMsgs: 7, relations: 9, friends: 11, sessions: 12, friendUsers: 13, msgReceipts: 14, myTeamMembers: 15, donnop: 16, deleteMsg: 17, sessionAck: 18, robots: 19, broadcastMsgs: 20, filterMsgs: 100 }, donnop: { open: 1 }, team: { teamId: 1, name: 3, type: 4, owner: 5, level: 6, selfCustom: 7, valid: 8, memberNum: 9, memberUpdateTime: 10, createTime: 11, updateTime: 12, validToCurrentUser: 13, intro: 14, announcement: 15, joinMode: 16, bits: 17, custom: 18, serverCustom: 19, avatar: 20, beInviteMode: 21, inviteMode: 22, updateTeamMode: 23, updateCustomMode: 24, mute: 100, muteType: 101 }, teamMember: { teamId: 1, account: 3, type: 4, nickInTeam: 5, bits: 7, active: 8, valid: 9, joinTime: 10, updateTime: 11, custom: 12, mute: 13 }, msg: { scene: 0, to: 1, from: 2, fromClientType: 4, fromDeviceId: 5, fromNick: 6, time: 7, type: 8, body: 9, attach: 10, idClient: 11, idServer: 12, resend: 13, userUpdateTime: 14, custom: 15, pushPayload: 16, pushContent: 17, apnsAccounts: 18, apnsContent: 19, apnsForcePush: 20, yidunEnable: 21, antiSpamContent: 22, antiSpamBusinessId: 23, clientAntiSpam: 24, antiSpamUsingYidun: 25, needMsgReceipt: 26, isHistoryable: 100, isRoamingable: 101, isSyncable: 102, isMuted: 104, cc: 105, isPushable: 107, isOfflinable: 108, isUnreadable: 109, needPushNick: 110, isReplyMsg: 111, tempTeamMemberCount: 112 }, msgReceipt: { to: 1, from: 2, time: 7, idClient: 11 }, teamMsgReceipt: { teamId: 0, idServer: 1, read: 100, unread: 101, idClient: 102, account: 103 }, sysMsg: { time: 0, type: 1, to: 2, from: 3, ps: 4, attach: 5, idServer: 6, sendToOnlineUsersOnly: 7, apnsText: 8, pushPayload: 9, deletedIdClient: 10, deletedIdServer: 11, yidunEnable: 12, antiSpamContent: 13, deletedMsgTime: 14, deletedMsgFromNick: 15, opeAccount: 16, cc: 105, isPushable: 107, isUnreadable: 109, needPushNick: 110 }, broadcastMsg: { broadcastId: 1, fromAccid: 2, fromUid: 3, timestamp: 4, body: 5 }, friend: { account: 4, flag: 5, beflag: 6, source: 7, alias: 8, bits: 9, custom: 10, createTime: 11, updateTime: 12 }, user: { account: 1, nick: 3, avatar: 4, sign: 5, gender: 6, email: 7, birth: 8, tel: 9, custom: 10, createTime: 12, updateTime: 13 }, specialRelation: { account: 0, isMuted: 1, isBlacked: 2, createTime: 3, updateTime: 4 }, msgType: { text: 0, picture: 1, audio: 2, video: 3, location: 4, notification: 5, file: 6, netcall_audio: 7, netcall_vedio: 8, datatunnel_new: 9, tips: 10, robot: 11, custom: 100 }, msgEvent: { type: 1, value: 2, idClient: 3, custom: 4, validTime: 5, broadcastType: 6, sync: 7, validTimeType: 8, durable: 9, time: 10, idServer: 11, clientType: 12, serverConfig: 13, serverCustom: 14, appid: 101, account: 103, enableMultiClient: 104, consid: 106 }, msgEventSubscribe: { type: 1, subscribeTime: 2, sync: 3, to: 102, from: 104, time: 105 } };}, function (e, t) {"use strict";e.exports = { imLogin: { 4: "os", 6: "sdkVersion", 8: "appLogin", 9: "protocolVersion", 13: "deviceId", 18: "appKey", 19: "account", 24: "browser", 26: "session", 1000: "token" }, nosToken: { 1: "objectName", 2: "token", 3: "bucket", 4: "expireTime" }, audioToText: { 2: "url" }, imageOp: { 0: "type", 1: "stripmeta", 2: "typeType", 3: "blurRadius", 4: "blurSigma", 5: "qualityQuality", 6: "cropX", 7: "cropY", 8: "cropWidth", 9: "cropHeight", 10: "rotateAngle", 11: "pixelPixel", 12: "thumbnailMode", 13: "thumbnailWidth", 14: "thumbnailHeight", 15: "thumbnailAxisX", 16: "thumbnailAxisY", 17: "thumbnailCenterX", 18: "thumbnailCenterY", 19: "thumbnailEnlarge", 20: "thumbnailToStatic", 21: "watermarkType", 22: "watermarkGravity", 23: "watermarkDissolve", 24: "watermarkDx", 25: "watermarkDy", 26: "watermarkImage", 27: "watermarkText", 28: "watermarkFont", 29: "watermarkFontSize", 30: "watermarkFontColor", 31: "interlace" }, robot: { 4: "account", 5: "nick", 6: "avatar", 7: "intro", 8: "config", 9: "valid", 10: "createTime", 11: "updateTime", 12: "custid", 13: "botid", 14: "bindTime" }, clientAntispam: { 1: "version", 2: "md5", 3: "nosurl", 4: "thesaurus" }, transToken: { 1: "name", 2: "type", 3: "transType", 4: "size", 5: "extra", 6: "body" }, transInfo: { 1: "docId", 2: "name", 3: "prefix", 4: "size", 5: "type", 6: "state", 7: "transType", 8: "transSize", 9: "pageCount", 10: "picInfo", 11: "extra", 12: "flag" }, fileListParam: { 1: "fromDocId", 2: "limit" }, login: { 1: "appKey", 2: "account", 3: "deviceId", 5: "chatroomId", 8: "appLogin", 20: "chatroomNick", 21: "chatroomAvatar", 22: "chatroomCustom", 23: "chatroomEnterCustom", 26: "session", 38: "isAnonymous" }, chatroom: { 1: "id", 3: "name", 4: "announcement", 5: "broadcastUrl", 12: "custom", 14: "createTime", 15: "updateTime", 16: "queuelevel", 100: "creator", 101: "onlineMemberNum", 102: "mute" }, msg: { 1: "idClient", 2: "type", 3: "attach", 4: "custom", 5: "resend", 6: "userUpdateTime", 7: "fromNick", 8: "fromAvatar", 9: "fromCustom", 10: "yidunEnable", 11: "antiSpamContent", 12: "skipHistory", 13: "body", 14: "antiSpamBusinessId", 15: "clientAntiSpam", 16: "antiSpamUsingYidun", 20: "time", 21: "from", 22: "chatroomId", 23: "fromClientType", 25: "highPriority" }, chatroomMember: { 1: "chatroomId", 2: "account", 3: "type", 4: "level", 5: "nick", 6: "avatar", 7: "custom", 8: "online", 9: "guest", 10: "enterTime", 12: "blacked", 13: "gaged", 14: "valid", 15: "updateTime", 16: "tempMuted", 17: "tempMuteDuration" } };}, function (e, t) {"use strict";e.exports = { nosToken: { 1: "objectName", 2: "token", 3: "bucket", 4: "expireTime" }, audioToText: { 2: "url" }, imageOp: { 0: "type", 1: "stripmeta", 2: "typeType", 3: "blurRadius", 4: "blurSigma", 5: "qualityQuality", 6: "cropX", 7: "cropY", 8: "cropWidth", 9: "cropHeight", 10: "rotateAngle", 11: "pixelPixel", 12: "thumbnailMode", 13: "thumbnailWidth", 14: "thumbnailHeight", 15: "thumbnailAxisX", 16: "thumbnailAxisY", 17: "thumbnailCenterX", 18: "thumbnailCenterY", 19: "thumbnailEnlarge", 20: "thumbnailToStatic", 21: "watermarkType", 22: "watermarkGravity", 23: "watermarkDissolve", 24: "watermarkDx", 25: "watermarkDy", 26: "watermarkImage", 27: "watermarkText", 28: "watermarkFont", 29: "watermarkFontSize", 30: "watermarkFontColor", 31: "interlace" }, robot: { 4: "account", 5: "nick", 6: "avatar", 7: "intro", 8: "config", 9: "valid", 10: "createTime", 11: "updateTime", 12: "custid", 13: "botid", 14: "bindTime" }, clientAntispam: { 1: "version", 2: "md5", 3: "nosurl", 4: "thesaurus" }, transToken: { 1: "name", 2: "type", 3: "transType", 4: "size", 5: "extra", 6: "body" }, transInfo: { 1: "docId", 2: "name", 3: "prefix", 4: "size", 5: "type", 6: "state", 7: "transType", 8: "transSize", 9: "pageCount", 10: "picInfo", 11: "extra", 12: "flag" }, fileListParam: { 1: "fromDocId", 2: "limit" }, login: { 4: "os", 6: "sdkVersion", 8: "appLogin", 9: "protocolVersion", 13: "deviceId", 18: "appKey", 19: "account", 24: "browser", 26: "session", 1000: "token" }, loginRes: { 17: "lastLoginDeviceId", 102: "connectionId", 103: "ip", 104: "port", 106: "country" }, loginPort: { 3: "type", 4: "os", 5: "mac", 13: "deviceId", 19: "account", 102: "connectionId", 103: "ip", 109: "time" }, sync: { 1: "myInfo", 2: "offlineMsgs", 3: "teams", 6: "netcallMsgs", 7: "roamingMsgs", 9: "relations", 11: "friends", 12: "sessions", 13: "friendUsers", 14: "msgReceipts", 15: "myTeamMembers", 16: "donnop", 17: "deleteMsg", 18: "sessionAck", 19: "robots", 20: "broadcastMsgs", 100: "filterMsgs" }, donnop: { 1: "open" }, team: { 1: "teamId", 3: "name", 4: "type", 5: "owner", 6: "level", 7: "selfCustom", 8: "valid", 9: "memberNum", 10: "memberUpdateTime", 11: "createTime", 12: "updateTime", 13: "validToCurrentUser", 14: "intro", 15: "announcement", 16: "joinMode", 17: "bits", 18: "custom", 19: "serverCustom", 20: "avatar", 21: "beInviteMode", 22: "inviteMode", 23: "updateTeamMode", 24: "updateCustomMode", 100: "mute", 101: "muteType" }, teamMember: { 1: "teamId", 3: "account", 4: "type", 5: "nickInTeam", 7: "bits", 8: "active", 9: "valid", 10: "joinTime", 11: "updateTime", 12: "custom", 13: "mute" }, msg: { 0: "scene", 1: "to", 2: "from", 4: "fromClientType", 5: "fromDeviceId", 6: "fromNick", 7: "time", 8: "type", 9: "body", 10: "attach", 11: "idClient", 12: "idServer", 13: "resend", 14: "userUpdateTime", 15: "custom", 16: "pushPayload", 17: "pushContent", 18: "apnsAccounts", 19: "apnsContent", 20: "apnsForcePush", 21: "yidunEnable", 22: "antiSpamContent", 23: "antiSpamBusinessId", 24: "clientAntiSpam", 25: "antiSpamUsingYidun", 26: "needMsgReceipt", 100: "isHistoryable", 101: "isRoamingable", 102: "isSyncable", 104: "isMuted", 105: "cc", 107: "isPushable", 108: "isOfflinable", 109: "isUnreadable", 110: "needPushNick", 111: "isReplyMsg", 112: "tempTeamMemberCount" }, msgReceipt: { 1: "to", 2: "from", 7: "time", 11: "idClient" }, teamMsgReceipt: { 0: "teamId", 1: "idServer", 100: "read", 101: "unread", 102: "idClient", 103: "account" }, sysMsg: { 0: "time", 1: "type", 2: "to", 3: "from", 4: "ps", 5: "attach", 6: "idServer", 7: "sendToOnlineUsersOnly", 8: "apnsText", 9: "pushPayload", 10: "deletedIdClient", 11: "deletedIdServer", 12: "yidunEnable", 13: "antiSpamContent", 14: "deletedMsgTime", 15: "deletedMsgFromNick", 16: "opeAccount", 105: "cc", 107: "isPushable", 109: "isUnreadable", 110: "needPushNick" }, broadcastMsg: { 1: "broadcastId", 2: "fromAccid", 3: "fromUid", 4: "timestamp", 5: "body" }, friend: { 4: "account", 5: "flag", 6: "beflag", 7: "source", 8: "alias", 9: "bits", 10: "custom", 11: "createTime", 12: "updateTime" }, user: { 1: "account", 3: "nick", 4: "avatar", 5: "sign", 6: "gender", 7: "email", 8: "birth", 9: "tel", 10: "custom", 12: "createTime", 13: "updateTime" }, specialRelation: { 0: "account", 1: "isMuted", 2: "isBlacked", 3: "createTime", 4: "updateTime" }, msgType: { 0: "text", 1: "picture", 2: "audio", 3: "video", 4: "location", 5: "notification", 6: "file", 7: "netcall_audio", 8: "netcall_vedio", 9: "datatunnel_new", 10: "tips", 11: "robot", 100: "custom" }, msgEvent: { 1: "type", 2: "value", 3: "idClient", 4: "custom", 5: "validTime", 6: "broadcastType", 7: "sync", 8: "validTimeType", 9: "durable", 10: "time", 11: "idServer", 12: "clientType", 13: "serverConfig", 14: "serverCustom", 101: "appid", 103: "account", 104: "enableMultiClient", 106: "consid" }, msgEventSubscribe: { 1: "type", 2: "subscribeTime", 3: "sync", 102: "to", 104: "from", 105: "time" } };}, function (e, t, n) {"use strict";var r = n(8),s = n(42),o = function () {var e = /json/i,t = /post/i;return function (n, o) {o = o || {};var i = o.data = o.data || {},a = o.headers = o.headers || {},c = r.checkWithDefault(a, "Accept", "application/json"),u = r.checkWithDefault(a, "Content-Type", "application/json");return e.test(c) && (o.type = "json"), t.test(o.method) && e.test(u) && (o.data = JSON.stringify(i)), s(n, o);};}();e.exports = o;}, function (e, t, n) {"use strict";function r(e) {var t = this;t.init(), i.call(t, e);}var s = n(8),o = n(71),i = n(43),a = {},c = i.prototype,u = r.prototype = Object.create(c);u.init = function () {function e(e) {var t = e.data;if (0 === t.indexOf(n)) {t = JSON.parse(t.replace(n, ""));var r = t.key,s = a[r];s && (delete a[r], t.result = decodeURIComponent(t.result || ""), s.onLoad(t));}}function t() {if (!r) {r = !0;var t = s.getGlobal();t.postMessage ? s.on(t, "message", e) : o.addMsgListener(e);}}var n = "NEJ-AJAX-DATA:",r = !1;return function () {t();};}(), u.doSend = function () {var e = this,t = e.options,n = s.url2origin(t.url),r = t.proxyUrl || n + "/res/nej_proxy_frame.html",i = a[r];if (s.isArray(i)) return void i.push(e.doSend.bind(e, t));if (!i) return a[r] = [e.doSend.bind(e, t)], void s.createIframe({ src: r, onload: function onload(e) {var t = a[r];a[r] = s.target(e).contentWindow, t.forEach(function (e) {try {e();} catch (t) {console.error(t);}});} });if (!e.aborted) {var c = e.key = s.uniqueID();a[c] = e;var u = s.fetch({ method: "GET", url: "", data: null, headers: {}, timeout: 0 }, t);u.key = c, o.postMessage(i, { data: u }), e.afterSend();}}, u.abort = function () {var e = this;e.aborted = !0, delete a[e.key], c.abort.call(e);}, e.exports = r;}, function (e, t, n) {"use strict";function r(e) {var t = this;t.init(), o.call(t, e);}var s = n(8),o = n(43),i = n(71),a = "NEJ-UPLOAD-RESULT:",c = {},u = o.prototype,l = r.prototype = Object.create(u);l.init = function () {function e(e) {var t = e.data;if (0 === t.indexOf(a)) {t = JSON.parse(t.replace(a, ""));var n = t.key,r = c[n];r && (delete c[n], t.result = decodeURIComponent(t.result || ""), r.onLoad(t.result));}}function t() {if (!n) {n = !0;var t = s.getGlobal();t.postMessage ? s.on(t, "message", e) : (i.addMsgListener(e), i.startTimer());}}var n = !1;return function () {t();};}(), l.doSend = function () {function e() {l.forEach(function (e, t) {var n = d[t];n.parentNode && (e.name = n.name, s.isFunction(e.setAttribute) && e.setAttribute("form", n.getAttribute("form")), n.parentNode.replaceChild(e, n));});}var t = this,n = t.options,r = t.key = "zoro-ajax-upload-iframe-" + s.uniqueID();c[r] = t;var o = t.form = s.html2node('<form style="display:none;"></form>');document.body.appendChild(o), o.target = r, o.method = "POST", o.enctype = "multipart/form-data", o.encoding = "multipart/form-data";var i = n.url,a = s.genUrlSep(i);o.action = i + a + "_proxy_=form";var u = n.data,l = [],d = [];u && s.getKeys(u, n.putFileAtEnd).forEach(function (e) {var t = u[e];if (t.tagName && "INPUT" === t.tagName.toUpperCase()) {if ("file" === t.type) {var n = t,r = n.cloneNode(!0);n.parentNode.insertBefore(r, n);var i = s.dataset(n, "name");i && (n.name = i), o.appendChild(n), s.isFunction(n.setAttribute) && (n.setAttribute("form", ""), n.removeAttribute("form")), l.push(t), d.push(r);}} else {var a = s.html2node('<input type="hidden"/>');a.name = e, a.value = t, o.appendChild(a);}});var m = t.iframe = s.createIframe({ name: r, onload: function onload() {return t.aborted ? void e() : (s.on(m, "load", t.checkResult.bind(t)), o.submit(), e(), void t.afterSend());} });}, l.checkResult = function () {var e,t,n = this;try {if (e = n.iframe.contentWindow.document.body, t = (e.innerText || e.textContent || "").trim(), t.indexOf(a) >= 0 || e.innerHTML.indexOf(a) >= 0) return;} catch (r) {return void console.error("ignore error if not same domain,", r);}n.onLoad(t);}, l.onLoad = function (e) {var t = this;u.onLoad.call(t, { status: 200, result: e }), s.remove(t.form), s.remove(t.iframe), u.destroy.call(t);}, l.destroy = function () {s.remove(this.iframe), s.remove(this.form);}, l.abort = function () {var e = this;e.aborted = !0, delete c[e.key], u.abort.call(e);}, e.exports = r;}, function (e, t, n) {"use strict";function r(e) {var t = this;e.onuploading && t.on("uploading", e.onuploading), o.call(t, e);}var s = n(8),o = n(43),i = o.prototype,a = r.prototype = Object.create(i);a.doSend = function () {var e = this,t = e.options,n = t.headers,r = e.xhr = new XMLHttpRequest();if ("multipart/form-data" === n["Content-Type"]) {delete n["Content-Type"], r.upload.onprogress = e.onProgress.bind(e), r.upload.onload = e.onProgress.bind(e);var o = t.data;t.data = new window.FormData(), o && s.getKeys(o, t.putFileAtEnd).forEach(function (e) {var n = o[e];n.tagName && "INPUT" === n.tagName.toUpperCase() ? "file" === n.type && [].forEach.call(n.files, function (e) {t.data.append(s.dataset(n, "name") || n.name || e.name || "file-" + s.uniqueID(), e);}) : t.data.append(e, n);});}r.onreadystatechange = e.onStateChange.bind(e), 0 !== t.timeout && (e.timer = setTimeout(e.onTimeout.bind(e), t.timeout)), r.open(t.method, t.url, !t.sync), Object.keys(n).forEach(function (e) {r.setRequestHeader(e, n[e]);}), t.cookie && "withCredentials" in r && (r.withCredentials = !0), r.send(t.data), e.afterSend();}, a.onProgress = function (e) {e.lengthComputable && e.loaded <= e.total && this.emit("uploading", e);}, a.onStateChange = function () {var e = this,t = e.xhr;4 === t.readyState && e.onLoad({ status: t.status, result: t.responseText || "" });}, a.getResponseHeader = function (e) {var t = this.xhr;return t ? t.getResponseHeader(e) : "";}, a.destroy = function () {var e = this;clearTimeout(e.timer);try {e.xhr.onreadystatechange = s.f, e.xhr.abort();} catch (t) {console.error("ignore error ajax destroy,", t);}i.destroy.call(e);}, e.exports = r;}, function (e, t, n) {"use strict";var r = n(42),s = function s(e, t) {return t.method = "POST", t.headers = t.headers || {}, t.headers["Content-Type"] = "multipart/form-data", t.timeout = 0, t.type = t.type || "json", r(e, t);};e.exports = s;}, function (e, t, n) {"use strict";"undefined" != typeof window && (!window.console, 1);}, function (e, t, n) {"use strict";function r() {var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};o.merge(this, { options: e, debug: !1, api: "log", style: "color:blue;", log: o.emptyFunc, info: o.emptyFunc, warn: o.emptyFunc, error: o.emptyFunc }), this.prefix = e.prefix || "", this.setDebug(e.debug);}var s = n(27),o = n(1),i = (n(20), r.prototype),a = ["Chrome", "Safari", "Firefox"];i.setDebug = function () {var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],t = this;if (t.debug = e, e.style && (t.style = e.style), t.debug && o.exist(console)) {var n = console;t.debug = function () {var e = t.formatArgs(arguments);a.indexOf(s.name) !== -1 && o.isString(e[0]) && (e[0] = "%c" + e[0], e.splice(1, 0, t.style)), t._log("debug", e);}, t.log = function () {var e = t.formatArgs(arguments);a.indexOf(s.name) !== -1 && o.isString(e[0]) && (e[0] = "%c" + e[0], e.splice(1, 0, t.style)), t._log("log", e);}, t.info = function () {var e = t.formatArgs(arguments);a.indexOf(s.name) !== -1 && o.isString(e[0]) && (e[0] = "%c" + e[0], e.splice(1, 0, t.style)), t._log("info", e);}, t.warn = function () {var e = t.formatArgs(arguments);a.indexOf(s.name) !== -1 && o.isString(e[0]) && (e[0] = "%c" + e[0], e.splice(1, 0, t.style)), t._log("warn", e);}, t.error = function () {var e = t.formatArgs(arguments);a.indexOf(s.name) !== -1 && o.isString(e[0]) && (e[0] = "%c" + e[0], e.splice(1, 0, t.style)), t._log("error", e);}, t._log = function (e, r) {var s = !1,i = t.options.logFunc,a = null;if (i && !s && (i[e] && (a = i[e]), o.isFunction(a))) return void a.apply(i, r);if (n[e]) try {n[e].apply ? t.chrome(e, r) : t.ie(e, r);} catch (c) {}}, t.chrome = function (e, r) {a.indexOf(s.name) !== -1 ? n[e].apply(n, r) : t.ie(e, r);}, t.ie = function (e, t) {t.forEach(function (t) {n[e](JSON.stringify(t, null, 4));});};}}, i.formatArgs = function (e) {var t = this;e = [].slice.call(e, 0);var n = new Date(),r = c(n.getMonth() + 1) + "-" + c(n.getDate()) + " " + c(n.getHours()) + ":" + c(n.getMinutes()) + ":" + c(n.getSeconds()) + ":" + c(n.getMilliseconds(), 3),s = "[NIM LOG " + r + " " + t.prefix.toUpperCase() + "]  ";return o.isString(e[0]) ? e[0] = s + e[0] : e.splice(0, 0, s), e.forEach(function (t, n) {(o.isArray(t) || o.isObject(t)) && (e[n] = o.simpleClone(t));}), e;};var c = function c(e, t) {t = t || 2;for (var n = "" + e; n.length < t;) {n = "0" + n;}return n;};e.exports = r;}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s(e) {var t = { debug: 0, log: 1, info: 2, warn: 3, error: 4 },n = this,r = e.url || null;n.level = t[e.level] || 0, n.logCache = [], n.logNum = 1, n.timeInterval = 5e3, window.onerror = function (e, t, r, s, o) {n.error.call(n, o);}, setInterval(function () {n.logCache.length > 0 && r && n.postLogs(r, n.logCache);}, n.timeInterval);}var o = n(4),i = r(o);s.prototype.debug = function () {this.level > 0 || (console.debug.apply(this, arguments), this.cacheLogs.apply(this, ["[degbug]"].concat(arguments)));}, s.prototype.log = function () {this.level > 1 || (console.log.apply(this, arguments), this.cacheLogs.apply(this, ["[log]"].concat(arguments)));}, s.prototype.info = function () {this.level > 2 || (console.info.apply(this, arguments), this.cacheLogs.apply(this, ["[info]"].concat(arguments)));}, s.prototype.warn = function () {this.level > 3 || (console.warn.apply(this, arguments), this.cacheLogs.apply(this, ["[warn]"].concat(arguments)));}, s.prototype.error = function () {this.level > 4 || (console.error.apply(this, arguments), this.cacheLogs.apply(this, ["[error]"].concat(arguments)));}, s.prototype.cacheLogs = function (e, t) {for (var n = [], r = 0; r < t.length; r++) {var s = t[r];"object" === ("undefined" == typeof s ? "undefined" : (0, i["default"])(s)) ? n.push(JSON.stringify(s)) : n.push(s);}var o = this.logNum++ + " " + e + " " + n.join("; ");this.logCache.push(o.replace("%c", ""));}, s.prototype.postLogs = function (e, t) {var n = this,r = new XMLHttpRequest();r.onreadystatechange = function () {4 === r.readyState && (200 === r.status ? (console.info("LoggerPlugin::日志上报完成"), n.logCache = [], n.timeInterval = 5e3) : n.timeInterval += 5e3);}, r.open("POST", e), r.setRequestHeader("Content-Type", "plain/text;charset=utf-8"), r.timeout = 360, r.send(t.join("\n"));}, e.exports = s;}, function (e, t, n) {"use strict";var r = n(1),s = { file: { md5: "$(Etag)", size: "$(ObjectSize)" }, image: { md5: "$(Etag)", size: "$(ObjectSize)", w: "$(ImageInfo.Width)", h: "$(ImageInfo.Height)", orientation: "$(ImageInfo.Orientation)" }, audio: { md5: "$(Etag)", size: "$(ObjectSize)", dur: "$(AVinfo.Audio.Duration)" }, video: { md5: "$(Etag)", size: "$(ObjectSize)", dur: "$(AVinfo.Video.Duration)", w: "$(AVinfo.Video.Width)", h: "$(AVinfo.Video.Height)" } },o = {};o.genResponseBody = function (e) {return e = e || "file", s[e];}, o.parseResponse = function (e, t) {r.notundef(e.size) && (e.size = +e.size), r.notundef(e.w) && (e.w = +e.w), r.notundef(e.h) && (e.h = +e.h), r.notundef(e.dur) && (e.dur = +e.dur);var n = e.orientation;if (r.notundef(n) && (delete e.orientation, t && ("right, top" === n || "left, bottom" === n))) {var s = e.w;e.w = e.h, e.h = s;}return e;}, e.exports = o;}, function (e, t, n) {"use strict";function r(e) {var t = this;t.options = s.copy(e), s.verifyOptions(e, "url fileName"), s.verifyParamPresentJustOne(e, "blob fileInput"), s.verifyCallback(e, "beginupload uploadprogress uploaddone"), e.fileInput && (e.fileInput = s.verifyFileInput(e.fileInput)), e.type && s.verifyFileType(e.type), e.timeout ? s.verifyParamType("timeout", e.timeout, "number") : e.timeout = 6e5, s.verifyFileUploadCallback(e), e.data = {};var n = e.fileName,r = e.fileInput;if (c) {if (r) {var a = e.type ? s.filterFiles(r.files, e.type) : [].slice.call(r.files, 0);if (!a || !a.length) return void e.uploaddone(o.newWrongFileTypeError("未读取到" + e.type + "类型的文件, 请确保文件选择节点的文件不为空, 并且请确保选择了" + e.type + "类型的文件"));var l = r.files[0].size;if (l > u) return void e.uploaddone(o.newFileTooLargeError("文件大小超过100M"));e.data[n] = a[0];} else e.blob && (e.data[n] = e.blob);} else s.dataset(r, "name", n), e.data.input = r;e.params && s.merge(e.data, e.params);var d = { data: e.data, onaftersend: function onaftersend() {e.beginupload(t);}, onuploading: function onuploading(t) {var n = Math.floor(1e4 * t.loaded / t.total) / 100,r = { docId: e.docId, total: t.total, loaded: t.loaded, percentage: n, percentageText: n + "%" };e.fileInput && (r.fileInput = e.fileInput), e.blob && (r.blob = e.blob), e.uploadprogress(r);}, onload: function onload(n) {n.docId = e.docId, n.Error ? t.onError(n) : e.uploaddone(null, n);}, onerror: function onerror(n) {try {if (n.result) var r = JSON.parse(n.result);else r = n;t.onError(r);} catch (s) {console.error("ignore error if could not parse obj.result", s), e.uploaddone(new o(n.message, n.code), t.options);}} };c || (d.mode = "iframe"), d.putFileAtEnd = !0, t.sn = i(e.url, d);}var s = n(1),o = n(6),i = n(20).upload,a = n(20).abort,c = s.supportFormData,u = 104857600;r.prototype.onError = function (e) {var t,n,r,s = this,i = s.options;e = e || {}, t = e.Error || e || {}, n = t.Code || t.code || "unknown", r = t.Message || t.message || "未知错误", i.uploaddone(new o(n + "(" + r + ")", n));}, r.prototype.abort = function () {a(this.sn);}, e.exports = r;}, function (e, t, n) {e.exports = { "default": n(134), __esModule: !0 };}, function (e, t, n) {e.exports = { "default": n(135), __esModule: !0 };}, function (e, t, n) {e.exports = { "default": n(136), __esModule: !0 };}, function (e, t, n) {e.exports = { "default": n(137), __esModule: !0 };}, function (e, t, n) {e.exports = { "default": n(138), __esModule: !0 };}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}t.__esModule = !0;var s = n(128),o = r(s);t["default"] = function () {function e(e, t) {for (var n = 0; n < t.length; n++) {var r = t[n];r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), (0, o["default"])(e, r.key, r);}}return function (t, n, r) {return n && e(t.prototype, n), r && e(t, r), t;};}();}, function (e, t) {function n(e) {e = e || {}, this.ms = e.min || 100, this.max = e.max || 1e4, this.factor = e.factor || 2, this.jitter = e.jitter > 0 && e.jitter <= 1 ? e.jitter : 0, this.attempts = 0;}e.exports = n, n.prototype.duration = function () {var e = this.ms * Math.pow(this.factor, this.attempts++);if (this.jitter) {var t = Math.random(),n = Math.floor(t * this.jitter * e);e = 0 == (1 & Math.floor(10 * t)) ? e - n : e + n;}return 0 | Math.min(e, this.max);}, n.prototype.reset = function () {this.attempts = 0;}, n.prototype.setMin = function (e) {this.ms = e;}, n.prototype.setMax = function (e) {this.max = e;}, n.prototype.setJitter = function (e) {this.jitter = e;};}, function (e, t, n) {n(158);var r = n(15).Object;e.exports = function (e, t) {return r.create(e, t);};}, function (e, t, n) {n(159);var r = n(15).Object;e.exports = function (e, t, n) {return r.defineProperty(e, t, n);};}, function (e, t, n) {n(160), e.exports = n(15).Object.setPrototypeOf;}, function (e, t, n) {n(163), n(161), n(164), n(165), e.exports = n(15).Symbol;}, function (e, t, n) {n(162), n(166), e.exports = n(57).f("iterator");}, function (e, t) {e.exports = function (e) {if ("function" != typeof e) throw TypeError(e + " is not a function!");return e;};}, function (e, t) {e.exports = function () {};}, function (e, t, n) {var r = n(18),s = n(155),o = n(154);e.exports = function (e) {return function (t, n, i) {var a,c = r(t),u = s(c.length),l = o(i, u);if (e && n != n) {for (; u > l;) {if (a = c[l++], a != a) return !0;}} else for (; u > l; l++) {if ((e || l in c) && c[l] === n) return e || l || 0;}return !e && -1;};};}, function (e, t, n) {var r = n(49),s = n(82),o = n(50);e.exports = function (e) {var t = r(e),n = s.f;if (n) for (var i, a = n(e), c = o.f, u = 0; a.length > u;) {c.call(e, i = a[u++]) && t.push(i);}return t;};}, function (e, t, n) {var r = n(9).document;e.exports = r && r.documentElement;}, function (e, t, n) {var r = n(75);e.exports = Object("z").propertyIsEnumerable(0) ? Object : function (e) {return "String" == r(e) ? e.split("") : Object(e);};}, function (e, t, n) {var r = n(75);e.exports = Array.isArray || function (e) {return "Array" == r(e);};}, function (e, t, n) {"use strict";var r = n(48),s = n(32),o = n(51),i = {};n(16)(i, n(19)("iterator"), function () {return this;}), e.exports = function (e, t, n) {e.prototype = r(i, { next: s(1, n) }), o(e, t + " Iterator");};}, function (e, t) {e.exports = function (e, t) {return { value: t, done: !!e };};}, function (e, t, n) {var r = n(33)("meta"),s = n(17),o = n(13),i = n(14).f,a = 0,c = Object.isExtensible || function () {return !0;},u = !n(31)(function () {return c(Object.preventExtensions({}));}),l = function l(e) {i(e, r, { value: { i: "O" + ++a, w: {} } });},d = function d(e, t) {if (!s(e)) return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;if (!o(e, r)) {if (!c(e)) return "F";if (!t) return "E";l(e);}return e[r].i;},m = function m(e, t) {if (!o(e, r)) {if (!c(e)) return !0;if (!t) return !1;l(e);}return e[r].w;},f = function f(e) {return u && p.NEED && c(e) && !o(e, r) && l(e), e;},p = e.exports = { KEY: r, NEED: !1, fastKey: d, getWeak: m, onFreeze: f };}, function (e, t, n) {var r = n(14),s = n(25),o = n(49);e.exports = n(12) ? Object.defineProperties : function (e, t) {s(e);for (var n, i = o(t), a = i.length, c = 0; a > c;) {r.f(e, n = i[c++], t[n]);}return e;};}, function (e, t, n) {var r = n(18),s = n(81).f,o = {}.toString,i = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],a = function a(e) {try {return s(e);} catch (t) {return i.slice();}};e.exports.f = function (e) {return i && "[object Window]" == o.call(e) ? a(e) : s(r(e));};}, function (e, t, n) {var r = n(13),s = n(156),o = n(52)("IE_PROTO"),i = Object.prototype;e.exports = Object.getPrototypeOf || function (e) {return e = s(e), r(e, o) ? e[o] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? i : null;};}, function (e, t, n) {var r = n(17),s = n(25),o = function o(e, t) {if (s(e), !r(t) && null !== t) throw TypeError(t + ": can't set as prototype!");};e.exports = { set: Object.setPrototypeOf || ("__proto__" in {} ? function (e, t, r) {try {r = n(76)(Function.call, n(80).f(Object.prototype, "__proto__").set, 2), r(e, []), t = !(e instanceof Array);} catch (s) {t = !0;}return function (e, n) {return o(e, n), t ? e.__proto__ = n : r(e, n), e;};}({}, !1) : void 0), check: o };}, function (e, t, n) {var r = n(54),s = n(44);e.exports = function (e) {return function (t, n) {var o,i,a = String(s(t)),c = r(n),u = a.length;return c < 0 || c >= u ? e ? "" : void 0 : (o = a.charCodeAt(c), o < 55296 || o > 56319 || c + 1 === u || (i = a.charCodeAt(c + 1)) < 56320 || i > 57343 ? e ? a.charAt(c) : o : e ? a.slice(c, c + 2) : (o - 55296 << 10) + (i - 56320) + 65536);};};}, function (e, t, n) {var r = n(54),s = Math.max,o = Math.min;e.exports = function (e, t) {return e = r(e), e < 0 ? s(e + t, 0) : o(e, t);};}, function (e, t, n) {var r = n(54),s = Math.min;e.exports = function (e) {return e > 0 ? s(r(e), 9007199254740991) : 0;};}, function (e, t, n) {var r = n(44);e.exports = function (e) {return Object(r(e));};}, function (e, t, n) {"use strict";var r = n(140),s = n(147),o = n(46),i = n(18);e.exports = n(79)(Array, "Array", function (e, t) {this._t = i(e), this._i = 0, this._k = t;}, function () {var e = this._t,t = this._k,n = this._i++;return !e || n >= e.length ? (this._t = void 0, s(1)) : "keys" == t ? s(0, n) : "values" == t ? s(0, e[n]) : s(0, [n, e[n]]);}, "values"), o.Arguments = o.Array, r("keys"), r("values"), r("entries");}, function (e, t, n) {var r = n(26);r(r.S, "Object", { create: n(48) });}, function (e, t, n) {var r = n(26);r(r.S + r.F * !n(12), "Object", { defineProperty: n(14).f });}, function (e, t, n) {var r = n(26);r(r.S, "Object", { setPrototypeOf: n(152).set });}, function (e, t) {}, function (e, t, n) {"use strict";var r = n(153)(!0);n(79)(String, "String", function (e) {this._t = String(e), this._i = 0;}, function () {var e,t = this._t,n = this._i;return n >= t.length ? { value: void 0, done: !0 } : (e = r(t, n), this._i += e.length, { value: e, done: !1 });});}, function (e, t, n) {"use strict";var r = n(9),s = n(13),o = n(12),i = n(26),a = n(84),c = n(148).KEY,u = n(31),l = n(53),d = n(51),m = n(33),f = n(19),p = n(57),g = n(56),y = n(142),h = n(145),v = n(25),b = n(17),M = n(18),T = n(55),S = n(32),k = n(48),w = n(150),C = n(80),I = n(14),_ = n(49),O = C.f,x = I.f,E = w.f,_P = r.Symbol,A = r.JSON,R = A && A.stringify,F = "prototype",j = f("_hidden"),N = f("toPrimitive"),U = {}.propertyIsEnumerable,D = l("symbol-registry"),L = l("symbols"),B = l("op-symbols"),q = Object[F],W = "function" == typeof _P,H = r.QObject,$ = !H || !H[F] || !H[F].findChild,X = o && u(function () {
      return 7 != k(x({}, "a", { get: function get() {return x(this, "a", { value: 7 }).a;} })).a;}) ? function (e, t, n) {var r = O(q, t);r && delete q[t], x(e, t, n), r && e !== q && x(q, t, r);} : x,V = function V(e) {var t = L[e] = k(_P[F]);return t._k = e, t;},J = W && "symbol" == typeof _P.iterator ? function (e) {return "symbol" == typeof e;} : function (e) {return e instanceof _P;},G = function G(e, t, n) {return e === q && G(B, t, n), v(e), t = T(t, !0), v(n), s(L, t) ? (n.enumerable ? (s(e, j) && e[j][t] && (e[j][t] = !1), n = k(n, { enumerable: S(0, !1) })) : (s(e, j) || x(e, j, S(1, {})), e[j][t] = !0), X(e, t, n)) : x(e, t, n);},z = function z(e, t) {v(e);for (var n, r = y(t = M(t)), s = 0, o = r.length; o > s;) {G(e, n = r[s++], t[n]);}return e;},K = function K(e, t) {return void 0 === t ? k(e) : z(k(e), t);},Y = function Y(e) {var t = U.call(this, e = T(e, !0));return !(this === q && s(L, e) && !s(B, e)) && (!(t || !s(this, e) || !s(L, e) || s(this, j) && this[j][e]) || t);},Q = function Q(e, t) {if (e = M(e), t = T(t, !0), e !== q || !s(L, t) || s(B, t)) {var n = O(e, t);return !n || !s(L, t) || s(e, j) && e[j][t] || (n.enumerable = !0), n;}},Z = function Z(e) {for (var t, n = E(M(e)), r = [], o = 0; n.length > o;) {s(L, t = n[o++]) || t == j || t == c || r.push(t);}return r;},ee = function ee(e) {for (var t, n = e === q, r = E(n ? B : M(e)), o = [], i = 0; r.length > i;) {!s(L, t = r[i++]) || n && !s(q, t) || o.push(L[t]);}return o;};W || (_P = function P() {if (this instanceof _P) throw TypeError("Symbol is not a constructor!");var e = m(arguments.length > 0 ? arguments[0] : void 0),t = function t(n) {this === q && t.call(B, n), s(this, j) && s(this[j], e) && (this[j][e] = !1), X(this, e, S(1, n));};return o && $ && X(q, e, { configurable: !0, set: t }), V(e);}, a(_P[F], "toString", function () {return this._k;}), C.f = Q, I.f = G, n(81).f = w.f = Z, n(50).f = Y, n(82).f = ee, o && !n(47) && a(q, "propertyIsEnumerable", Y, !0), p.f = function (e) {return V(f(e));}), i(i.G + i.W + i.F * !W, { Symbol: _P });for (var te = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), ne = 0; te.length > ne;) {f(te[ne++]);}for (var re = _(f.store), se = 0; re.length > se;) {g(re[se++]);}i(i.S + i.F * !W, "Symbol", { "for": function _for(e) {return s(D, e += "") ? D[e] : D[e] = _P(e);}, keyFor: function keyFor(e) {if (!J(e)) throw TypeError(e + " is not a symbol!");for (var t in D) {if (D[t] === e) return t;}}, useSetter: function useSetter() {$ = !0;}, useSimple: function useSimple() {$ = !1;} }), i(i.S + i.F * !W, "Object", { create: K, defineProperty: G, defineProperties: z, getOwnPropertyDescriptor: Q, getOwnPropertyNames: Z, getOwnPropertySymbols: ee }), A && i(i.S + i.F * (!W || u(function () {var e = _P();return "[null]" != R([e]) || "{}" != R({ a: e }) || "{}" != R(Object(e));})), "JSON", { stringify: function stringify(e) {for (var t, n, r = [e], s = 1; arguments.length > s;) {r.push(arguments[s++]);}if (n = t = r[1], (b(t) || void 0 !== e) && !J(e)) return h(t) || (t = function t(e, _t4) {if ("function" == typeof n && (_t4 = n.call(this, e, _t4)), !J(_t4)) return _t4;}), r[1] = t, R.apply(A, r);} }), _P[F][N] || n(16)(_P[F], N, _P[F].valueOf), d(_P, "Symbol"), d(Math, "Math", !0), d(r.JSON, "JSON", !0);}, function (e, t, n) {n(56)("asyncIterator");}, function (e, t, n) {n(56)("observable");}, function (e, t, n) {n(157);for (var r = n(9), s = n(16), o = n(46), i = n(19)("toStringTag"), a = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), c = 0; c < a.length; c++) {var u = a[c],l = r[u],d = l && l.prototype;d && !d[i] && s(d, i, u), o[u] = o.Array;}}, function (e, t, n) {"use strict";function r(e, t) {for (var n = e[i][t]; null != n;) {if (n.kind === a) return n.listener;n = n.next;}return null;}function s(e, t, n) {"function" != typeof n && "object" != typeof n && (n = null);for (var r = null, s = e[i][t]; null != s;) {s.kind === a ? null == r ? e[i][t] = s.next : r.next = s.next : r = s, s = s.next;}null != n && (null == r ? e[i][t] = c(n, a) : r.next = c(n, a));}var o = n(58),i = o.LISTENERS,a = o.ATTRIBUTE,c = o.newNode;t.defineCustomEventTarget = function (e, t) {function n() {e.call(this);}var o = { constructor: { value: n, configurable: !0, writable: !0 } };return t.forEach(function (e) {o["on" + e] = { get: function get() {return r(this, e);}, set: function set(t) {s(this, e, t);}, configurable: !0, enumerable: !0 };}), n.prototype = Object.create(e.prototype, o), n;};}, function (e, t, n) {"use strict";var r = n(58).createUniqueKey,s = r("stop_immediate_propagation_flag"),o = r("canceled_flag"),i = r("original_event"),a = Object.freeze({ stopPropagation: Object.freeze({ value: function value() {var e = this[i];"function" == typeof e.stopPropagation && e.stopPropagation();}, writable: !0, configurable: !0 }), stopImmediatePropagation: Object.freeze({ value: function value() {this[s] = !0;var e = this[i];"function" == typeof e.stopImmediatePropagation && e.stopImmediatePropagation();}, writable: !0, configurable: !0 }), preventDefault: Object.freeze({ value: function value() {this.cancelable === !0 && (this[o] = !0);var e = this[i];"function" == typeof e.preventDefault && e.preventDefault();}, writable: !0, configurable: !0 }), defaultPrevented: Object.freeze({ get: function get() {return this[o];}, enumerable: !0, configurable: !0 }) });t.STOP_IMMEDIATE_PROPAGATION_FLAG = s, t.createEventWrapper = function (e, t) {var n = "number" == typeof e.timeStamp ? e.timeStamp : Date.now(),r = { type: { value: e.type, enumerable: !0 }, target: { value: t, enumerable: !0 }, currentTarget: { value: t, enumerable: !0 }, eventPhase: { value: 2, enumerable: !0 }, bubbles: { value: Boolean(e.bubbles), enumerable: !0 }, cancelable: { value: Boolean(e.cancelable), enumerable: !0 }, timeStamp: { value: n, enumerable: !0 }, isTrusted: { value: !1, enumerable: !0 } };return r[s] = { value: !1, writable: !0 }, r[o] = { value: !1, writable: !0 }, r[i] = { value: e }, "undefined" != typeof e.detail && (r.detail = { value: e.detail, enumerable: !0 }), Object.create(Object.create(e, a), r);};}, function (e, t, n) {"use strict";function r() {}function s(e, t, n) {this.fn = e, this.context = t, this.once = n || !1;}function o() {this._events = new r(), this._eventsCount = 0;}var i = Object.prototype.hasOwnProperty,a = "~";Object.create && (r.prototype = Object.create(null), new r().__proto__ || (a = !1)), o.prototype.eventNames = function () {var e,t,n = [];if (0 === this._eventsCount) return n;for (t in e = this._events) {i.call(e, t) && n.push(a ? t.slice(1) : t);}return Object.getOwnPropertySymbols ? n.concat(Object.getOwnPropertySymbols(e)) : n;}, o.prototype.listeners = function (e, t) {var n = a ? a + e : e,r = this._events[n];if (t) return !!r;if (!r) return [];if (r.fn) return [r.fn];for (var s = 0, o = r.length, i = new Array(o); s < o; s++) {i[s] = r[s].fn;}return i;}, o.prototype.emit = function (e, t, n, r, s, o) {var i = a ? a + e : e;if (!this._events[i]) return !1;var c,u,l = this._events[i],d = arguments.length;if (l.fn) {switch (l.once && this.removeListener(e, l.fn, void 0, !0), d) {case 1:return l.fn.call(l.context), !0;case 2:return l.fn.call(l.context, t), !0;case 3:return l.fn.call(l.context, t, n), !0;case 4:return l.fn.call(l.context, t, n, r), !0;case 5:return l.fn.call(l.context, t, n, r, s), !0;case 6:return l.fn.call(l.context, t, n, r, s, o), !0;}for (u = 1, c = new Array(d - 1); u < d; u++) {c[u - 1] = arguments[u];}l.fn.apply(l.context, c);} else {var m,f = l.length;for (u = 0; u < f; u++) {switch (l[u].once && this.removeListener(e, l[u].fn, void 0, !0), d) {case 1:l[u].fn.call(l[u].context);break;case 2:l[u].fn.call(l[u].context, t);break;case 3:l[u].fn.call(l[u].context, t, n);break;case 4:l[u].fn.call(l[u].context, t, n, r);break;default:if (!c) for (m = 1, c = new Array(d - 1); m < d; m++) {c[m - 1] = arguments[m];}l[u].fn.apply(l[u].context, c);}}}return !0;}, o.prototype.on = function (e, t, n) {var r = new s(t, n || this),o = a ? a + e : e;return this._events[o] ? this._events[o].fn ? this._events[o] = [this._events[o], r] : this._events[o].push(r) : (this._events[o] = r, this._eventsCount++), this;}, o.prototype.once = function (e, t, n) {var r = new s(t, n || this, !0),o = a ? a + e : e;return this._events[o] ? this._events[o].fn ? this._events[o] = [this._events[o], r] : this._events[o].push(r) : (this._events[o] = r, this._eventsCount++), this;}, o.prototype.removeListener = function (e, t, n, s) {var o = a ? a + e : e;if (!this._events[o]) return this;if (!t) return 0 === --this._eventsCount ? this._events = new r() : delete this._events[o], this;var i = this._events[o];if (i.fn) i.fn !== t || s && !i.once || n && i.context !== n || (0 === --this._eventsCount ? this._events = new r() : delete this._events[o]);else {for (var c = 0, u = [], l = i.length; c < l; c++) {(i[c].fn !== t || s && !i[c].once || n && i[c].context !== n) && u.push(i[c]);}u.length ? this._events[o] = 1 === u.length ? u[0] : u : 0 === --this._eventsCount ? this._events = new r() : delete this._events[o];}return this;}, o.prototype.removeAllListeners = function (e) {var t;return e ? (t = a ? a + e : e, this._events[t] && (0 === --this._eventsCount ? this._events = new r() : delete this._events[t])) : (this._events = new r(), this._eventsCount = 0), this;}, o.prototype.off = o.prototype.removeListener, o.prototype.addListener = o.prototype.on, o.prototype.setMaxListeners = function () {return this;}, o.prefixed = a, o.EventEmitter = o, e.exports = o;}, function (e, t, n) {function r(e, t, n) {if (!a(t)) throw new TypeError("iterator must be a function");arguments.length < 3 && (n = this), "[object Array]" === c.call(e) ? s(e, t, n) : "string" == typeof e ? o(e, t, n) : i(e, t, n);}function s(e, t, n) {for (var r = 0, s = e.length; r < s; r++) {u.call(e, r) && t.call(n, e[r], r, e);}}function o(e, t, n) {for (var r = 0, s = e.length; r < s; r++) {t.call(n, e.charAt(r), r, e);}}function i(e, t, n) {for (var r in e) {u.call(e, r) && t.call(n, e[r], r, e);}}var a = n(85);e.exports = r;var c = Object.prototype.toString,u = Object.prototype.hasOwnProperty;}, function (e, t) {(function (t) {var n;n = "undefined" != typeof window ? window : "undefined" != typeof t ? t : "undefined" != typeof self ? self : {}, e.exports = n;}).call(t, function () {return this;}());}, function (e, t, n) {var r = n(174),s = n(170),o = function o(e) {return "[object Array]" === Object.prototype.toString.call(e);};e.exports = function (e) {if (!e) return {};var t = {};return s(r(e).split("\n"), function (e) {var n = e.indexOf(":"),s = r(e.slice(0, n)).toLowerCase(),i = r(e.slice(n + 1));"undefined" == typeof t[s] ? t[s] = i : o(t[s]) ? t[s].push(i) : t[s] = [t[s], i];}), t;};}, function (e, t) {function n() {throw new Error("setTimeout has not been defined");}function r() {throw new Error("clearTimeout has not been defined");}function s(e) {if (l === setTimeout) return setTimeout(e, 0);if ((l === n || !l) && setTimeout) return l = setTimeout, setTimeout(e, 0);try {return l(e, 0);} catch (t) {try {return l.call(null, e, 0);} catch (t) {return l.call(this, e, 0);}}}function o(e) {if (d === clearTimeout) return clearTimeout(e);if ((d === r || !d) && clearTimeout) return d = clearTimeout, clearTimeout(e);try {return d(e);} catch (t) {try {return d.call(null, e);} catch (t) {return d.call(this, e);}}}function i() {g && f && (g = !1, f.length ? p = f.concat(p) : y = -1, p.length && a());}function a() {if (!g) {var e = s(i);g = !0;for (var t = p.length; t;) {for (f = p, p = []; ++y < t;) {f && f[y].run();}y = -1, t = p.length;}f = null, g = !1, o(e);}}function c(e, t) {this.fun = e, this.array = t;}function u() {}var l,d,m = e.exports = {};!function () {try {l = "function" == typeof setTimeout ? setTimeout : n;} catch (e) {l = n;}try {d = "function" == typeof clearTimeout ? clearTimeout : r;} catch (e) {d = r;}}();var f,p = [],g = !1,y = -1;m.nextTick = function (e) {var t = new Array(arguments.length - 1);if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) {t[n - 1] = arguments[n];}p.push(new c(e, t)), 1 !== p.length || g || s(a);}, c.prototype.run = function () {this.fun.apply(null, this.array);}, m.title = "browser", m.browser = !0, m.env = {}, m.argv = [], m.version = "", m.versions = {}, m.on = u, m.addListener = u, m.once = u, m.off = u, m.removeListener = u, m.removeAllListeners = u, m.emit = u, m.prependListener = u, m.prependOnceListener = u, m.listeners = function (e) {return [];}, m.binding = function (e) {throw new Error("process.binding is not supported");}, m.cwd = function () {return "/";}, m.chdir = function (e) {throw new Error("process.chdir is not supported");}, m.umask = function () {return 0;};}, function (e, t) {function n(e) {return e.replace(/^\s*|\s*$/g, "");}t = e.exports = n, t.left = function (e) {return e.replace(/^\s*/, "");}, t.right = function (e) {return e.replace(/\s*$/, "");};}, function (e, t, n) {var r;!function (t) {"use strict";function s() {}function o(e, t) {for (var n = e.length; n--;) {if (e[n].listener === t) return n;}return -1;}function i(e) {return function () {return this[e].apply(this, arguments);};}function a(e) {return "function" == typeof e || e instanceof RegExp || !(!e || "object" != typeof e) && a(e.listener);}var c = s.prototype,u = t.EventEmitter;c.getListeners = function (e) {var t,n,r = this._getEvents();if (e instanceof RegExp) {t = {};for (n in r) {r.hasOwnProperty(n) && e.test(n) && (t[n] = r[n]);}} else t = r[e] || (r[e] = []);return t;}, c.flattenListeners = function (e) {var t,n = [];for (t = 0; t < e.length; t += 1) {n.push(e[t].listener);}return n;}, c.getListenersAsObject = function (e) {var t,n = this.getListeners(e);return n instanceof Array && (t = {}, t[e] = n), t || n;}, c.addListener = function (e, t) {if (!a(t)) throw new TypeError("listener must be a function");var n,r = this.getListenersAsObject(e),s = "object" == typeof t;for (n in r) {r.hasOwnProperty(n) && o(r[n], t) === -1 && r[n].push(s ? t : { listener: t, once: !1 });}return this;}, c.on = i("addListener"), c.addOnceListener = function (e, t) {return this.addListener(e, { listener: t, once: !0 });}, c.once = i("addOnceListener"), c.defineEvent = function (e) {return this.getListeners(e), this;}, c.defineEvents = function (e) {for (var t = 0; t < e.length; t += 1) {this.defineEvent(e[t]);}return this;}, c.removeListener = function (e, t) {var n,r,s = this.getListenersAsObject(e);for (r in s) {s.hasOwnProperty(r) && (n = o(s[r], t), n !== -1 && s[r].splice(n, 1));}return this;}, c.off = i("removeListener"), c.addListeners = function (e, t) {return this.manipulateListeners(!1, e, t);}, c.removeListeners = function (e, t) {return this.manipulateListeners(!0, e, t);}, c.manipulateListeners = function (e, t, n) {var r,s,o = e ? this.removeListener : this.addListener,i = e ? this.removeListeners : this.addListeners;if ("object" != typeof t || t instanceof RegExp) for (r = n.length; r--;) {o.call(this, t, n[r]);} else for (r in t) {t.hasOwnProperty(r) && (s = t[r]) && ("function" == typeof s ? o.call(this, r, s) : i.call(this, r, s));}return this;}, c.removeEvent = function (e) {var t,n = typeof e,r = this._getEvents();if ("string" === n) delete r[e];else if (e instanceof RegExp) for (t in r) {r.hasOwnProperty(t) && e.test(t) && delete r[t];} else delete this._events;return this;}, c.removeAllListeners = i("removeEvent"), c.emitEvent = function (e, t) {var n,r,s,o,i,a = this.getListenersAsObject(e);for (o in a) {if (a.hasOwnProperty(o)) for (n = a[o].slice(0), s = 0; s < n.length; s++) {r = n[s], r.once === !0 && this.removeListener(e, r.listener), i = r.listener.apply(this, t || []), i === this._getOnceReturnValue() && this.removeListener(e, r.listener);}}return this;}, c.trigger = i("emitEvent"), c.emit = function (e) {var t = Array.prototype.slice.call(arguments, 1);return this.emitEvent(e, t);}, c.setOnceReturnValue = function (e) {return this._onceReturnValue = e, this;}, c._getOnceReturnValue = function () {return !this.hasOwnProperty("_onceReturnValue") || this._onceReturnValue;}, c._getEvents = function () {return this._events || (this._events = {});}, s.noConflict = function () {return t.EventEmitter = u, s;}, r = function () {return s;}.call(t, n, t, e), !(void 0 !== r && (e.exports = r));}(this || {});}, function (e, t, n) {var r, s, o;!function (n, i) {"use strict";s = [], r = i, o = "function" == typeof r ? r.apply(t, s) : r, !(void 0 !== o && (e.exports = o));}(this, function (e) {"use strict";return function (t) {function n() {t.arrayAccessForm = t.arrayAccessForm || "none", t.emptyNodeForm = t.emptyNodeForm || "text", t.attributeConverters = t.attributeConverters || [], t.datetimeAccessFormPaths = t.datetimeAccessFormPaths || [], t.arrayAccessFormPaths = t.arrayAccessFormPaths || [], void 0 === t.enableToStringFunc && (t.enableToStringFunc = !0), void 0 === t.skipEmptyTextNodesForObj && (t.skipEmptyTextNodesForObj = !0), void 0 === t.stripWhitespaces && (t.stripWhitespaces = !0), void 0 === t.useDoubleQuotes && (t.useDoubleQuotes = !0), void 0 === t.ignoreRoot && (t.ignoreRoot = !1), void 0 === t.escapeMode && (t.escapeMode = !0), void 0 === t.attributePrefix && (t.attributePrefix = "_"), void 0 === t.selfClosingElements && (t.selfClosingElements = !0), void 0 === t.keepCData && (t.keepCData = !1);}function r() {function e(e) {var t = String(e);return 1 === t.length && (t = "0" + t), t;}"function" != typeof String.prototype.trim && (String.prototype.trim = function () {return this.replace(/^\s+|^\n+|(\s|\n)+$/g, "");}), "function" != typeof Date.prototype.toISOString && (Date.prototype.toISOString = function () {var t = 1e3;return this.getUTCFullYear() + "-" + e(this.getUTCMonth() + 1) + "-" + e(this.getUTCDate()) + "T" + e(this.getUTCHours()) + ":" + e(this.getUTCMinutes()) + ":" + e(this.getUTCSeconds()) + "." + String((this.getUTCMilliseconds() / t).toFixed(3)).slice(2, 5) + "Z";});}function s(e) {var t = e.localName;return null == t && (t = e.baseName), null != t && "" !== t || (t = e.nodeName), t;}function o(e) {return e.prefix;}function i(e) {return "string" == typeof e ? e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;") : e;}function a(e) {return e.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"').replace(/&#x27;/g, "'").replace(/&amp;/g, "&");}function c(e, n, r) {switch (t.arrayAccessForm) {case "property":e[n] instanceof Array ? e[n + "_asArray"] = e[n] : e[n + "_asArray"] = [e[n]];}if (!(e[n] instanceof Array) && t.arrayAccessFormPaths.length > 0) {for (var s = !1, o = 0; o < t.arrayAccessFormPaths.length; o++) {var i = t.arrayAccessFormPaths[o];if ("string" == typeof i) {if (i === r) {s = !0;break;}} else if (i instanceof RegExp) {if (i.test(r)) {s = !0;break;}} else if ("function" == typeof i && i(n, r)) {s = !0;break;}}s && (e[n] = [e[n]]);}}function u(e) {var t = 60,n = e.split(/[-T:+Z]/g),r = new Date(n[0], n[1] - 1, n[2]),s = n[5].split(".");if (r.setHours(n[3], n[4], s[0]), s.length > 1 && r.setMilliseconds(s[1]), n[6] && n[7]) {var o = n[6] * t + Number(n[7]),i = /\d\d-\d\d:\d\d$/.test(e) ? "-" : "+";o = 0 + ("-" === i ? -1 * o : o), r.setMinutes(r.getMinutes() - o - r.getTimezoneOffset());} else e.indexOf("Z", e.length - 1) !== -1 && (r = new Date(Date.UTC(r.getFullYear(), r.getMonth(), r.getDate(), r.getHours(), r.getMinutes(), r.getSeconds(), r.getMilliseconds())));return r;}function l(e, n, r) {if (t.datetimeAccessFormPaths.length > 0) for (var s = r.split(".#")[0], o = 0; o < t.datetimeAccessFormPaths.length; o++) {var i = t.datetimeAccessFormPaths[o];if ("string" == typeof i) {if (i === s) return u(e);} else if (i instanceof RegExp) {if (i.test(s)) return u(e);} else if ("function" == typeof i && i(s)) return u(e);}return e;}function d(e) {for (var n = {}, r = e.childNodes, o = 0; o < r.length; o++) {var i = r.item(o);if (i.nodeType === _.ELEMENT_NODE) {var a = s(i);t.ignoreRoot ? n = f(i, a) : n[a] = f(i, a);}}return n;}function m(e, n) {var r = {};r.__cnt = 0;for (var i = e.childNodes, u = 0; u < i.length; u++) {var d = i.item(u),m = s(d);d.nodeType !== _.COMMENT_NODE && (r.__cnt++, null == r[m] ? (r[m] = f(d, n + "." + m), c(r, m, n + "." + m)) : (r[m] instanceof Array || (r[m] = [r[m]], c(r, m, n + "." + m)), r[m][r[m].length] = f(d, n + "." + m)));}for (var p = 0; p < e.attributes.length; p++) {var g = e.attributes.item(p);r.__cnt++;for (var y = g.value, h = 0; h < t.attributeConverters.length; h++) {var v = t.attributeConverters[h];v.test.call(null, g.name, g.value) && (y = v.convert.call(null, g.name, g.value));}r[t.attributePrefix + g.name] = y;}var b = o(e);return b && (r.__cnt++, r.__prefix = b), r["#text"] && (r.__text = r["#text"], r.__text instanceof Array && (r.__text = r.__text.join("\n")), t.escapeMode && (r.__text = a(r.__text)), t.stripWhitespaces && (r.__text = r.__text.trim()), delete r["#text"], "property" === t.arrayAccessForm && delete r["#text_asArray"], r.__text = l(r.__text, "#text", n + ".#text")), r.hasOwnProperty("#cdata-section") && (r.__cdata = r["#cdata-section"], delete r["#cdata-section"], "property" === t.arrayAccessForm && delete r["#cdata-section_asArray"]), 1 === r.__cnt && r.__text ? r = r.__text : 0 === r.__cnt && "text" === t.emptyNodeForm ? r = "" : r.__cnt > 1 && void 0 !== r.__text && t.skipEmptyTextNodesForObj && (t.stripWhitespaces && "" === r.__text || "" === r.__text.trim()) && delete r.__text, delete r.__cnt, t.keepCData || r.hasOwnProperty("__text") || !r.hasOwnProperty("__cdata") ? (t.enableToStringFunc && (r.__text || r.__cdata) && (r.toString = function () {return (this.__text ? this.__text : "") + (this.__cdata ? this.__cdata : "");}), r) : r.__cdata ? r.__cdata : "";}function f(e, t) {return e.nodeType === _.DOCUMENT_NODE ? d(e) : e.nodeType === _.ELEMENT_NODE ? m(e, t) : e.nodeType === _.TEXT_NODE || e.nodeType === _.CDATA_SECTION_NODE ? e.nodeValue : null;}function p(e, n, r, s) {var o = "<" + (e && e.__prefix ? e.__prefix + ":" : "") + n;if (r) for (var a = 0; a < r.length; a++) {var c = r[a],u = e[c];t.escapeMode && (u = i(u)), o += " " + c.substr(t.attributePrefix.length) + "=", o += t.useDoubleQuotes ? '"' + u + '"' : "'" + u + "'";}return o += s ? " />" : ">";}function g(e, t) {return "</" + (e && e.__prefix ? e.__prefix + ":" : "") + t + ">";}function y(e, t) {return e.indexOf(t, e.length - t.length) !== -1;}function h(e, n) {return !!("property" === t.arrayAccessForm && y(n.toString(), "_asArray") || 0 === n.toString().indexOf(t.attributePrefix) || 0 === n.toString().indexOf("__") || e[n] instanceof Function);}function v(e) {var t = 0;if (e instanceof Object) for (var n in e) {h(e, n) || t++;}return t;}function b(e) {var n = [];if (e instanceof Object) for (var r in e) {r.toString().indexOf("__") === -1 && 0 === r.toString().indexOf(t.attributePrefix) && n.push(r);}return n;}function M(e) {var n = "";return e.__cdata && (n += "<![CDATA[" + e.__cdata + "]]>"), e.__text && (n += t.escapeMode ? i(e.__text) : e.__text), n;}function T(e) {var n = "";return e instanceof Object ? n += M(e) : null !== e && (n += t.escapeMode ? i(e) : e), n;}function S(e, t, n) {var r = "";if (0 === e.length) r += p(e, t, n, !0);else for (var s = 0; s < e.length; s++) {r += k(e[s], t, b(e[s]));}return r;}function k(e, n, r) {var s = "";if (void 0 !== e && null !== e && "" !== e || !t.selfClosingElements) {if ("object" == typeof e) {if ("[object Array]" === Object.prototype.toString.call(e)) s += S(e, n, r);else if (e instanceof Date) s += p(e, n, r, !1), s += e.toISOString(), s += g(e, n);else {var o = v(e);o > 0 || e.__text || e.__cdata ? (s += p(e, n, r, !1), s += w(e), s += g(e, n)) : t.selfClosingElements ? s += p(e, n, r, !0) : (s += p(e, n, r, !1), s += g(e, n));}} else s += p(e, n, r, !1), s += T(e), s += g(e, n);} else s += p(e, n, r, !0);return s;}function w(e) {var t = "",n = v(e);if (n > 0) for (var r in e) {if (!h(e, r)) {var s = e[r],o = b(s);t += k(s, r, o);}}return t += T(e);}function C(t) {if (void 0 === t) return null;if ("string" != typeof t) return null;var n = null,r = null;if (e) n = new e(), r = n.parseFromString(t, "text/xml");else if (window && window.DOMParser) {n = new window.DOMParser();var s = null,o = window.ActiveXObject || "ActiveXObject" in window;if (!o) try {s = n.parseFromString("INVALID", "text/xml").childNodes[0].namespaceURI;} catch (i) {s = null;}try {r = n.parseFromString(t, "text/xml"), null !== s && r.getElementsByTagNameNS(s, "parsererror").length > 0 && (r = null);} catch (i) {r = null;}} else 0 === t.indexOf("<?") && (t = t.substr(t.indexOf("?>") + 2)), r = new ActiveXObject("Microsoft.XMLDOM"), r.async = "false", r.loadXML(t);return r;}var I = "3.1.1";t = t || {}, n(), r();var _ = { ELEMENT_NODE: 1, TEXT_NODE: 3, CDATA_SECTION_NODE: 4, COMMENT_NODE: 8, DOCUMENT_NODE: 9 };this.asArray = function (e) {return void 0 === e || null === e ? [] : e instanceof Array ? e : [e];}, this.toXmlDateTime = function (e) {return e instanceof Date ? e.toISOString() : "number" == typeof e ? new Date(e).toISOString() : null;}, this.asDateTime = function (e) {return "string" == typeof e ? u(e) : e;}, this.xml2dom = function (e) {return C(e);}, this.dom2js = function (e) {return f(e, null);}, this.js2dom = function (e) {var t = this.js2xml(e);return C(t);}, this.xml2js = function (e) {var t = C(e);return null != t ? this.dom2js(t) : null;}, this.js2xml = function (e) {return w(e);}, this.getVersion = function () {return I;};};});}, function (e, t, n) {"use strict";function r(e, t) {for (var n = 0; n < e.length; n++) {t(e[n]);}}function s(e) {for (var t in e) {if (e.hasOwnProperty(t)) return !1;}return !0;}function o(e, t, n) {var r = e;return d(t) ? (n = t, "string" == typeof e && (r = { uri: e })) : r = f(t, { uri: e }), r.callback = n, r;}function i(e, t, n) {return t = o(e, t, n), a(t);}function a(e) {function t() {4 === l.readyState && setTimeout(o, 0);}function n() {var e = void 0;if (e = l.response ? l.response : l.responseText || c(l), M) try {e = JSON.parse(e);} catch (t) {}return e;}function r(e) {return clearTimeout(p), e instanceof Error || (e = new Error("" + (e || "Unknown XMLHttpRequest Error"))), e.statusCode = 0, u(e, T);}function o() {if (!f) {var t;clearTimeout(p), t = e.useXDR && void 0 === l.status ? 200 : 1223 === l.status ? 204 : l.status;var r = T,s = null;return 0 !== t ? (r = { body: n(), statusCode: t, method: y, headers: {}, url: g, rawRequest: l }, l.getAllResponseHeaders && (r.headers = m(l.getAllResponseHeaders()))) : s = new Error("Internal XMLHttpRequest Error"), u(s, r, r.body);}}if ("undefined" == typeof e.callback) throw new Error("callback argument missing");var a = !1,u = function u(t, n, r) {a || (a = !0, e.callback(t, n, r));},l = e.xhr || null;l || (l = e.cors || e.useXDR ? new i.XDomainRequest() : new i.XMLHttpRequest());var d,f,p,g = l.url = e.uri || e.url,y = l.method = e.method || "GET",h = e.body || e.data,v = l.headers = e.headers || {},b = !!e.sync,M = !1,T = { body: void 0, headers: {}, statusCode: 0, method: y, url: g, rawRequest: l };if ("json" in e && e.json !== !1 && (M = !0, v.accept || v.Accept || (v.Accept = "application/json"), "GET" !== y && "HEAD" !== y && (v["content-type"] || v["Content-Type"] || (v["Content-Type"] = "application/json"), h = JSON.stringify(e.json === !0 ? h : e.json))), l.onreadystatechange = t, l.onload = o, l.onerror = r, l.onprogress = function () {}, l.onabort = function () {f = !0;}, l.ontimeout = r, l.open(y, g, !b, e.username, e.password), b || (l.withCredentials = !!e.withCredentials), !b && e.timeout > 0 && (p = setTimeout(function () {if (!f) {f = !0, l.abort("timeout");var e = new Error("XMLHttpRequest timeout");e.code = "ETIMEDOUT", r(e);}}, e.timeout)), l.setRequestHeader) for (d in v) {v.hasOwnProperty(d) && l.setRequestHeader(d, v[d]);} else if (e.headers && !s(e.headers)) throw new Error("Headers cannot be set on an XDomainRequest object");return "responseType" in e && (l.responseType = e.responseType), "beforeSend" in e && "function" == typeof e.beforeSend && e.beforeSend(l), l.send(h || null), l;}function c(e) {try {if ("document" === e.responseType) return e.responseXML;var t = e.responseXML && "parsererror" === e.responseXML.documentElement.nodeName;if ("" === e.responseType && !t) return e.responseXML;} catch (n) {}return null;}function u() {}var l = n(171),d = n(85),m = n(172),f = n(178);e.exports = i, i.XMLHttpRequest = l.XMLHttpRequest || u, i.XDomainRequest = "withCredentials" in new i.XMLHttpRequest() ? i.XMLHttpRequest : l.XDomainRequest, r(["get", "put", "post", "patch", "head", "delete"], function (e) {i["delete" === e ? "del" : e] = function (t, n, r) {return n = o(t, n, r), n.method = e.toUpperCase(), a(n);};});}, function (e, t) {function n() {for (var e = {}, t = 0; t < arguments.length; t++) {var n = arguments[t];for (var s in n) {r.call(n, s) && (e[s] = n[s]);}}return e;}e.exports = n;var r = Object.prototype.hasOwnProperty;}, function (e, t) {},, function (e, t, n) {"use strict";var r = n(7),s = n(90);s(r), e.exports = r;},,,, function (e, t, n) {"use strict";var r = n(7).fn,s = n(1);r.audioToText = function (e) {s.verifyOptions(e, "url", "audio::audioToText"), e.audioToText = s.filterObj(e, "url");var t = this;t.processCallback(e), t.sendCmd("audioToText", e);};}, function (e, t, n) {"use strict";var r = n(7).fn,s = n(1);r.getChatroomAddress = function (e) {s.verifyOptions(e, "chatroomId", "chatroom::getChatroomAddress");var t = this;t.processCallback(e), t.sendCmd("getChatroomAddress", e);};}, function (e, t, n) {"use strict";var r = n(7).fn,s = n(1);r.kick = function (e) {s.verifyOptions(e, "deviceIds", "link::kick"), this.processCallback(e), this.sendCmd("kick", { deviceIds: e.deviceIds.slice(0) }, e.callback);};}, function (e, t, n) {"use strict";var r = n(7).fn;r.clearDB = function (e) {var t = this,n = t.db;t.processCallback(e);var r = e.done;n.enable ? n.clear().then(r, r) : r();}, r.removeDB = function (e) {var t = this,n = t.db;t.processCallback(e);var r = e.done;n.enable ? n.destroy().then(r, r) : r();};}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s(e) {return "object" === ("undefined" == typeof e ? "undefined" : (0, i["default"])(e)) && (e.msgEventSubscribes ? e = e.msgEventSubscribes : e.msgEventSubscribe ? e = e.msgEventSubscribe : e.accounts ? e = e.accounts : e.msgEvent && (e = e.msgEvent, e.time && (e.time = +e.time)), 1 === e.sync ? e.sync = !0 : 0 === e.sync && (e.sync = !1)), e;}var o = n(4),i = r(o),a = n(2).Promise,c = n(7).fn,u = n(1),l = n(233),d = n(234);c.batchSendEventsCmds = function (e, t, n) {var r = this,o = 100,i = u.dropArrayDuplicates(t.accounts);i = u.reshape2d(i, o);var c = [];i.forEach(function (n) {c.push(new a(function (o, i) {var a = u.simpleClone(t);a.accounts = n, r.sendCmdWithResp(e, a, function (e, t) {e ? i(e) : o(s(t));});}));}), a.all(c).then(function (e) {var t = null;if (e.length > 0) if (e[0].msgEventSubscribe) {var r = e[0].msgEventSubscribe;r = s(r);var o = [];e.forEach(function (e) {o = o.concat(e.accounts);}), t = { accounts: o, msgEventSubscribe: r };} else t = [], e.forEach(function (e) {t = t.concat(e);});n(null, t);}, function (e) {n(e, null);});}, c.publishEvent = function (e) {var t = this,n = new l(e);n = n.assembleEvent(), t.processCallback(e), this.sendCmdWithResp("publishEvent", { msgEvent: n }, function (t, n) {t || (n = s(n)), e.callback(t, n);});}, c.subscribeEvent = function (e) {var t = this;u.verifyOptions(e, "accounts", "event::subscribeEvent");var n = new d(e);u.verifyParamType("accounts", e.accounts, "array", "event::subscribeEvent"), t.processCallback(e), n = n.assembleEvent(), this.batchSendEventsCmds("subscribeEvent", { msgEventSubscribe: n, accounts: e.accounts }, function (t, n) {!t && n && (n = { failedAccounts: n }), e.callback(t, n);});}, c.unSubscribeEventsByAccounts = function (e) {var t = this;u.verifyOptions(e, "accounts", "event::unSubscribeEventsByAccounts"), u.verifyParamType("accounts", e.accounts, "array", "event::unSubscribeEventsByAccounts");var n = new d(e);n = n.assembleEvent(), t.processCallback(e), this.batchSendEventsCmds("unSubscribeEventsByAccounts", { msgEventSubscribe: n, accounts: e.accounts }, function (t, n) {!t && n && (n = { failedAccounts: n }), e.callback(t, n);});}, c.unSubscribeEventsByType = function (e) {var t = this,n = new d(e);n = n.assembleEvent(), t.processCallback(e), this.sendCmdWithResp("unSubscribeEventsByType", { msgEventSubscribe: n }, function (t, n) {e.callback(t);});}, c.querySubscribeEventsByAccounts = function (e) {var t = this;u.verifyOptions(e, "accounts", "event::querySubscribeEventsByAccounts"), u.verifyParamType("accounts", e.accounts, "array", "event::querySubscribeEventsByAccounts");var n = new d(e);n = n.assembleEvent(), t.processCallback(e), this.batchSendEventsCmds("querySubscribeEventsByAccounts", { msgEventSubscribe: n, accounts: e.accounts }, function (t, n) {!t && n && (n = { msgEventSubscribes: n }), e.callback(t, n);});}, c.querySubscribeEventsByType = function (e) {var t = this,n = new d(e);n = n.assembleEvent(), t.processCallback(e), this.sendCmdWithResp("querySubscribeEventsByType", { msgEventSubscribe: n }, function (t, n) {t || (n = { msgEventSubscribes: s(n) }), e.callback(t, n);});};}, function (e, t, n) {"use strict";var r = n(7).fn,s = n(1),o = s.notundef,i = n(107);r.friendRequest = function (e) {s.verifyOptions(e, "type account", "friend::friendRequest"), s.verifyParamValid("type", e.type, i.validTypes(), "friend::friendRequest"), this.processPs(e), this.processCallback(e);var t = { account: e.account, type: i.getByteFromType(e.type), ps: e.ps };o(e.idServer) && (t.idServer = e.idServer), this.sendCmd("friendRequest", t, e.callback);}, r.addFriend = function (e) {e.type = "addFriend", this.friendRequest(e);}, r.applyFriend = function (e) {e.type = "applyFriend", this.friendRequest(e);}, r.passFriendApply = function (e) {s.verifyOptions(e, "idServer", "friend::passFriendApply"), e.type = "passFriendApply", this.friendRequest(e);}, r.rejectFriendApply = function (e) {s.verifyOptions(e, "idServer", "friend::rejectFriendApply"), e.type = "rejectFriendApply", this.friendRequest(e);}, r.deleteFriend = function (e) {s.verifyOptions(e, "account", "friend::deleteFriend"), this.processCallback(e), this.sendCmd("deleteFriend", { account: e.account }, e.callback);}, r.updateFriend = function (e) {this.processCallback(e);var t = new i(e);this.sendCmd("updateFriend", { friend: t, single: !0 }, e.callback);}, r.getFriends = function (e) {function t() {n.sendCmd("getFriends", { timetag: o, NOTSTORE: "timetag" }, e.callback);}var n = this,r = n.db,o = 0;s.verifyOptions(e), n.processCallback(e), r.enable ? r.getFriendsTimetag().then(function (e) {o = e, t();}, t) : t();};}, function (e, t, n) {"use strict";var r = n(7).fn,s = n(1),o = s.isArray,i = n(34);r.mergeObjArray = function (e, t, n) {return e || (e = []), t ? (o(t) || (t = [t]), t.length ? (n = n || {}, s.mergeObjArray(e, t, n)) : e) : e;}, r.cutObjArray = function (e, t, n) {return e && t ? (o(t) || (t = [t]), t.length ? (n = n || {}, s.cutObjArray(e, t, n)) : e) : e;}, r.mergeLoginPorts = function (e, t) {return this.mergeObjArray(e, t, { keyPath: "deviceId" });}, r.cutLoginPorts = function (e, t) {return this.cutObjArray(e, t, { keyPath: "deviceId", sortPath: "type" });}, r.mergeRelations = function (e, t) {return this.mergeObjArray(e, t, { keyPath: "account" });}, r.cutRelations = function (e, t) {return this.cutObjArray(e, t, { keyPath: "account" });}, r.findRelation = function (e, t) {return s.findObjInArray(e, { keyPath: "account", value: t });}, r.mergeFriends = function (e, t) {return this.mergeObjArray(e, t, { keyPath: "account" });}, r.cutFriends = function (e, t) {return this.cutObjArray(e, t, { keyPath: "account" });}, r.cutFriendsByAccounts = function (e, t) {o(t) || (t = [t]);var n = t.map(function (e) {return { account: e };});return this.cutFriends(e, n);}, r.findFriend = function (e, t) {return s.findObjInArray(e, { keyPath: "account", value: t });}, r.mergeUsers = function (e, t) {return this.mergeObjArray(e, t, { keyPath: "account" });}, r.findUser = function (e, t) {return s.findObjInArray(e, { keyPath: "account", value: t });}, r.mergeTeams = function (e, t) {return this.mergeObjArray(e, t, { keyPath: "teamId" });}, r.cutTeams = function (e, t) {return this.cutObjArray(e, t, { keyPath: "teamId" });}, r.findTeam = function (e, t) {return s.findObjInArray(e, { keyPath: "teamId", value: t });}, r.assembleTeamOwner = i.assembleOwner, r.assembleTeamMembers = i.assembleMembers, r.genTeamMemberId = i.genId, r.mergeTeamMembers = function (e, t) {return this.mergeObjArray(e, t);}, r.cutTeamMembers = function (e, t) {return this.cutObjArray(e, t);}, r.cutTeamMembersByAccounts = function (e, t, n) {
      o(n) || (n = [n]);var r = i.assembleMembers({ teamId: t }, n);return this.cutTeamMembers(e, r);}, r.findTeamMember = function (e, t) {return s.findObjInArray(e, { keyPath: "id", value: t });}, r.mergeSessions = function (e, t) {return this.mergeObjArray(e, t, { sortPath: "updateTime", desc: !0 });}, r.cutSessions = function (e, t) {return this.cutObjArray(e, t);}, r.cutSessionsByIds = function (e, t) {o(t) || (t = [t]);var n = t.map(function (e) {return { id: e };});return this.cutSessions(e, n);}, r.findSession = function (e, t) {return s.findObjInArray(e, { keyPath: "id", value: t });}, r.mergeMsgs = function (e, t) {return this.mergeObjArray(e, t, { keyPath: "idClient", sortPath: "time" });}, r.cutMsgs = function (e, t) {return this.cutObjArray(e, t, { keyPath: "idClient" });}, r.cutMsgsByIdClients = function (e, t) {o(t) || (t = [t]);var n = t.map(function (e) {return { idClient: e };});return this.cutMsgs(e, n);}, r.findMsg = function (e, t) {return s.findObjInArray(e, { keyPath: "idClient", value: t });}, r.mergeSysMsgs = function (e, t) {return this.mergeObjArray(e, t, { keyPath: "idServer", desc: !0 });}, r.cutSysMsgs = function (e, t) {return this.cutObjArray(e, t, { keyPath: "idServer" });}, r.cutSysMsgsByIdServers = function (e, t) {o(t) || (t = [t]);var n = t.map(function (e) {return { idServer: e };});return this.cutSysMsgs(e, n);}, r.findSysMsg = function (e, t) {return s.findObjInArray(e, { keyPath: "idServer", value: t });};}, function (e, t, n) {"use strict";var r = n(7).fn,s = n(1),o = s.undef,i = s.notundef,a = n(21),c = n(38),u = n(39),l = n(6);r.beforeSendMsg = function (e) {var t = this,n = t.protocol,r = e.msg;r.to === t.account && (r.fromDeviceId = a.deviceId), r.userUpdateTime = n.myInfo && n.myInfo.updateTime;var s;switch (r.getScene()) {case "p2p":s = "sendMsg";break;case "team":s = "sendTeamMsg";}e.filter && (s = "sendFilterMsg", r.filter = !0), e.cmd = s;}, r.afterSendMsg = function (e) {var t = e.rtnMsg,n = c.genSessionByMsg(t);this.protocol.onUpdateSession(n);}, r.beforeForwardMsg = function (e) {s.verifyOptions(e, "msg scene to", "msg::beforeForwardMsg"), e.msg.scene = e.scene, e.msg.to = e.to;}, r.markMsgRead = function (e) {var t = this,n = t.protocol;return !e || t.db.enable || n.options.autoMarkRead ? void t.logger.warn("api::markMsgRead: 不需要标记消息为已收到 (没有消息, 或者启用了数据库, 或者启用了自动标记已收到)") : void n.markMsgRead(e, !0);}, r.sendMsgReceipt = function (e) {var t = this;if (s.verifyOptions(e), t.processCallback(e), !e.msg) return void e.done();var n = "target idClient time";s.verifyOptions(e, "msg", "msg::sendMsgReceipt");var r = e.msg;s.verifyOptions(r, n, !0, "msg.", "msg::sendMsgReceipt"), t.protocol.shouldSendMsgReceipt(r) ? t.sendCmd("sendMsgReceipt", { msgReceipt: { to: r.target, idClient: r.idClient, time: r.time } }, e.callback) : e.done();}, r.isMsgRemoteRead = function (e) {return this.protocol.isMsgRemoteRead(e);}, r.deleteMsg = function (e) {var t = this;s.verifyOptions(e, "msg", "msg::deleteMsg");var n = e.msg;if ("team" !== n.scene && "out" !== n.flow || "success" !== n.status || n.from === n.to || n.isLocal) return e.done(l.newParamError("只能删除自己发送给别人的, 并且发送成功的非本地消息", { callFunc: "msg::deleteMsg" }), e);s.verifyOptions(n, ["scene", "to", "from", "time", "idClient", "idServer"], !0, "msg.", "msg::deleteMsg"), s.verifyParamValid("msg.scene", n.scene, t.message.validScenes, "msg::deleteMsg");var r = s.simpleClone(n);this.processPs(r), this.processCallback(e), i(e.opeAccount) ? r.opeAccount = e.opeAccount : o(r.opeAccount) && (r.opeAccount = r.from), "p2p" === r.scene ? r.type = "deleteMsgP2p" : r.type = "deleteMsgTeam", r.deletedIdClient = r.idClient, r.deletedIdServer = r.idServer, r = new u(r), t.sendCmd("deleteMsg", { sysMsg: r, msg: n }, e.callback);}, r.getHistoryMsgs = function (e) {var t = this;s.verifyOptions(e, "scene to", "msg::getHistoryMsgs"), s.verifyParamValid("scene", e.scene, t.message.validScenes, "msg::getHistoryMsgs"), "undefined" == typeof e.beginTime && (e.beginTime = 0), s.verifyParamType("beginTime", e.beginTime, "number", "msg::getHistoryMsgs"), "undefined" == typeof e.endTime && (e.endTime = 0), s.verifyParamType("endTime", e.endTime, "number", "msg::getHistoryMsgs"), "undefined" != typeof e.lastMsgId && null !== e.lastMsgId || (e.lastMsgId = "0"), "undefined" == typeof e.limit && (e.limit = 100), s.verifyParamType("limit", e.limit, "number", "msg::getHistoryMsgs"), s.verifyParamMax("limit", e.limit, 100, "msg::getHistoryMsgs"), i(e.reverse) ? s.verifyParamType("reverse", e.reverse, "boolean", "msg::getHistoryMsgs") : e.reverse = !1, i(e.asc) ? s.verifyParamType("asc", e.asc, "boolean", "msg::getHistoryMsgs") : e.asc = !1, t.processCallback(e), e.asc && (e.cbaop = function (e, t) {e || (t.msgs = t.msgs.reverse());});var n;switch (e.scene) {case "p2p":n = "getHistoryMsgs";break;case "team":n = "getTeamHistoryMsgs";}var r = { scene: e.scene, to: e.to, beginTime: e.beginTime, endTime: e.endTime, lastMsgId: e.lastMsgId, limit: e.limit, reverse: e.reverse };t.sendCmd(n, r, e.callback);}, r.searchHistoryMsgs = function (e) {var t = this;s.verifyOptions(e, "scene to keyword", "msg::searchHistoryMsgs"), s.verifyParamValid("scene", e.scene, t.message.validScenes, "msg::searchHistoryMsgs"), "undefined" == typeof e.beginTime && (e.beginTime = 0), s.verifyParamType("beginTime", e.beginTime, "number", "msg::searchHistoryMsgs"), "undefined" == typeof e.endTime && (e.endTime = 0), s.verifyParamType("endTime", e.endTime, "number", "msg::searchHistoryMsgs"), "undefined" == typeof e.limit && (e.limit = 100), s.verifyParamType("limit", e.limit, "number", "msg::searchHistoryMsgs"), s.verifyParamMax("limit", e.limit, 100, "msg::searchHistoryMsgs"), i(e.reverse) ? s.verifyParamType("reverse", e.reverse, "boolean", "msg::searchHistoryMsgs") : e.reverse = !1, i(e.asc) ? s.verifyParamType("asc", e.asc, "boolean", "msg::searchHistoryMsgs") : e.asc = !1, t.processCallback(e), e.asc && (e.cbaop = function (e, t) {e || (t.msgs = t.msgs.reverse());});var n;switch (e.scene) {case "p2p":n = "searchHistoryMsgs";break;case "team":n = "searchTeamHistoryMsgs";}var r = s.filterObj(e, "scene to beginTime endTime keyword limit reverse");t.sendCmd(n, r, e.callback);}, r.getLocalMsgs = function (e) {function t() {e.msgs = c, e.done(n, e);}var n,r = this,a = r.db,c = [];s.verifyOptions(e);var u = !1;i(e.start) && (u = !0, s.verifyParamType("start", e.start, "number", "msg::getLocalMsgs"));var l = !1;i(e.end) && (l = !0, s.verifyParamType("end", e.end, "number", "msg::getLocalMsgs")), u && l && e.end <= e.start && s.onParamError("参数 end 必须晚于 start"), o(e.limit) && (e.limit = 100), s.verifyParamType("limit", e.limit, "number", "msg::getLocalMsgs"), s.verifyParamMin("limit", e.limit, 1, "msg::getLocalMsgs"), r.processCallback(e), a.enable ? a.getMsgs(e).then(function (e) {c = e, t();}, function (e) {n = e, t();}) : t();}, r.getLocalMsgByIdClient = function (e) {function t() {e.msg = i, e.done(n, e);}var n,r = this,o = r.db,i = null;s.verifyOptions(e, "idClient", "msg::getLocalMsgByIdClient"), r.processCallback(e), o.enable ? o.getMsgByIdClient(e.idClient).then(function (e) {e && (i = e), t();}, function (e) {n = e, t();}) : t();}, r.getLocalMsgsByIdClients = function (e) {function t() {e.msgs = i, e.done(n, e);}var n,r = this,o = r.db,i = [];s.verifyOptions(e, "idClients", "msg::getLocalMsgByIdClient"), s.verifyParamType("idClients", e.idClients, "array", "msg::getLocalMsgByIdClient"), r.processCallback(e), o.enable ? o.getMsgsByIdClients(e.idClients).then(function (e) {i = e.filter(function (e) {return !!e;}), t();}, function (e) {n = e, t();}) : t();}, r.updateLocalMsg = function (e) {function t() {e.msg = i, e.done(n, e);}var n,r = this,o = r.db,i = null;if (s.verifyOptions(e, "idClient", "msg::updateLocalMsg"), r.processCallback(e), o.enable) {var a = s.filterObj(e, "idClient localCustom");o.updateMsg(a).then(function (e) {i = e, t();}, function (e) {n = e, t();});} else t();}, r.deleteLocalMsg = function (e) {function t() {e.done(n, e);}var n,r = this;s.verifyOptions(e, "msg", "msg::deleteLocalMsg");var o = e.msg;s.verifyOptions(o, "idClient sessionId", !0, "msg.", "msg::deleteLocalMsg"), r.processCallback(e), r.protocol.deleteLocalMsg(o).then(t, function (e) {n = e, t();});}, r.deleteLocalMsgsBySession = function (e) {function t() {e.done(n, e);}var n,r = this,o = r.db;s.verifyOptions(e, "scene to", "msg::deleteLocalMsgsBySession"), s.verifyParamValid("scene", e.scene, r.message.validScenes, "msg::deleteLocalMsgsBySession"), e.sessionId = e.scene + "-" + e.to, r.processCallback(e), o.enable ? o.deleteMsgsBySessionId(e.sessionId).then(function () {t();}, function (e) {n = e, t();}) : t();}, r.deleteAllLocalMsgs = function (e) {function t() {e.done(n, e);}var n,r = this,s = r.db;r.processCallback(e), s.enable && s.deleteAllMsgs().then(function () {t();}, function (e) {n = e, t();});};}, function (e, t) {"use strict";}, function (e, t) {"use strict";}, function (e, t, n) {"use strict";var r = n(7).fn,s = n(92),o = n(1),i = o.undef;r.getPushNotificationMultiportConfig = function () {return this.protocol.getPushNotificationMultiportConfig();}, r.updatePushNotificationMultiportConfig = function (e) {o.verifyOptions(e), i(e.shouldPushNotificationWhenPCOnline) && (e.shouldPushNotificationWhenPCOnline = !0), e.donnop = new s(e), this.processCallback(e), this.sendCmd("updateDonnop", e);};}, function (e, t, n) {"use strict";var r = n(7).fn,s = n(1);r.markInBlacklist = function (e) {s.verifyOptions(e, "account isAdd", "relation::markInBlacklist"), s.verifyParamType("isAdd", e.isAdd, "boolean", "relation::markInBlacklist"), this.processCallback(e), this.sendCmd("markInBlacklist", { account: e.account, isAdd: e.isAdd }, e.callback);}, r.addToBlacklist = function (e) {return e.isAdd = !0, this.markInBlacklist(e);}, r.removeFromBlacklist = function (e) {return e.isAdd = !1, this.markInBlacklist(e);}, r.markInMutelist = function (e) {s.verifyOptions(e, "account", "relation::markInMutelist"), s.verifyParamType("isAdd", e.isAdd, "boolean", "relation::markInMutelist"), this.processCallback(e), this.sendCmd("markInMutelist", { account: e.account, isAdd: e.isAdd }, e.callback);}, r.addToMutelist = function (e) {return e.isAdd = !0, this.markInMutelist(e);}, r.removeFromMutelist = function (e) {return e.isAdd = !1, this.markInMutelist(e);}, r.getRelations = function (e) {function t() {n.sendCmd("getRelations", { timetag: o, NOTSTORE: "timetag" }, e.callback);}var n = this,r = n.db,o = 0;e = s.verifyOptions(e), n.processCallback(e), r.enable ? r.getRelationsTimetag().then(function (e) {o = e, t();}, t) : t();};}, function (e, t, n) {"use strict";var r = n(7).fn;r.getRobots = function (e) {e = e || {}, e.type = "getRobots", this.processCallback(e), this.sendCmd("sync", { sync: { robots: 0 } }, e.callback);};}, function (e, t, n) {"use strict";var r = n(7).fn,s = n(1),o = s.undef,i = s.notundef;r.setCurrSession = function (e) {var t = this;t.resetSessionUnread(e), t.protocol.setCurrSession(e);}, r.resetAllSessionUnread = function () {var e = this;for (var t in e.protocol.sessionSet) {e.protocol.sessionSet[t].unread > 0 && e.resetSessionUnread(t);}}, r.resetSessionUnread = function (e) {var t = this;if (t.protocol.resetSessionUnread(e), t.options.syncSessionUnread) {var n = t.protocol.findSession(e);if (!n) return void t.logger.warn("api::resetSessionUnread: session undefined " + e);if (!n.lastMsg) return void t.logger.warn("api::resetSessionUnread: session.lastMsg undefined " + e);if (!n.scene || !n.to) return void t.logger.warn("api::resetSessionUnread: session.scene|to undefined " + e);var r = n.lastMsg.time;if (n && n.ack && n.ack >= r) return void t.logger.warn("api::resetSessionUnread: session ack not needs " + e);var s = { scene: "p2p" === n.scene ? 0 : 1, to: n.to, timetag: r };t.sendCmd("markSessionAck", s);}}, r.resetCurrSession = function () {this.protocol.setCurrSession("");}, r.insertLocalSession = function (e) {function t() {e.session = r, e.done(n, e);}var n,r,o = this;s.verifyOptions(e, "scene to", "scene::insertLocalSession"), s.verifyParamValid("scene", e.scene, o.message.validScenes, "scene::insertLocalSession"), o.processCallback(e), o.protocol.insertLocalSession(e).then(function (e) {r = e, t();}, function (e) {n = e, t();});}, r.getLocalSessions = function (e) {function t() {e.sessions = c, e.done(n, e);}var n,r = this,a = r.db,c = [];s.verifyOptions(e), o(e.limit) && (e.limit = 100), s.verifyParamType("limit", e.limit, "number", "scene::getLocalSessions"), s.verifyParamMax("limit", e.limit, 100, "scene::getLocalSessions"), i(e.reverse) ? s.verifyParamType("reverse", e.reverse, "boolean", "scene::getLocalSessions") : e.reverse = !1, r.processCallback(e), a.enable ? a.getSessions(e).then(function (e) {c = e, r.protocol.mergeSessions(c), t();}, function (e) {n = e, t();}) : t();}, r.updateLocalSession = function (e) {function t() {r.protocol.onUpdateSession(i), e.session = i, e.done(n, e);}var n,r = this,o = r.db;s.verifyOptions(e, "id", "scene::updateLocalSession"), r.processCallback(e);var i = s.filterObj(e, "id localCustom");o.enable ? o.updateSession(i).then(function (e) {i = e, t();}, function (e) {n = e, t();}) : t();}, r.deleteLocalSession = function (e) {function t() {e.done(n, e);}var n,r = this,o = r.db;s.verifyOptions(e, "id", "session::deleteLocalSession"), r.processCallback(e), o.enable ? o.deleteSession(e.id).then(function () {r.protocol.deleteLocalSession(e.id), t();}, function (e) {n = e, t();}) : t();}, r.deleteSession = function (e) {s.verifyOptions(e, "scene to", "session::deleteSession"), this.processCallback(e), e.sessions = [{ scene: e.scene, to: e.to }], this.deleteSessions(e);}, r.deleteSessions = function (e) {s.verifyOptions(e, "sessions", "session::deleteSessions"), s.verifyParamType("sessions", e.sessions, "array", "session::deleteSessions"), e.sessions.forEach(function (e, t) {s.verifyOptions(e, "scene to", !0, "sessions[" + t + "].", "session::deleteSessions");}), this.processCallback(e), this.sendCmd("deleteSessions", { sessions: e.sessions.map(function (e) {return e.scene + "|" + e.to;}) }, e.callback);};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(7).fn,o = n(1),i = o.undef,a = o.notundef,c = n(39);s.markSysMsgRead = function (e) {function t() {e.done(n, e);}var n,s = this,i = s.db,a = r.resolve(),c = s.protocol;o.verifyOptions(e, "sysMsgs", "sysmsg::markSysMsgRead");var u = e.sysMsgs;o.isArray(u) || (u = [u]), i.enable ? a = i.markSysMsgRead(u).then(function (e) {u = e, c.onUpdateSysMsg(e);}) : (u = u.filter(function (e) {return !e.read;}), u.length && (c.options.autoMarkRead || c.markSysMsgRead(u, !0), u.forEach(function (e) {e.read = !0;}), c.onUpdateSysMsg(u))), a.then(function () {return c.reduceSysMsgUnread(u);}).then(t, function (e) {n = e, t();});}, s.sendCustomSysMsg = function (e) {var t = this;o.verifyOptions(e, "scene to content", "sysmsg::sendCustomSysMsg"), o.verifyParamValid("scene", e.scene, t.message.validScenes, "sysmsg::sendCustomSysMsg"), t.processCallback(e), "p2p" === e.scene ? e.type = "customP2p" : e.type = "customTeam", e.sysMsg = new c(e);var n = "sendCustomSysMsg";return e.filter && (n = "sendFilterCustomSysMsg"), t.sendCmd(n, { sysMsg: e.sysMsg, single: !0 }, e.callback), t.formatReturnSysMsg(e.sysMsg);}, s.formatReturnSysMsg = function (e) {var t = this;return e = o.copy(e), t.protocol.completeSysMsg(e), e.status = "sending", e = c.reverse(e);}, s.getLocalSysMsgs = function (e) {function t() {e.sysMsgs = u, e.done(n, e);}var n,r = this,s = r.db,u = [];o.verifyOptions(e), e.category && o.verifyParamValid("category", e.category, c.validCategories, "sysmsg::getLocalSysMsgs"), e.type && o.verifyParamValid("type", e.type, c.validTypes, "sysmsg::getLocalSysMsgs"), i(e.limit) && (e.limit = 100), o.verifyParamType("limit", e.limit, "number", "sysmsg::getLocalSysMsgs"), o.verifyParamMax("limit", e.limit, 100, "sysmsg::getLocalSysMsgs"), a(e.reverse) ? o.verifyParamType("reverse", e.reverse, "boolean", "sysmsg::getLocalSysMsgs") : e.reverse = !1, r.processCallback(e), s.enable ? s.getSysMsgs(e).then(function (e) {u = e, t();}, function (e) {n = e, t();}) : t();}, s.updateLocalSysMsg = function (e) {function t() {e.sysMsg = i, e.done(n, e);}var n,r = this,s = r.db,i = null;if (o.verifyOptions(e, "idServer", "sysmsg::updateLocalSysMsg"), r.processCallback(e), s.enable) {var a = o.filterObj(e, "idServer state localCustom");s.updateSysMsg(a).then(function (e) {i = e, t();}, function (e) {n = e, t();});} else t();}, s.deleteLocalSysMsg = function (e) {function t() {e.done(n, e);}var n,r = this,s = r.db;o.verifyOptions(e, "idServer", "sysmsg::deleteLocalSysMsg"), r.processCallback(e), s.enable ? s.deleteSysMsg(e.idServer).then(function () {t();}, function (e) {n = e, t();}) : t();}, s.deleteAllLocalSysMsgs = function (e) {function t() {r.protocol.onUpdateSysMsgUnread({}), e.done(n, e);}var n,r = this,s = r.db;r.processCallback(e), s.enable && s.deleteAllSysMsgs().then(function () {t();}, function (e) {n = e, t();});};}, function (e, t, n) {"use strict";var r = n(7).fn,s = n(1),o = s.undef,i = n(40),a = n(34);r.createTeam = function (e) {s.verifyOptions(e, "type name", "team::createTeam"), o(e.accounts) ? e.accounts = [] : s.verifyParamType("accounts", e.accounts, "array", "team::createTeam"), e.action = "create", this.processPs(e), this.processCallback(e), e.team = new i(e);var t = { team: e.team, accounts: e.accounts.slice(0), ps: e.ps };this.sendCmd("createTeam", t, e.callback);}, r.updateTeam = function (e) {s.verifyOptions(e, "teamId", "team::updateTeam"), e.action = "update", this.processCallback(e), e.team = new i(e), this.sendCmd("updateTeam", { team: e.team, single: !0 }, e.callback);}, r.addTeamMembers = function (e) {s.verifyOptions(e, "teamId accounts", "team::addTeamMembers"), s.verifyParamType("accounts", e.accounts, "array", "team::addTeamMembers"), this.processPs(e), this.processCallback(e);var t = { teamId: e.teamId, accounts: e.accounts.slice(0), ps: e.ps };this.sendCmd("addTeamMembers", t, e.callback);}, r.removeTeamMembers = function (e) {s.verifyOptions(e, "teamId accounts", "team::removeTeamMembers"), s.verifyParamType("accounts", e.accounts, "array", "team::removeTeamMembers"), this.processCallback(e);var t = { teamId: e.teamId, accounts: e.accounts.slice(0) };this.sendCmd("removeTeamMembers", t, e.callback);}, r.acceptTeamInvite = function (e) {s.verifyOptions(e, "idServer teamId from", "team::acceptTeamInvite"), this.processCallback(e);var t = { idServer: e.idServer, teamId: e.teamId, from: e.from };this.sendCmd("acceptTeamInvite", t, e.callback);}, r.rejectTeamInvite = function (e) {s.verifyOptions(e, "idServer teamId from", "team::rejectTeamInvite"), this.processPs(e), this.processCallback(e);var t = { idServer: e.idServer, teamId: e.teamId, from: e.from, ps: e.ps };this.sendCmd("rejectTeamInvite", t, e.callback);}, r.applyTeam = function (e) {s.verifyOptions(e, "teamId", "team::applyTeam"), this.processPs(e), this.processCallback(e);var t = { teamId: e.teamId, ps: e.ps };this.sendCmd("applyTeam", t, e.callback);}, r.passTeamApply = function (e) {s.verifyOptions(e, "idServer teamId from", "team::passTeamApply"), this.processCallback(e);var t = { idServer: e.idServer, teamId: e.teamId, from: e.from };this.sendCmd("passTeamApply", t, e.callback);}, r.rejectTeamApply = function (e) {s.verifyOptions(e, "idServer teamId from", "team::rejectTeamApply"), this.processPs(e), this.processCallback(e);var t = { idServer: e.idServer, teamId: e.teamId, from: e.from, ps: e.ps };this.sendCmd("rejectTeamApply", t, e.callback);}, r.addTeamManagers = function (e) {s.verifyOptions(e, "teamId accounts", "team::addTeamManagers"), s.verifyParamType("accounts", e.accounts, "array", "team::addTeamManagers"), this.processCallback(e);var t = { teamId: e.teamId, accounts: e.accounts.slice(0) };this.sendCmd("addTeamManagers", t, e.callback);}, r.removeTeamManagers = function (e) {s.verifyOptions(e, "teamId accounts", "team::removeTeamManagers"), s.verifyParamType("accounts", e.accounts, "array", "team::removeTeamManagers"), this.processCallback(e);var t = { teamId: e.teamId, accounts: e.accounts.slice(0) };this.sendCmd("removeTeamManagers", t, e.callback);}, r.updateInfoInTeam = function (e) {s.verifyOptions(e, "teamId", "team::updateInfoInTeam"), this.processCallback(e), this.sendCmd("updateInfoInTeam", { teamMember: new a(e), single: !0 }, e.callback);}, r.updateNickInTeam = function (e) {s.verifyOptions(e, "teamId account", "team::updateNickInTeam"), this.processCallback(e), this.sendCmd("updateNickInTeam", { teamMember: new a(e), single: !0 }, e.callback);}, r.updateMuteStateInTeam = function (e) {var t = this;s.verifyOptions(e, "teamId account mute", "team::updateMuteStateInTeam"), t.processCallback(e), e.mute = e.mute ? 1 : 0, t.sendCmd("updateMuteStateInTeam", e);}, r.getMutedTeamMembers = function (e) {var t = this;s.verifyOptions(e, "teamId", "team::getMutedTeamMembers"), t.processCallback(e), t.sendCmd("getMutedTeamMembers", e);}, r.leaveTeam = function (e) {s.verifyOptions(e, "teamId", "team::leaveTeam"), this.processCallback(e);var t = { teamId: e.teamId };this.sendCmd("leaveTeam", t, e.callback);}, r.transferTeam = function (e) {s.verifyOptions(e, "teamId account leave", "team::transferTeam"), s.verifyParamType("leave", e.leave, "boolean", "team::transferTeam"), this.processCallback(e);var t = { teamId: e.teamId, account: e.account, leave: e.leave };this.sendCmd("transferTeam", t, e.callback);}, r.dismissTeam = function (e) {s.verifyOptions(e, "teamId", "team::dismissTeam"), this.processCallback(e);var t = { teamId: e.teamId };this.sendCmd("dismissTeam", t, e.callback);}, r.getTeam = function (e) {function t() {r.sendCmd("getTeam", { teamId: e.teamId }, e.callback);}var n,r = this,o = r.db;s.verifyOptions(e, "teamId", "team::getTeam"), r.processCallback(e), e.cbaop = function (e, t) {e || r.logger.log("api::getTeam: cbaop " + n, t);}, n = e.teamId, o.enable && !e.sync ? o.getTeam(n).then(function (s) {s ? (r.logger.log("api::getTeam: db.getTeam " + n, s), e.done(null, s)) : t();}, t) : t();}, r.getTeams = function (e) {function t() {n.sendCmd("getTeams", { timetag: o, NOTSTORE: "timetag" }, e.callback);}var n = this,r = n.db,o = 0;s.verifyOptions(e), n.processCallback(e), r.enable ? r.getTeamsTimetag().then(function (e) {o = e, t();}, t) : t();}, r.getTeamMembers = function (e) {function t() {n.sendCmd("getTeamMembers", { teamId: e.teamId, timetag: r, NOTSTORE: "timetag" }, e.callback);}var n = this,r = 0;s.verifyOptions(e, "teamId", "team::getTeamMembers"), n.processCallback(e), t();}, r.notifyForNewTeamMsg = function (e) {var t = this;s.verifyOptions(e, "teamIds", "team::notifyForNewTeamMsg");var n = t.protocol.notifyForNewTeamMsg(e.teamIds);n.then(function (t) {e.done(null, t);}, function (t) {e.done(t);});}, r.getMyTeamMembers = function (e) {var t = this;s.verifyOptions(e, "teamIds", "team::getMyTeamMembers");var n = t.processCallbackPromise(e);return t.sendCmd("getMyTeamMembers", e), n;}, r.getLocalTeams = function (e) {function t() {e.teams = i, e.done(n, e);}var n,r = this,o = r.db,i = [];s.verifyOptions(e, "teamIds", "team::getLocalTeams"), s.verifyParamType("teamIds", e.teamIds, "array", "team::getLocalTeams"), r.processCallback(e), o.enable ? o.getTeamsByTeamIds(e.teamIds).then(function (e) {i = e.filter(function (e) {return !!e;}), t();}, function (e) {n = e, t();}) : t();}, r.getLocalTeamMembers = function (e) {function t() {e.members = i, e.done(n, e);}var n,r = this,o = r.db,i = [];s.verifyOptions(e, "teamId accounts", "team::getLocalTeamMembers"), s.verifyParamType("accounts", e.accounts, "array", "team::getLocalTeamMembers"), r.processCallback(e), o.enable ? o.getInvalidTeamMembers(e.teamId, e.accounts).then(function (e) {i = e.filter(function (e) {return !!e;}), t();}, function (e) {n = e, t();}) : t();}, r.deleteLocalTeam = function (e) {function t() {e.done(n, e);}var n,r = this,o = r.db;s.verifyOptions(e, "teamId", "team::deleteLocalTeam"), r.processCallback(e), o.enable ? o.deleteTeam(e.teamId).then(function () {t();}, function (e) {n = e, t();}) : t();}, r.muteTeamAll = function (e) {var t = this;switch (s.verifyOptions(e, "teamId type", "team::muteTeamAll"), e.type) {case "none":e.muteType = 0;break;case "normal":e.muteType = 1;break;case "all":e.muteType = 2;break;default:e.muteType = 1;}t.processCallback(e), t.sendCmd("muteTeamAll", e);}, r.sendTeamMsgReceipt = function (e) {var t = this;s.verifyOptions(e, "teamMsgReceipts", "team::sendTeamMsgReceipt"), t.processCallback(e), t.sendCmd("sendTeamMsgReceipt", e);}, r.getTeamMsgReads = function (e) {var t = this;s.verifyOptions(e, "teamMsgReceipts", "team::getTeamMsgReads"), t.processCallback(e), t.sendCmd("getTeamMsgReads", e);}, r.getTeamMsgReadAccounts = function (e) {var t = this;s.verifyOptions(e, "teamMsgReceipt", "team::getTeamMsgReadAccounts"), t.processCallback(e), t.sendCmd("getTeamMsgReadAccounts", e);};}, function (e, t, n) {"use strict";var r = n(7).fn,s = n(1),o = s.objs2accounts,i = n(64);r.updateMyInfo = function (e) {s.verifyOptions(e), this.processCallback(e), e.user = new i(e), delete e.user.account, this.sendCmd("updateMyInfo", { user: e.user, single: !0 }, e.callback);}, r.getMyInfo = function (e) {var t = this;return e = e || {}, e.account = t.account, t.getUser(e);}, r.getUser = function (e) {function t() {r.sendCmd("getUsers", { accounts: [n], single: !0 }, e.callback);}var n,r = this,o = r.db;s.verifyOptions(e, "account", "user::getUser"), r.processCallback(e), e.cbaop = function (e, t) {if (!e) return t = t[0] || null, r.logger.log("api::getUser: cbaop " + n, t), t;}, n = e.account, e.sync ? t() : o.enable ? o.getUser(n).then(function (s) {s ? (r.logger.log("api::getUser: db.getUser " + n, s), e.done(null, s)) : t();}, t) : t();}, r.getUsers = function (e) {function t() {r.sendCmd("getUsers", { accounts: n, single: !0 }, e.callback);}var n,r = this,i = r.db,a = [];s.verifyOptions(e, "accounts", "user::getUsers"), s.verifyParamType("accounts", e.accounts, "array", "user::getUsers"), r.processCallback(e), e.cbaop = function (e, t) {if (!e) return t = t.concat(a), r.logger.log("api::getUsers: cbaop " + n, t), t;}, n = s.deduplicate(e.accounts), s.verifyArrayMax("accounts", e.accounts, 150, "user::getUsers"), e.sync ? t() : i.enable ? i.getUsers(n).then(function (s) {if (s && s.length === n.length) r.logger.log("api::getUsers: db.getUsers", s), e.done(null, s);else {a = s;var i = o(s),c = [];n.forEach(function (e) {i.indexOf(e) === -1 && c.push(e);}), n = c, t();}}, t) : t();};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(11).fn,o = n(1),i = (o.notundef, "broadcastMsg");s.putBroadcastMsg = function (e) {var t = this;return new r(function (n) {function r() {a--, 0 === a && n(s);}o.isArray(e) || (e = [e]);var s = [],a = e.length;e.forEach(function (e) {e = o.copy(e), t.put(i, e).then(function (e) {s.push(e[0]), r();}, r);});});}, s.getBroadcastMsgs = function (e) {var t = this;return e = e || {}, t.getAll(i, e);};}, function (e, t) {"use strict";var n = { version: 8 },r = { kv: { key: { keyPath: "key" } }, timetag: { key: { keyPath: "name" } }, blacklist: { key: { keyPath: "account" } }, mutelist: { key: { keyPath: "account" } }, friend: { key: { keyPath: "account" } }, user: { key: { keyPath: "account" } }, team: { key: { keyPath: "teamId" } }, teamMember: { key: { keyPath: "id" }, indexes: { teamId: { unique: !1 }, account: { unique: !1 } } }, msg: { key: { autoIncrement: !0 }, indexes: { idClient: { unique: !0 }, sessionId: { unique: !1 }, time: { unique: !1 }, type: { unique: !1 }, sessionType: { unique: !1 }, status: { unique: !1 }, sessionTime: { key: ["sessionId", "time"], unique: !1 } } }, msg1: { key: { keyPath: "idClient" }, indexes: { sessionId: { unique: !1 }, time: { unique: !1 }, status: { unique: !1 }, sessionTime: { key: ["sessionId", "time"], unique: !1 } } }, broadcastMsg: { key: { keyPath: "broadcastId" }, indexes: { time: { unique: !1 } } }, sysMsg: { key: { autoIncrement: !0 }, indexes: { idServer: { unique: !0 }, category: { unique: !1 }, type: { unique: !1 } } }, sysMsgUnread: { key: { keyPath: "type" } }, session: { key: { keyPath: "id" }, indexes: { updateTime: { unique: !1 } } } };n.keyPath = function (e) {return r[e].key.keyPath;}, n.schema = function () {return window._nimForceSyncIM = !0, r;}, e.exports = n;}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(11).fn,o = n(1),i = "friend";s.mergeFriends = function (e, t, n) {var r = this;return r.updateAndDelete(i, e, t).then(function () {return r.logger.log("db::mergeFriends: updateAndDelete done", e), n && r.updateFriendTimetag(n), [e, t, n];});}, s.putFriend = function (e) {return this.put(i, e);}, s.updateFriend = function (e) {var t = this;e = o.copy(e);var n = e.account;return this.getOne(i, null, n, { modifyObj: e }).then(function (r) {return r ? t.logger.log("db::updateFriend: " + n, e) : t.logger.warn("db::updateFriend: no record " + n), r;});}, s.deleteFriend = function (e) {var t = this,n = t.remove(i, e),s = t.deleteUser(e);return r.all([n, s]);}, s.getFriends = function () {var e = function e(_e2) {return _e2.valid;};return this.getAll(i, { filter: e });}, s.getFriend = function (e) {return this.getOne(i, null, e);};}, function (e, t, n) {"use strict";var r = n(11).fn,s = "kv";r.setKey = function (e, t) {return this.put(s, { key: e, value: t });}, r.getKey = function (e) {return this.get(s, e).then(function (e) {return e && e.value;});}, r.setDonnop = function (e) {return this.setKey("donnop", e);}, r.getDonnop = function () {return this.getKey("donnop");};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(11).fn,o = n(1),i = "session",a = "msg1",c = "sessionId",u = "time",l = "status",d = "sessionTime";s.putMsg = function (e) {var t = this;return o.isArray(e) || (e = [e]), !e.length || e[0].filter ? r.resolve() : (e = e.filter(function (e) {return !e.ignore;}), t.put(a, e));}, s.updateMsg = function (e) {var t = this;if (!e.filter) {var n = e.idClient,r = o.filterObj(e, "resend status idServer time localCustom");return t.getOne(a, null, n, { modifyObj: r }).then(function (e) {return e ? t.logger.log("db::updateMsg: " + n, r) : t.logger.warn("db::updateMsg: no record " + n), e;});}}, s.getMsgs = function (e) {var t = this;t.checkDB(), e = e || {};var n = u,r = !1,s = !1,i = e.sessionId,c = e.sessionIds;o.exist(i) ? (r = !0, n = d) : o.exist(c) && (r = !0, o.isString(c) ? (n = d, i = c) : Array.isArray(c) && (1 === c.length ? (n = d, i = c[0]) : s = !0));var l = e.start || 0,m = e.end || 1 / 0,f = l,p = m;r && !s && (f = [i, l], p = [i, m]);var g = e.desc !== !1,y = e.limit || 100,h = !1,v = !1,b = e.type,M = e.types;o.exist(b) ? h = !0 : o.exist(M) && (h = !0, o.isString(M) ? b = M : Array.isArray(M) && (1 === M.length ? b = M[0] : v = !0));var T = e.keyword || "",S = e.filterFunc,k = void 0;return (s || h || T || o.isFunction(S)) && (k = function k(e) {if (s && c.indexOf(e.sessionId) === -1) return !1;if (h) if (v) {if (M.indexOf(e.type) === -1) return !1;} else if (b !== e.type) return !1;if (T) {var t = e.text || e.tip || "";if (t.indexOf(T) === -1) return !1;}return !S || S(e);}), t.server.query(a, n).bound(f, p, !0, !0).desc(g).limit(y).filter(k).execute();}, s.getMsgCountAfterAck = function (e) {var t = this;e = e || {};var n = e,s = n.sessionId;return t.checkDB(), t.server.query(a, d).bound([s, e.ack], [s, 1 / 0], !0, !0).execute().then(function (t) {var n = t.filter(function (t) {return "out" !== t.flow && ("notification" !== t.type || !!e.shouldCountNotifyUnread(t));});return r.resolve(n.length);});}, s.amendMsg = function (e) {return e ? (o.notexist(e.text) && (e.text = ""), e) : null;}, s.getMsgByIdClient = function (e) {var t = this;return t.getOne(a, null, e).then(function (e) {return t.amendMsg(e);});}, s.getMsgsByIdClients = function (e) {var t,n = this,s = [];return e.forEach(function (e) {t = n.getMsgByIdClient(e), s.push(t);}), r.all(s);}, s.clearSendingMsgs = function () {var e = this;return e.getOnly(a, l, "sending", { modifyObj: { status: "fail" } }).then(function (t) {e.logger.log("db::clearSendingMsgs: msgs send failed", t);});}, s.deleteMsg = function (e) {var t,n = this,s = [];return o.isArray(e) || (e = [e]), e.forEach(function (e) {t = n.getOne(a, null, e, { remove: !0 }).then(function (e) {return n.logger.log("db::deleteMsg:", e), e;}), s.push(t);}), 1 === s.length ? s[0] : r.all(s);}, s.deleteMsgsBySessionId = function (e) {var t = this;return t.getOnly(a, c, e, { remove: !0 });}, s.deleteAllMsgs = function () {var e = this,t = e.clearTable(a),n = e.clearTable(i);return r.all([t, n]);};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(11).fn,o = n(1),i = "blacklist",a = "mutelist";s.mergeRelations = function (e, t, n, s, o) {var c = this,u = c.updateAndDelete(i, e, t),l = c.updateAndDelete(a, n, s);return r.all([u, l]).then(function () {return c.logger.log("db::mergeRelations: timetag " + o), c.updateRelationTimetag(o), [e, t, n, s, o];});}, s.getRelations = function () {var e = this,t = e.getAll(i),n = e.getAll(a);return r.all([t, n]);}, s.markInBlacklist = function (e) {var t = this;if (e = o.copy(e), e.isAdd) {var n = e.record;return t.put(i, n);}var r = e.account;return t.remove(i, r);}, s.markInMutelist = function (e) {var t = this;if (e = o.copy(e), e.isAdd) {var n = e.record;return t.put(a, n);}var r = e.account;return t.remove(a, r);};}, function (e, t, n) {"use strict";var r = n(11).fn,s = n(1),o = s.notundef,i = "session",a = "updateTime";r.putSession = function (e) {return e = s.merge({}, e), delete e.unread, this.modifyOrPut({ table: i, obj: e, key: "id", modifyObjWhenPut: { unread: 0 } });}, r.getSessions = function (e) {e = e || {};var t,n = !e.reverse,r = e.limit || 100,s = e.lastSessionId,c = e.sessionId,u = !1;if (o(s)) t = function t(e) {return !!u || (e.id === s && (u = !0), !1);};else if (o(c)) return this.get(i, c);return this.getAll(i, { index: a, desc: n, limit: r, filter: t });}, r.getSession = function (e) {return this.get(i, e);}, r.updateSession = function (e) {var t = this,n = e.id,r = s.filterObj(e, "ack unread lastMsg localCustom msgReceiptTime msgReceiptServerTime");return Object.keys(e).forEach(function (t) {0 === t.indexOf("last") && (r[t] = e[t]);}), this.getOne(i, null, n, { modifyObj: r }).then(function (e) {return e ? t.logger.log("db::updateSession: " + n, r) : t.logger.warn("db::updateSession: no record " + n), e;});}, r.resetSessionUnread = function (e) {return this.updateSession({ id: e, unread: 0 });}, r.deleteSession = function (e) {return this.remove(i, e);};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(11).fn,o = n(1),i = o.notundef,a = "sysMsg",c = "idServer",u = "type",l = "category",d = "sysMsgUnread";s.putSysMsg = function (e) {var t = this;return new r(function (n) {function r() {i--, 0 === i && n(s);}if (o.isArray(e) || (e = [e]), !e[0].filter) {var s = [],i = e.length;e.forEach(function (e) {e = o.copy(e), t.put(a, e).then(function (e) {s.push(e[0]), r();}, r);});}});}, s.getSysMsgs = function (e) {var t = this;e = e || {};var n = !e.reverse,r = e.limit || 100,s = null,o = null;e.category && (s = l, o = e.category), e.type && (s = u, o = e.type);var c,d = e.lastIdServer,m = !1,f = e.read;return (i(d) || i(f)) && (c = function c(e) {function t() {return !i(f) || e.read === f;}return i(d) ? (d = "" + d, m ? t() : (e.idServer === d && (m = !0), !1)) : t();}), e = { filter: c, desc: n, limit: r }, s ? t.getOnly(a, s, o, e) : t.getAll(a, e);}, s.getSysMsgByIdServer = function (e) {return this.getOne(a, c, e);}, s.updateSysMsg = function (e) {var t = this;if (!e.filter) {var n = "" + e.idServer,r = o.filterObj(e, "read state error localCustom");return this.getOne(a, c, n, { modifyObj: r }).then(function (e) {return e ? t.logger.log("db::updateSysMsg: " + n, r) : t.logger.warn("db::updateSession: " + n), e;});}}, s.markSysMsgRead = function (e) {var t = this;return new r(function (n, s) {o.isArray(e) || (e = [e]);var i,a,c = [],u = [];e.forEach(function (e) {i = t.getSysMsgByIdServer(e.idServer).then(function (e) {e && !e.read && (a = t.updateSysMsg({ idServer: e.idServer, read: !0 }),
            u.push(a));}, s), c.push(i);}), r.all(c).then(function () {r.all(u).then(function (e) {n(e);}, s);}, s);});}, s.deleteSysMsg = function (e) {var t,n = this,s = [];return o.isArray(e) || (e = [e]), e.forEach(function (e) {e = "" + e, t = n.getOne(a, c, e, { remove: !0 }), s.push(t);}), 1 === s.length ? s[0] : r.all(s);}, s.deleteAllSysMsgs = function () {var e = this,t = e.clearTable(a),n = e.clearTable(d);return r.all([t, n]);}, s.getSysMsgUnread = function () {return this.getAll(d).then(function (e) {var t = {};return e.forEach(function (e) {t[e.type] = e.num;}), t;});}, s.updateSysMsgUnread = function (e) {var t = this;e = o.copy(e);var n = [];return Object.keys(e).forEach(function (t) {n.push({ type: t, num: e[t] });}), this.put(d, n).then(function () {return t.logger.log("db::updateSysMsgUnread: ", e), e;});};}, function (e, t, n) {"use strict";function r(e) {return e.valid && e.validToCurrentUser;}function s(e) {return e && e.valid;}function o(e) {return e && c.fillUndef(e, { mute: !1, custom: "" }), e;}var i = n(2).Promise,a = n(11).fn,c = n(1),u = n(6),l = n(40),d = n(34),m = "team",f = "teamId",p = "account",g = "teamMember";a.mergeTeams = function (e, t, n) {var r = this,s = r.put(m, e),o = r.leaveTeams(t, n);return i.all([s, o]).then(function () {return r.logger.log("db::mergeTeams:"), r.updateTeamTimetag(n), [e, t, n];});}, a.putTeam = function (e) {if (e) return c.isArray(e) || (e = [e]), e.forEach(function (e) {e.validToCurrentUser = !0;}), this.put(m, e);}, a.updateTeam = function (e) {var t = this;e = c.copy(e);var n = e.teamId;return t.getOne(m, null, n, { modifyObj: e }).then(function (r) {return r ? (t.logger.log("db::updateTeam: " + n, e), r) : (t.logger.warn("db::updateTeam: no record " + n), t.putTeam(e));});}, a.transferTeam = function (e, t, n) {var r = this,s = e.teamId,o = e.memberUpdateTime,i = { teamId: s, account: t, type: "normal", updateTime: o },a = { teamId: s, account: n, type: "owner", updateTime: o };return r.updateTeamMembers([i, a]).then(function () {return r.putTeam(e).then(function () {return r.logger.log("db::transferTeam: " + e.teamId + " " + t + " -> " + n), [e, t, n];});});}, a.leaveTeam = function (e) {var t = this;return t.updateTeam({ teamId: e, validToCurrentUser: !1 }).then(function () {return t.removeAllTeamMembers(e);});}, a.dismissTeam = function (e, t) {var n = this,r = { teamId: e, valid: !1, validToCurrentUser: !1, updateTime: t };return n.updateTeam(r).then(function () {return n.removeAllTeamMembers(e);});}, a.leaveTeams = function (e, t) {var n,r = this,s = [];return e.forEach(function (e) {n = r.leaveTeam(e.teamId, t), s.push(n);}), i.all(s);}, a.getTeamsByTeamIds = function (e) {var t,n = this,r = [];return e.forEach(function (e) {t = n.getTeam(e), r.push(t);}), i.all(r);}, a.getTeam = function (e) {e = "" + e;var t = this;return t.getOne(m, null, e).then(function (e) {return t.updateTeamProperties([e]), e;});}, a.getTeams = function () {var e = this;return e.getAll(m, { filter: r }).then(function (t) {return e.updateTeamProperties(t), t;});}, a.updateTeamProperties = function (e) {e.forEach(function (e) {l.fillProperties(e);});}, a.mergeTeamMembers = function (e, t, n, r) {var s = this,o = s.putTeamMembers(t),a = s.updateTeamMembers(n);return i.all([o, a]).then(function () {return s.logger.log("db::mergeTeamMembers: " + e), s.updateTeamMemberTimetag(e, r);});}, a.putTeamMembers = function (e) {return this.put(g, e);}, a.getTeamMembersByAccount = function (e) {var t = this;return t.getOnly(g, p, e, { filter: s, mapper: o }).then();}, a.getTeamMembers = function (e) {var t = this;e = "" + e;var n = function n(e) {return e.valid;};return t.getOnly(g, f, e, { filter: n, mapper: o }).then(function (e) {return t.updateTeamMemberProperties(e).then(function () {return e;});});}, a.updateTeamMemberProperties = function (e) {var t,n = this,r = [];return e.forEach(function (e) {d.fillProperties(e) && (t = n.updateTeamMember(e), r.push(t));}), i.all(r);}, a.getInvalidTeamMembers = function (e, t) {var n = this;e = "" + e;var r,s = [];return t.forEach(function (t) {r = n.getOne(g, null, d.genId(e, t)).then(function (e) {return o(e);}), s.push(r);}), i.all(s);}, a.updateTeamMember = function (e) {var t = this,n = e.teamId,r = e.account,s = d.genId(n, r),i = c.filterObj(e, "nickInTeam muteTeam mute custom updateTime type valid");return this.getOne(g, null, s, { modifyObj: i, mapper: o }).then(function (e) {return e ? t.logger.log("db::updateTeamMember: " + n + " " + r, i) : t.logger.warn("db::updateTeam: no record " + n + " " + r), e;});}, a.updateTeamMembers = function (e) {var t = this;if (!e.length) return i.resolve();var n,r = [];return e.forEach(function (e) {n = t.updateTeamMember(e), r.push(n);}), i.all(r);}, a.updateTeamManagers = function (e, t, n, r) {var s = t.map(function (t) {return { teamId: e, account: t, type: n ? "manager" : "normal", updateTime: r };});return this.updateTeamMembers(s);}, a.removeTeamMembersByAccounts = function (e, t) {var n = t.map(function (t) {return { teamId: e, account: t, valid: !1 };});return this.updateTeamMembers(n);}, a.removeAllTeamMembers = function (e) {var t = this,n = { valid: !1 };return t.getOnly(g, f, e, { modifyObj: n }).then(function () {return t.logger.warn("db::removeAllTeamMembers: " + e), t.deleteTeamMemberTimetag(e);});}, a.deleteTeamMembers = function (e) {var t = this;return t.getOnly(g, f, e, { remove: !0 }).then(function () {t.logger.warn("db::deleteTeamMembers: " + e), t.deleteTeamMemberTimetag(e);});}, a.deleteTeam = function (e) {var t,n = this,s = [];return c.isArray(e) || (e = [e]), e.forEach(function (e) {e = "" + e, t = n.get(m, e).then(function (t) {if (t && r(t)) throw u.stillInTeamError({ callFunc: "team::deleteTeam", team: t });var s = n.remove(m, e),o = n.deleteTeamMembers(e);return i.all([s, o]);}), s.push(t);}), 1 === s.length ? s[0] : i.all(s);};}, function (e, t, n) {"use strict";var r = n(11).fn;r.getTimetags = function (e) {var t = {},n = function n(e) {return e.name.indexOf("team-") !== -1 ? t[e.name] = 0 : t[e.name] = e.value, e;};return this.getAll("timetag", { filter: e, mapper: n }).then(function () {return t;});}, r.getTeamMemberTimetags = function () {return this.getTimetags(function (e) {return e.name.indexOf("team-") !== -1;});}, r.getTimetag = function (e) {return this.getOne("timetag", null, e).then(function (e) {return e = e || { value: 0 }, e.value;});}, r.getTeamMemberTimetag = function (e) {return 0;}, r.updateTimetag = function (e, t) {var n = { name: e, value: t };return this.put("timetag", n);}, r.updateMyInfoTimetag = function (e) {return this.updateTimetag("myInfo", e);}, r.updateRelationTimetag = function (e) {return this.updateTimetag("relations", e);}, r.getRelationsTimetag = function () {return this.getTimetag("relations");}, r.updateFriendTimetag = function (e) {return this.updateTimetag("friends", e);}, r.getFriendsTimetag = function () {return this.getTimetag("friends");}, r.updateFriendUserTimetag = function (e) {return this.updateTimetag("friendUsers", e);}, r.updateTeamTimetag = function (e) {return this.updateTimetag("teams", e);}, r.getTeamsTimetag = function () {return this.getTimetag("teams");}, r.updateTeamMemberTimetag = function (e, t) {return this.updateTimetag("team-" + e, t);}, r.getTeamMembersTimetag = function (e) {return this.getTimetag("team-" + e);}, r.updateMyTeamMembersTimetag = function (e) {return this.updateTimetag("myTeamMembers", e);}, r.getBroadcastMsgTimetag = function (e) {return this.getTimetag("broadcastMsg");}, r.updateBroadcastMsgTimetag = function (e) {return this.updateTimetag("broadcastMsg", parseInt(e));}, r.updateRoamingMsgTimetag = function (e) {return this.updateTimetag("roamingMsgs", e);}, r.updateMsgReceiptsTimetag = function (e) {return this.updateTimetag("msgReceipts", e);}, r.updateDonnopTimetag = function (e) {return this.updateTimetag("donnop", e);}, r.updateDeleteMsgTimetag = function (e) {return this.updateTimetag("deleteMsg", e);}, r.updateSessionAck = function (e) {return this.updateTimetag("sessionAck", e);}, r.deleteTimetag = function (e) {return this.remove("timetag", e);}, r.deleteTeamMemberTimetag = function (e) {return this.deleteTimetag("team-" + e);};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(11).fn,o = n(1),i = "user";s.mergeMyInfo = function (e, t) {var n = this;return n.put(i, e).then(function () {return t ? n.updateMyInfoTimetag(e.updateTime) : e;});}, s.mergeFriendUsers = function (e, t) {var n = this;return n.putUsers(e).then(function () {n.updateFriendUserTimetag(t);});}, s.putUsers = function (e) {return this.put(i, e);}, s.putUser = function (e) {return this.put(i, e);}, s.updateUser = function (e) {var t = this;e = o.copy(e);var n = e.account;return this.getOne(i, null, n, { modifyObj: e }).then(function (r) {return r ? t.logger.log("db::updateUser: " + n, e) : t.logger.warn("db::updateUser: no record " + n), r;});}, s.putUsersIfIsFriend = function (e) {var t,n = this,s = [],o = [];return e.forEach(function (e) {t = n.getFriend(e.account).then(function (r) {return r && (t = n.putUser(e), o.push(t)), r;}), s.push(t);}), r.all(s).then(function () {return r.all(o).then(function (e) {return e;});});}, s.deleteUser = function (e) {return this.remove(i, e);}, s.getUser = function (e) {return this.getOne(i, null, e);}, s.getUsers = function (e) {function t(t) {return e.indexOf(t.account) !== -1;}return this.getAll(i, { filter: t });}, s.getAllUsers = function () {return this.getAll(i);};},,,,,,,,,,, function (e, t, n) {"use strict";function r() {}var s = n(63),o = n(1);r.prototype = Object.create(s.prototype), r.verifyFile = function (e, t) {o.verifyOptions(e, "dur", !0, "file.", t);}, e.exports = r;}, function (e, t, n) {"use strict";function r(e) {o.verifyOptions(e, "content", "msg::CustomMessage"), e.type = "custom", s.call(this, e), this.attach = e.content;}var s = n(24),o = n(1);r.prototype = Object.create(s.prototype), r.reverse = function (e) {var t = s.reverse(e);return t.content = e.attach, t;}, e.exports = r;}, function (e, t, n) {"use strict";function r(e) {e.type = "geo", o.verifyOptions(e, "geo", "msg::GeoMessage"), o.verifyOptions(e.geo, "lng lat title", !0, "geo.", "msg::GeoMessage"), o.verifyParamType("geo.lng", e.geo.lng, "number", "msg::GeoMessage"), o.verifyParamType("geo.lat", e.geo.lat, "number", "msg::GeoMessage"), o.verifyParamType("geo.title", e.geo.title, "string", "msg::GeoMessage"), s.call(this, e), this.attach = JSON.stringify(e.geo);}var s = n(24),o = n(1);r.prototype = Object.create(s.prototype), r.reverse = function (e) {var t = s.reverse(e);return e.attach = e.attach ? "" + e.attach : "", t.geo = e.attach ? JSON.parse(e.attach) : {}, t;}, e.exports = r;}, function (e, t, n) {"use strict";function r() {}var s = n(1),o = n(63);r.prototype = Object.create(o.prototype), r.verifyFile = function (e, t) {s.verifyOptions(e, "w h", !0, "file.", t);}, e.exports = r;}, function (e, t, n) {"use strict";var r = n(1),s = function s(e) {this.account = e.account;},o = s.prototype,i = o.Message = n(24),a = o.TextMessage = n(230),c = o.FileMessage = n(63),u = o.GeoMessage = n(225),l = o.NotificationMessage = n(228),d = o.CustomMessage = n(224),m = o.TipMessage = n(231),f = o.RobotMessage = n(229);o.validScenes = i.validScenes, o.validTypes = i.validTypes, o.reverse = function (e) {var t,n = i.getType(e);switch (n) {case "text":t = a.reverse(e);break;case "image":case "audio":case "video":case "file":t = c.reverse(e);break;case "geo":t = u.reverse(e);break;case "notification":t = l.reverse(e);break;case "custom":t = d.reverse(e);break;case "tip":t = m.reverse(e);break;case "robot":t = f.reverse(e);break;default:t = i.reverse(e);}return i.setExtra(t, this.account), t;}, o.reverseMsgs = function (e, t) {var n,s,o = this;return e.map(function (e) {return e = o.reverse(e), t && (n = t.modifyObj, n && (e = r.merge(e, n)), s = t.mapper, r.isFunction(s) && (e = s(e))), e;});}, e.exports = s;}, function (e, t, n) {"use strict";function r() {}var s = n(1),o = s.notundef,i = n(24),a = n(29).getInstance("IM"),c = n(40),u = n(64),l = { 0: "addTeamMembers", 1: "removeTeamMembers", 2: "leaveTeam", 3: "updateTeam", 4: "dismissTeam", 5: "passTeamApply", 6: "transferTeam", 7: "addTeamManagers", 8: "removeTeamManagers", 9: "acceptTeamInvite", 10: "updateTeamMute", 101: "netcallMiss", 102: "netcallBill" };r.prototype = Object.create(i.prototype), r.reverse = function (e) {var t = i.reverse(e);if (e.attach = e.attach ? "" + e.attach : "", e.attach) {var n = JSON.parse(e.attach);if (t.attach = { type: l[n.id] || n.id }, o(n.data)) {var r = n.data;o(r.tinfo) && (t.attach.team = c.reverse(a.unserialize(r.tinfo, "team"), !0)), o(r.ids) && (t.attach.accounts = r.ids), o(r.id) && (t.attach.account = r.id), o(r.uinfos) && (t.attach.users = r.uinfos.map(function (e) {return u.reverse(a.unserialize(e, "user"));})), o(r.mute) && (t.attach.mute = 1 === +r.mute), o(r.attach) && (t.attach.custom = r.attach), o(r.channel) && (t.attach.channelId = r.channel), o(r.calltype) && (t.attach.netcallType = r.calltype), o(r.duration) && (t.attach.duration = r.duration), o(r.time) && (t.attach.time = r.time), t.attach.accounts && t.attach.accounts.length <= 2 && t.from === t.to && t.attach.accounts.some(function (e) {if (e !== t.to) return t.to = e, !0;});}} else t.attach = {};return t;}, e.exports = r;}, function (e, t, n) {"use strict";function r(e) {o.verifyOptions(e, "content", "msg::RobotMessage"), o.undef(e.robotAccid) && (e.robotAccid = e.to);var t = e.content;switch (t.type) {case "welcome":o.undef(e.body) && (this.body = "欢迎消息");break;case "text":o.verifyOptions(t, "content", "msg::RobotMessage"), o.undef(e.body) && (this.body = t.content);break;case "link":o.verifyOptions(t, "target", "msg::RobotMessage");}t.type && (t.type = i[t.type]), t = { param: t, robotAccid: e.robotAccid }, this.attach = JSON.stringify(t), e.type = "robot", s.call(this, e);}var s = n(24),o = n(1),i = { welcome: "00", text: "01", link: "03" },a = { "01": "text", "02": "image", "03": "answer", 11: "template" };r.prototype = Object.create(s.prototype), r.reverse = function (e) {var t = s.reverse(e);if ("robot" === t.type) {var n = JSON.parse(e.attach);if (n.param && (n.param.type = a[n.param.type] || "unknown"), n.robotMsg) {n = o.merge(n, n.robotMsg);var r = n.message;"bot" === n.flag ? n.message = r.map(function (e) {return e.type = a[e.type] || "unknown", e;}) : "faq" === n.flag, delete n.robotMsg;}t.content = n;}return t;}, e.exports = r;}, function (e, t, n) {"use strict";function r(e) {o.verifyOptions(e, "text", "msg::TextMessage"), e.type = "text", s.call(this, e);}var s = n(24),o = n(1);r.prototype = Object.create(s.prototype), r.reverse = function (e) {var t = s.reverse(e);return t;}, e.exports = r;}, function (e, t, n) {"use strict";function r(e) {o.verifyOptions(e, "tip", "msg::TipMessage"), e.type = "tip", s.call(this, e), this.body = e.tip;}var s = n(24),o = n(1);r.prototype = Object.create(s.prototype), r.reverse = function (e) {var t = s.reverse(e);return t.text = "", t.tip = e.body, e.attach && (t.attach = e.attach), t;}, e.exports = r;}, function (e, t, n) {"use strict";function r() {}var s = n(63),o = n(1);r.prototype = Object.create(s.prototype), r.verifyFile = function (e, t) {o.verifyOptions(e, "dur w h", !0, "file.", t);}, e.exports = r;}, function (e, t, n) {"use strict";function r(e) {if (s.verifyOptions(e, "type value", "event::MsgEvent"), s.verifyParamType("type", e.type, "number", "event::MsgEvent"), s.verifyParamMin("type", e.type, 1e5, "event::MsgEvent"), s.verifyParamType("value", e.value, "number", "event::MsgEvent"), this.type = e.type, this.value = e.value, this.idClient = s.guid(), o(e.custom) && (this.custom = "" + e.custom), this.validTime = e.validTime || 604800, s.verifyParamType("validTime", this.validTime, "number", "event::MsgEvent"), s.verifyParamMin("validTime", this.validTime, 60, "event::MsgEvent"), s.verifyParamMax("validTime", this.validTime, 604800, "event::MsgEvent"), o(e.broadcastType)) {if (s.verifyParamType("broadcastType", e.broadcastType, "number", "event::MsgEvent"), [1, 2].indexOf(e.broadcastType) < 0) throw new i('参数错误"broadcastType":只能为1或2');this.broadcastType = e.broadcastType;} else this.broadcastType = 2;o(e.sync) ? (s.verifyParamType("sync", e.sync, "boolean", "event::MsgEvent"), this.sync = e.sync) : this.sync = !1;}var s = n(1),o = s.notundef,i = n(6);r.prototype.assembleEvent = function () {return { type: this.type, value: this.value, idClient: this.idClient, custom: this.custom || "", validTime: this.validTime, broadcastType: this.broadcastType, sync: this.sync === !0 ? 1 : 0 };}, e.exports = r;}, function (e, t, n) {"use strict";function r(e) {s.verifyOptions(e, "type", "event::MsgEventSubscribe"), s.verifyParamType("type", e.type, "number", "event::MsgEventSubscribe"), s.findObjIndexInArray([1, 2, 3], e.type) < 0 && s.verifyParamMin("type", e.type, 1e5, "event::MsgEventSubscribe"), this.type = e.type, o(e.subscribeTime) ? (s.verifyParamType("subscribeTime", e.subscribeTime, "number", "event::MsgEventSubscribe"), s.verifyParamMin("subscribeTime", e.subscribeTime, 60, "event::MsgEventSubscribe"), s.verifyParamMax("subscribeTime", e.subscribeTime, 2592e3, "event::MsgEventSubscribe"), this.subscribeTime = e.subscribeTime) : this.subscribeTime = 2592e3, o(e.sync) ? (s.verifyParamType("sync", e.sync, "boolean", "event::MsgEventSubscribe"), this.sync = e.sync) : this.sync = !0;}var s = n(1),o = s.notundef;r.prototype.assembleEvent = function (e) {return { type: this.type, subscribeTime: this.subscribeTime, sync: this.sync === !0 ? 1 : 0 };}, e.exports = r;}, function (e, t, n) {"use strict";function r() {}var s = n(1);r.parse = function (e) {var t = s.copy(e);return t.isBlacked = "1" === t.isBlacked, t.isMuted = "1" === t.isMuted, t.createTime = +t.createTime, t.updateTime = +t.updateTime, t;}, e.exports = r;},,,,, function (e, t, n) {"use strict";var r = n(5).fn,s = n(37);r.assembleLogin = function () {return { login: this.assembleIMLogin() };}, r.afterLogin = function () {var e = this,t = e.db;if (t.enable) {var n = e.account;e.options.appendAppKeyForDBName && (n += "-" + e.options.appKey), e.db.init(n).then(function () {e.syncData();}, function (n) {e.logger.warn("link::afterLogin: no db", n), t.reset(!1), e.syncData();});} else e.logger.info("link::afterLogin: no db"), e.syncData();}, r.processAuth = function (e) {var t = this;switch (e.cmd) {case "login":e.error || (e.obj = e.content.loginRes, t.connectionId = e.content.loginRes.connectionId, t.onLoginPortsChange(e, 2));break;case "kicked":return void t.onKicked(e);case "multiPortLogin":t.onLoginPortsChange(e, e.content.state);break;case "kick":e.error || (e.obj.deviceIds = e.content.deviceIds);}}, r.onLoginPortsChange = function (e, t) {var n = this,r = e.content.loginPorts;if (r && r.length) {var o = !0;switch (t) {case 2:o = !0;break;case 3:o = !1;}r.forEach(function (e) {e.type = s.reverseType(e.type), e.time = +e.time, e.online = o;}), r = r.filter(function (e) {return e.connectionId !== n.connectionId;}), r.length && (n.logger.info("link::onLoginPortsChange:", r), n.options.onloginportschange(r));}}, r.kickedReasons = ["", "samePlatformKick", "serverKick", "otherPlatformKick", "silentlyKick"], r.kickedMessages = ["", "不允许同一个帐号在多个地方同时登录", "被服务器踢了", "被其它端踢了", "悄悄被踢"];}, function (e, t, n) {"use strict";var r = n(5).fn;r.processChatroom = function (e) {var t = this;switch (e.cmd) {case "getChatroomAddress":t.onChatroomAddress(e);}}, r.onChatroomAddress = function (e) {e.error || (e.obj.address = e.content.address);};}, function (e, t, n) {"use strict";var r = n(5).fn,s = n(3),o = n(1),i = n(20);r.refreshSocketUrl = function () {function e(e) {n.socketUrls = [], e = JSON.parse(e), e.common.link.forEach(function (e) {n.socketUrls.push(s.formatSocketUrl({ url: e, secure: n.options.secure }));}), e.common["link.default"].forEach(function (e) {e = s.formatSocketUrl({ url: e, secure: n.options.secure }), n.socketUrls.indexOf(e) === -1 && n.socketUrls.push(e);});try {s.uploadUrl = e.nosup[0];} catch (t) {}n.logger.info("link::refreshSocketUrl: ajax load, got socket urls ", n.socketUrls), n.connectToUrl(n.getNextSocketUrl());}function t(e) {n.api.reportLogs({ event: "nimlb", code: 3001 }), n.logger.error("link::refreshSocketUrl: ajax lbs error", e), n.onDisconnect(!1, "link::refreshSocketUrl");}var n = this,r = n.options,a = s.info,c = r.lbsUrl;c = c + o.genUrlSep(c) + "k=" + r.appKey + "&id=" + r.account + "&sv=" + a.sdkVersion + "&pv=" + a.protocolVersion, n.logger.info("link::refreshSocketUrl: ajax " + c), i(c, { proxyUrl: o.url2origin(c) + "/lbs/res/cors/nej_proxy_frame.html", timeout: s.xhrTimeout, onload: e, onerror: t });};}, function (e, t, n) {"use strict";function r(e) {return e && e.__esModule ? e : { "default": e };}function s(e) {e = e || {};var t = c.copy(e);return t.clientType && (t.clientType = u[t.clientType] || ""), t.serverCustom && (t.custom = JSON.parse(t.serverCustom), "string" == typeof t.custom[0] && (t.custom = t.custom[0]), delete t.serverCustom), t;}var o = n(21),i = r(o),a = n(5).fn,c = n(1),u = i["default"].clientTypeMap;a.processEventService = function (e) {var t = this,n = e.content,r = e.error,o = t.options || {};switch (r && (r.callFunc = "events::processEventService", t.onCustomError("事件服务解包失败", "EVENT_SERVICE_ERROR", r)), e.cmd) {case "pushEvent":if (c.isFunction(o.onpushevents)) {var i = { msgEvents: [s(n.msgEvent)] };o.onpushevents(i);}break;case "pushEvents":if (c.isFunction(o.onpushevents)) {var a = n.msgEvents,u = a.map(function (e) {return s(e);});a = { msgEvents: u }, o.onpushevents(a);}}};}, function (e, t, n) {"use strict";var r = n(5).fn;r.processFilter = function (e) {var t = this;switch (e.cmd) {case "sendFilterMsg":t.onSendMsg(e, !0);break;case "filterMsg":t.onMsg(e, !0);break;case "filterSysMsg":t.onSysMsg(e, !0);break;case "sendFilterCustomSysMsg":t.onSendSysMsg(e, !0);}};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn,o = n(1),i = o.objs2accounts,a = n(107),c = n(64);s.processFriend = function (e) {var t = this,n = e.obj,r = e.content,s = e.error;switch (e.cmd) {case "friendRequest":t.updateFriendSysMsg(e), s || t.onFriendRequest(n);break;case "syncFriendRequest":t.onFriendRequest(r, !0);break;case "deleteFriend":s || t.onDeleteFriend(n);break;case "syncDeleteFriend":t.onDeleteFriend(r, !0);break;case "updateFriend":s || t.onUpdateFriend(n);break;case "syncUpdateFriend":t.onUpdateFriend(r.friend, !0);break;case "getFriends":t.onFriends(e);break;case "syncFriends":t.onFriends(e);break;case "syncFriendUsers":t.onFriendUsers(e);}}, s.onFriends = function (e) {function t() {f && m.forEach(function (e) {e = a.reverse(e), e.valid ? p.push(e) : g.push(e);}), c.logger.info("friend::onFriends: parse friends", i(p), p, "delete", i(g), g), m.length ? (f = !0, o = e.content.timetag) : f = !1;}function n(t, n) {e.promise = new r(function (e, r) {function i() {d ? (s(), e(), t()) : u.getFriends().then(function (n) {p = n, s(), e(), t();}).then(void 0, function (e) {e._msg = "get friends error", r(e), n(e);});}f ? u.mergeFriends(p, g, o).then(function () {i();}).then(void 0, function (e) {e._msg = "merge friends error", r(e), n(e);}) : (c.logger.info("friend::onFriends: no merge friends"), i());}).then(void 0, function (e) {throw e._msg = "merge friends data error", n(e), e;});}function s() {c.timetags.friends = o, p.invalid = g, d ? (c.syncResult.friends = p, c.syncResult.invalidFriends = g) : (c.logger.info("friend::onFriends: get friends bingo", i(p), p), e.obj = p);}var o,c = this,u = c.db,l = e.error,d = c.packetFromSync(e),m = e.content.friends,f = !0,p = [],g = [],y = new r(function (e, r) {l ? d && r(l) : (t(), u.enable ? n(e, r) : (s(), e()));});d && (y.cmd = "friends", c.syncPromiseArray.push(y));}, s.onFriendRequest = function (e, t) {var n = r.resolve(),s = this,o = s.db,i = e.type;i = e.type = a.getTypeFromByte(i) || i;var c = "addFriend" === i || "passFriendApply" === i;if (c) {var u = e.friend = a.assembleFriend(e.account);o.enable && (n = o.putFriend(u));}return t && s.onSyncFriendAction(e), n;}, s.onSyncFriendAction = function (e) {var t = this;t.logger.info("friend::onSyncFriendActionon:", e), t.options.onsyncfriendaction(e);}, s.onDeleteFriend = function (e, t) {var n = r.resolve(),s = this,o = s.db;return o.enable && (n = o.deleteFriend(e.account)), t && (e.type = "deleteFriend", s.onSyncFriendAction(e)), n;}, s.onUpdateFriend = function (e, t) {var n = this,r = n.db,s = a.reverse(e);r.enable && r.updateFriend(s), t && n.onSyncFriendAction({ type: "updateFriend", friend: s });}, s.onFriendUsers = function (e) {var t = this,n = t.db,s = e.content,o = s.users.map(function (e) {return c.reverse(e);});t.logger.warn("friend::onFriendUsers: parse users", i(o), o);var a = s.timetag,u = r.resolve();n.enable && (u = n.mergeFriendUsers(o, a)), t.timetags.friendUsers = a, u.cmd = "friendUsers", t.syncPromiseArray.push(u), t.syncResult.users = o;}, s.updateFriendSysMsg = function (e) {var t,n,r = e.obj,s = e.error;if (e.obj.idServer) {if (s) t = "error", s = o.filterObj(s, "code message");else {var i = r.type;switch (i = a.getTypeFromByte(i) || i) {case "passFriendApply":t = "passed";break;case "rejectFriendApply":t = "rejected";}}n = { idServer: r.idServer, state: t }, s && (n.error = s), this.updateSysMsg(n);}};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn,o = n(1),i = o.undef,a = n(21),c = n(34),u = n(38),l = n(93);s.processMsg = function (e) {var t = this;switch (e.cmd) {case "sendMsg":t.onSendMsg(e);break;case "msg":t.onMsg(e);break;case "sysMsg":t.onSysMsg(e);break;case "broadcastMsg":t.onBroadcastMsg(e);break;case "sendCustomSysMsg":t.onSendSysMsg(e);break;case "getHistoryMsgs":case "searchHistoryMsgs":t.onHistoryMsgs(e);break;case "syncSendMsg":t.onMsg(e);break;case "deleteSessions":t.onDeleteSessions(e);break;case "sendMsgReceipt":t.onSendMsgReceipt(e);break;case "msgReceipt":t.onMsgReceipt(e);break;case "onDeleteMsg":t.onDeleteMsg(e);break;case "onMsgDeleted":t.onMsgDeleted(e);break;case "onDeleteMsgOfflineRoaming":t.onDeleteMsgOfflineRoaming(e);break;case "onMarkSessionAck":t.onMarkSessionAck(e);break;case "syncMarkSessionAck":t.syncMarkSessionAck(e);}}, s.checkIgnore = function (e) {var t = this;e.forEach(function (e) {"notification" === e.type && !e.ignore && t.options.shouldIgnoreNotification(e) && (e.ignore = !0);});}, s.filterIgnore = function (e) {return e.filter(function (e) {return !e.ignore;});}, s.genSessionByMsgs = function (e) {var t = this;return t.checkIgnore(e), u.genSessionByMsgs(t.message.Message, e);}, s.onRoamingMsgs = function (e) {var t = this,n = t.message,r = n.Message,s = r.getMaxTimetag,o = n.reverseMsgs(e.content.msgs),i = s(o);o = r.sortMsgs(o), o = r.deduplication(o);var a = o[0],c = a.sessionId,u = t.genSessionByMsgs(o);t.cacheSyncedSession(u);var l = t.putMsg(o, "roamingMsgs").then(function (e) {o = e, o = t.filterIgnore(o), o.length && (t.logger.info("msg::onRoamingMsgs: putRoamingMsgs", c, o.length, o), t.syncResult.roamingMsgs = t.syncResult.roamingMsgs || [], t.syncResult.roamingMsgs.push({ sessionId: c, scene: a.scene, to: a.target, msgs: o, timetag: i }));});l.cmd = "roamingMsgs-" + c, t.syncPromiseArray.push(l);}, s.onOfflineMsgs = function (e, t) {function n(e) {if (l.length) {var t = o.getMaxTimetag(l),n = l[0].scene,s = l[0].target;r.markMsgRead(l), l = o.sortMsgs(l), l = o.deduplication(l);var i = r.genSessionByMsgs(l);r.cacheSyncedSession(i), c = r.putMsg(l, "offlineMsgs").then(function (o) {l = o, l = r.filterIgnore(l), l.length && (r.logger.info("msg::onOfflineMsgs： toreLastSession", m, e, l.length, l), r.syncResult[m] = r.syncResult[m] || [], r.syncResult[m].push({ sessionId: e, scene: n, to: s, msgs: l, timetag: t }));}), c.cmd = "offlineMsgs-" + e, r.syncPromiseArray.push(c);}}var r = this,s = r.message,o = s.Message,i = null;t && (i = { filter: !0 });var a,c,u = s.reverseMsgs(e.content.msgs, { modifyObj: i }),l = [],d = "",m = t ? "offlineFilterMsgs" : "offlineMsgs";u.forEach(function (e) {a = e.sessionId, a !== d ? (n(d), l = [], l.push(e), d = a) : l.push(e);}), n(d);}, s.markUnreadByMsgsPromise = function (e) {var t = this,n = t.db;n.enable && n.getSession(e).then(function (n) {n.ack && t.markUnreadBySessionAck({ sessionId: e, ack: n.ack });});}, s.completeMsg = function (e) {var t = this;return e.from = t.account, e.fromNick = t.myInfo && t.myInfo.nick, e.fromClientType = "Web", e.fromDeviceId = a.deviceId, e.time || (e.time = +new Date()), e;}, s.onMsgs = function (e) {var t = this;t.message.reverseMsgs(e.content.msgs, { mapper: function mapper(e) {t.handleMsg(e);} });}, s.onMsg = function (e, t) {var n = this,r = n.message.reverse(e.content.msg);t && (r.filter = !0), n.syncing ? n.unhandledMsgs.push({ type: "onMsg", msg: r }) : n.handleMsg(r);}, s.onBroadcastMsgs = function (e) {var t = this,n = e.content.broadcastMsgs;n = n.sort(function (e, t) {return e.broadcastId - t.broadcastId;}), t.putBroadcastMsgs(n);}, s.onBroadcastMsg = function (e) {var t = this,n = e.content.broadcastMsg;n.time = n.timestamp, t.syncing ? t.unhandledMsgs.push({ type: "onBroadcastMsg", msg: n }) : n && t.putBroadcastMsg(n);}, s.pushMsgTask = function (e) {var t = this;t.msgPromise = t.msgPromise.then(function () {return e();});}, s.handleMsg = function (e) {var t = this,n = e.time;t.markMsgRead(e), t.msgPromise = t.msgPromise.then(function () {return t.putMsg(e, "onMsg");}).then(function (r) {return e = r[0], t.updateRoamingMsgTimetag(n);}).then(function () {if (e) return t.checkUserUpdate(e);}).then(function () {if (e) {var n = e.type;switch (t.logger.log("msg::handleMsg:checkUserUpdate: " + e.scene + " " + n + " msg" + ("notification" === n ? " " + e.attach.type : ""), e), n) {case "notification":return t.onTeamNotificationMsg(e);}}}).then(function () {e && !e.ignore && (t.logger.info("msg::handleMsg:onmsg: ", e), setTimeout(function () {t.options.onmsg(o.copy(e));}, 0));}).then(void 0, function (e) {e.callFunc = "msg::handleMsg", t.onCustomError("消息处理错误", e);});}, s.putMsg = function (e, t) {function n(e) {"roamingMsgs" !== t && "offlineMsgs" !== t || s.cacheSyncedSession(e);}if (o.isArray(e) || (e = [e]), e[0].filter) return r.resolve(e);var s = this,a = s.db,c = a.enable,u = r.resolve(),l = s.message.Message,d = l.getLastMsg(e),m = d.flow,f = d.sessionId !== s.currSessionId,p = s.genSessionByMsgs(e);n(p);var g = !1,y = [];return s.checkIgnore(e), u = u.then(function () {return c || s.options.autoMarkRead || "roamingMsgs" === t || !p || (s.sessionUnreadMsgs = s.sessionUnreadMsgs || {}, s.sessionUnreadMsgs[p.id] = s.sessionUnreadMsgs[p.id] || [], s.sessionUnreadMsgs[p.id] = s.sessionUnreadMsgs[p.id].concat(e.filter(function (e) {var t = s.options.shouldCountNotifyUnread(e);return t;}))), c && "roamingMsgs" !== t && "offlineMsgs" !== t ? (s.logger.log("msg::putMsg:db.putMsg: ", p), a.putMsg(e)) : e;}).then(function (t) {var n = [];return e.forEach(function (e) {s.checkMsgUnique(e) && n.push(e);}), e = n, y = c ? t : e, r.resolve(e);}), u = u.then(function (e) {return e.length && (p = s.genSessionByMsgs(e), n(p), c && p) ? new r(function (t, n) {a.getSessions({ sessionId: p.id }).then(function (n) {if (n && n.lastMsg) {var r = n.lastMsg;p.lastMsg && p.lastMsg.time < r.time && (p.lastMsg = r);}s.logger.log("msg::putMsg:db.getSessions: ", p), y.length ? p ? a.putSession(p).then(function (e) {t(e);}) : t(n) : (g = !0, y = e, t(n));});}) : r.resolve(p);}), u = u.then(function (e) {if (p && y.length) {var r = "roamingMsgs" === t,o = s.options.syncSessionUnread,u = p.id,l = s.findSession(u) || {},d = l.ack || 0,h = "offlineMsgs" === t || r && o || "onMsg" === t && "in" === m && f;if (h) {c && e ? (p = e, d = d || p.ack || 0) : (e = l, e && (p.unread = e.unread || 0)), n(p), p.unread = p.unread || 0;var v = 0;if (y.forEach(function (e) {var t = s.options.shouldCountNotifyUnread(e),n = ("notification" !== e.type || "notification" === e.type && t) && (i(e.isUnreadable) || e.isUnreadable);if (n && o && (n = e.time > d && "out" !== e.flow), n && (v++, o && !c)) {var r = l.unreadMsgs || [];r.push(e), p.unreadMsgs = r;}}), p.unread += v, s.logger.log("msg::putMsg:updateSession: ", p), n(p), c && !g) return a.updateSession({ id: p.id, unread: p.unread });}}}), "onMsg" === t ? u = u.then(function () {e.length && p && (s.onUpdateSession(p), s.options.syncSessionUnread && !f && s.api.resetSessionUnread(s.currSessionId));}) : "sendMsg" === t && !f && p && p.lastMsg && p.lastMsg.isLocal && (s.onUpdateSession(p), s.api.resetSessionUnread(s.currSessionId)), u.then(function () {return r.resolve(e);});}, s.putBroadcastMsgs = function (e) {var t = this,n = t.db,s = e.length;if (s > 0) {if (t.doMarkBroadcastMsgsRead(e), n.enable) {var i = e[s - 1].broadcastId;return n.updateBroadcastMsgTimetag(i), n.putBroadcastMsg(e).then(function () {return setTimeout(function () {t.doMarkMsgsRead(), t.options.onbroadcastmsgs(o.copy(e));}, 0), r.resolve(e);});}setTimeout(function () {t.options.onbroadcastmsgs(o.copy(e));}, 0);}return e;}, s.putBroadcastMsg = function (e) {var t = this,n = t.db;return t.doMarkBroadcastMsgsRead([e]), n.enable ? (e.broadcastId && n.updateBroadcastMsgTimetag(e.broadcastId), n.putBroadcastMsg(e).then(function () {return setTimeout(function () {t.options.onbroadcastmsg(o.copy(e));}, 0), r.resolve(e);})) : (setTimeout(function () {t.options.onbroadcastmsg(o.copy(e));}, 0), e);}, s.doMarkBroadcastMsgsRead = function (e) {var t = 7,n = 17;e = e.map(function (e) {return e.broadcastId;}), this.sendCmd("batchMarkRead", { sid: t, cid: n, ids: e });}, s.cacheSyncedSession = function (e) {var t = this;if (e && t.syncResult) {e = o.merge({}, e), t.syncResult.sessions = t.syncResult.sessions || {};var n = e.id;t.syncResult.sessions[n] = o.merge(t.syncResult.sessions[n], e), i(t.syncResult.sessions[n].unread) && (t.syncResult.sessions[n].unread = 0), t.mergeSession(t.syncResult.sessions[n]);}}, s.checkMsgUnique = o.genCheckUniqueFunc("idClient"), s.storeSendMsg = function (e) {var t = this;if (!t.syncing) {var n = t.putMsg(e, "sendMsg");return t.msgPromise = t.msgPromise.then(function () {return n;}), n;}t.unhandledMsgs.push({ type: "sendMsg", msg: e });}, s.updateSendMsgError = function (e) {var t = this;if (!t.syncing) {var n = t.updateMsg(e);return t.msgPromise = t.msgPromise.then(function () {return n;}), n;}t.unupdatedMsgs.push(e);}, s.onSendMsg = function (e, t) {var n = this,s = e.obj && e.obj.msg || e.content.msg;n.completeMsg(s);var o = e.error && 7101 === e.error.code;e.error && !o || (s.idServer = e.content.msg.idServer, s.time = +e.content.msg.time), e.error ? s.status = "fail" : s.status = "success", s = n.message.reverse(s), t && (s.filter = !0), e.obj = s, n.syncing ? n.unupdatedMsgs.push(s) : n.msgPromise = r.all([n.msgPromise, e.obj.promise]).then(function (e) {return e.length || (s.resend = !0), n.updateMsg(s).then(function () {return n.options.syncSessionUnread && n.currSessionId === s.sessionId && n.api.resetSessionUnread(n.currSessionId), n.resolveMsgReceiptTask(s), s;});});}, s.updateLocalMsg = function (e) {var t = this,n = t.updateMsg(e);return t.msgPromise = t.msgPromise.then(function () {return n;}), n;}, s.updateMsg = function (e) {if (e.filter) return r.resolve(e);var t = this,n = t.db,s = "success" === e.status,o = u.genSessionByMsg(e),i = !!e.isLocal;return t.onUpdateSession(o), n.enable ? n.updateMsg(e).then(function (e) {var t = n.updateSession(o),a = r.resolve();return s && e && !i && (a = n.updateRoamingMsgTimetag(e.time)), r.all([t, a]);}) : (s && !i && (t.timetags.roamingMsgs = e.time), r.resolve(e));}, s.updateRoamingMsgTimetag = function (e) {var t = this,n = t.db;return n.enable ? n.updateRoamingMsgTimetag(e) : (t.timetags.roamingMsgs = e, r.resolve(e));}, s.checkUserUpdate = function (e) {var t = this,n = e.from;return n === t.account ? r.resolve() : new r(function (r) {function s() {t.api.getUser({ account: n, sync: !0, done: function done(e, n) {e || setTimeout(function () {t.logger.log("user::checkUserUpdate: onupdateuser", n.account, n), t.options.onupdateuser(n);}, 0), r();} });}var i = t.userSet[n];
        if (i) {var a = +i.updateTime,c = +e.userUpdateTime;!isNaN(a) && !isNaN(c) && o.isNumber(a) && o.isNumber(c) && a < c ? s() : r();} else s();});}, s.processUnsettledMsgs = function () {var e = this;e.unhandledMsgs.forEach(function (t) {var n = t.msg;switch (t.type) {case "onMsg":e.handleMsg(n);break;case "sendMsg":e.msgPromise = e.msgPromise.then(function () {return e.putMsg(n);});break;case "onBroadcastMsg":e.msgPromise = e.msgPromise.then(function () {return e.putBroadcastMsg(n);});}}), e.unupdatedMsgs.forEach(function (t) {e.msgPromise = e.msgPromise.then(function () {return e.updateMsg(t);});}), e.resetUnsettledMsgs();}, s.onTeamNotificationMsg = function (e) {var t = this,n = t.db,r = e.attach,s = r.type,o = e.from,i = e.to,a = e.time,c = r.team,u = r.account,l = r.accounts;switch (s) {case "updateTeam":if (!n.enable) return;return c.updateTime = a, t.onUpdateTeam(c), n.updateTeam(c);case "addTeamMembers":return t.onAddTeamMembers(e, c, l);case "removeTeamMembers":return t.onRemoveTeamMembers(c, i, l);case "acceptTeamInvite":return t.onAddTeamMembers(e, c, [o]);case "passTeamApply":return t.onAddTeamMembers(e, c, [u]);case "addTeamManagers":return t.updateTeamManagers(e, i, l, !0, a);case "removeTeamManagers":return t.updateTeamManagers(e, i, l, !1, a);case "leaveTeam":return t.onRemoveTeamMembers(c, i, [o]);case "dismissTeam":return t.onDismissTeam(i, a);case "transferTeam":return t.transferTeam(e, c, o, u);case "updateTeamMute":return t.onUpdateTeamMembersMute(e, c, [u], r.mute);}}, s.onAddTeamMembers = function (e, t, n) {var s = this,i = s.db,a = t.teamId,u = c.assembleMembers(t, n);e.attach.members = u;var l = { team: t, accounts: n, members: u };if (s.logger.info("team::onAddTeamMembers: ", l), s.options.onAddTeamMembers(o.simpleClone(l)), i.enable) {var d,m = i.putTeam(t),f = n.indexOf(s.account) === -1;return f ? d = i.putTeamMembers(u) : (s.logger.warn("team::onAddTeamMembers: user join team", a), m = new r(function (e) {s.api.getTeamMembers({ teamId: a, sync: !0, done: function done() {e();} });})), r.all([d, m]);}}, s.onRemoveTeamMembers = function (e, t, n) {var s = this,i = s.db,a = { team: e, accounts: n };if (s.logger.info("team::onRemoveTeamMembers:", a), s.options.onRemoveTeamMembers(o.simpleClone(a)), i.enable) {if (n.indexOf(s.account) === -1) {var c = i.removeTeamMembersByAccounts(t, n),u = r.resolve();return e && (u = i.putTeam(e)), r.all([c, u]);}return i.leaveTeam(t);}}, s.updateTeamManagers = function (e, t, n, s, i) {var a = this,u = a.db,l = e.attach.members = n.map(function (e) {return { id: c.genId(t, e), type: s ? "manager" : "normal", updateTime: i };}),d = { teamId: "" + t, memberUpdateTime: i };e.attach.team = d;var m = { team: d, accounts: n, isManager: s, members: l };if (a.logger.info("team::updateTeamManagers:", m), a.options.onUpdateTeamManagers(o.simpleClone(m)), u.enable) {var f = u.updateTeam(d),p = u.updateTeamManagers(t, n, s, i);return r.all([f, p]);}}, s.onDismissTeam = function (e, t) {var n = this,r = n.db,s = { teamId: e };if (n.logger.info("team::onDismissTeam:", s), n.options.onDismissTeam(s), r.enable) return r.dismissTeam(e, t);}, s.transferTeam = function (e, t, n, r) {var s = this,i = s.db,a = t.teamId,u = t.memberUpdateTime,l = { id: c.genId(a, n), type: "normal", updateTime: u },d = { id: c.genId(a, r), type: "owner", updateTime: u };e.attach.members = [l, d];var m = { team: t, from: l, to: d };if (s.logger.info("team::transferTeam:", m), s.options.onTransferTeam(o.simpleClone(m)), i.enable) return i.transferTeam(t, n, r);}, s.onUpdateTeamMembersMute = function (e, t, n, s) {var i = this,a = i.db,u = n.map(function (e) {return { id: c.genId(t.teamId, e), account: e, teamId: t.teamId, mute: s, updateTime: t.memberUpdateTime };});e.attach.members = u;var l = { team: t, accounts: n, members: u, mute: s };if (i.logger.info("team::onUpdateTeamMembersMute:", l), i.options.onUpdateTeamMembersMute(o.simpleClone(l)), a.enable) {var d = a.updateTeamMembers(u),m = a.putTeam(t);return r.all([d, m]);}}, s.onHistoryMsgs = function (e) {e.error || (e.obj.msgs = this.message.reverseMsgs(e.content.msgs));}, s.isFilterMsgs = function (e) {return !!e[0].filter;}, s.splitMsgs = function (e, t, n, r) {e.forEach(function (e) {if (e.filter) r.push(e);else switch (e.scene) {case "p2p":t.push(e);break;case "team":n.push(e);}});}, s.markMsgRead = function (e, t) {o.isArray(e) || (e = [e]);var n = this,r = n.db;if (r.enable || n.options.autoMarkRead || t) {var s = [],i = [],a = [];n.splitMsgs(e, s, i, a), n.markP2pMsgsRead(s), n.markTeamMsgsRead(i), n.markFilterMsgsRead(a);}}, s.markP2pMsgsRead = function (e) {if (e.length) {var t = l.idMap.msg.id,n = l.idMap.msg.msg;this.doMarkMsgsRead(t, n, e);}}, s.markTeamMsgsRead = function (e) {if (e.length) {var t = l.idMap.team.id,n = l.idMap.team.teamMsg;this.doMarkMsgsRead(t, n, e);}}, s.markFilterMsgsRead = function (e) {if (e.length) {var t = l.idMap.filter.id,n = l.idMap.filter.filterMsg;this.doMarkMsgsRead(t, n, e);}}, s.markSysMsgRead = function (e, t) {o.isArray(e) || (e = [e]);var n = this,r = n.db;if (r.enable || n.options.autoMarkRead || t) {var s, i;n.isFilterMsgs(e) ? (s = l.idMap.filter.id, i = l.idMap.filter.filterSysMsg) : (s = l.idMap.msg.id, i = l.idMap.msg.sysMsg), n.doMarkMsgsRead(s, i, e);}}, s.doMarkMsgsRead = function (e, t, n) {n && n.length && this.sendCmd("batchMarkRead", { sid: e, cid: t, ids: n.map(function (e) {return e.idServer;}) });};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn,o = n(39),i = n(38),a = n(1);s.onDeleteMsg = function (e) {delete e.obj.sysMsg, e.error || (e.promise = this.deleteLocalMsg(e.obj.msg));}, s.onMsgDeleted = function (e) {if (!e.error) {var t = this,n = t.db,r = o.reverse(e.content.sysMsg);r = t.processDeleteMsgSysMsg(r), t.markSysMsgRead(r), t.deleteLocalMsg(r.msg).then(function () {n.enable && n.updateDeleteMsgTimetag(r.time + 1), t.handleSysMsg(r);});}}, s.processDeleteMsgSysMsg = function (e) {var t = this;return e.msg = {}, ["scene", "from", "to"].forEach(function (t) {e.msg[t] = e[t];}), e.msg.idClient = e.deletedIdClient, e.msg.idServer = e.deletedIdServer, e.msg.time = e.deletedMsgTime, e.msg.fromNick = e.deletedMsgFromNick, e.opeAccount = e.opeAccount || e.from, e.msg.opeAccount = e.opeAccount, t.message.Message.setExtra(e.msg, t.account), e;}, s.onDeleteMsgOfflineRoaming = function (e) {if (!e.error) {var t = this,n = 1 === +e.content.type ? "offline" : "roaming",r = o.reverseSysMsgs(e.content.sysMsgs, { mapper: function mapper(e) {return t.processDeleteMsgSysMsg(e);} });t.logger.info("msg::onDeleteMsgOfflineRoaming: on delete " + n, r), "offline" === n && t.markSysMsgRead(r);var s = e.content.timetag;t.timetags.deleteMsg = s, t.syncResult.deleteMsgTimetag = s;var i = t.putSysMsg(r, "offlineSysMsgs");i.cmd = "deleteMsgSysMsgs " + n, t.syncPromiseArray.push(i), t.syncResult.deleteMsgSysMsgs = t.syncResult.deleteMsgSysMsgs || [], t.syncResult.deleteMsgSysMsgs.push({ type: n, sysMsgs: r });}}, s.deleteMsgOfflineRoaming = function (e, t) {if (!e) return r.resolve();var n = this;n.logger.info("msg::deleteMsgOfflineRoaming: ", e, t);var s = n.db,o = [];return e.forEach(function (e) {e.sysMsgs.forEach(function (e) {var r = n.deleteLocalMsg(e.msg, { cbUpdateSession: function cbUpdateSession(e) {e = n.mergeSession(e), e = a.simpleClone(e), i.trim(e);var r = a.findObjIndexInArray(t, { value: e.id });if (r !== -1 && (t[r] = a.merge({}, t[r], e)), s.enable) return s.updateSession(e);} });o.push(r);});}), r.all(o).then(function () {if (s.enable) return s.updateDeleteMsgTimetag(n.syncResult.deleteMsgTimetag);});}, s.deleteLocalMsg = function (e, t) {var n = this,s = n.db;t = t || {};var o = t.cbUpdateSession || n.updateLocalSession.bind(n);if (s.enable && e) {var i = !1,a = null,c = e.sessionId;return s.getMsgs({ sessionId: c, limit: 1 }).then(function (t) {t && t[0] && t[0].idClient === e.idClient && (i = !0);}).then(function () {return s.deleteMsg(e.idClient);}).then(function () {if (i) return s.getMsgs({ sessionId: c, limit: 1 });}).then(function (e) {if (i) return e && e[0] && (a = e[0]), o({ id: c, lastMsg: a });});}return r.resolve();};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn,o = n(1);s.onOfflineMsgReceipts = function (e) {var t,n = this,s = n.db,o = e.content.msgReceipts,i = n.syncResult.msgReceipts = [],a = [],c = "msgReceipts",u = n.syncResult.sessions || {};o.forEach(function (e) {e.time = +e.time;var o = e.sessionId = "p2p-" + e.from;c += "-" + o, t = r.resolve();var l = u[o];s.enable ? t = s.getSession(o).then(function (t) {if (t = t || l, t && n.shouldUpdateSessionFromMsgReceipt(t, e)) {var r = n.genSessionFromMsgReceipt(t, e),i = n.syncResult.sessions;return i && i[o] && (i = i[o], i.lastMsg && r.lastMsg && i.lastMsg.time > r.lastMsg.time && (r.lastMsg = i.lastMsg)), s.putSession(r).then(function (e) {e && n.cacheSyncedSession(e);});}}) : l && i.push(e), a.push(t);}), t = r.all(a).then(function () {if (s.enable) return s.updateMsgReceiptsTimetag(e.content.timetag);}), t.cmd = c, n.syncPromiseArray.push(t);}, s.mergeSessionAndMsgReceipts = function (e, t) {var n = this,r = {};return e = e || [], t = t || [], e.forEach(function (e) {r[e.id] = e;}), t.forEach(function (t) {var s = r[t.sessionId];if (n.shouldUpdateSessionFromMsgReceipt(s, t)) {var o = n.genSessionFromMsgReceipt(s, t);e = n.api.mergeSessions(e, o);}}), e;}, s.shouldUpdateSessionFromMsgReceipt = function (e, t) {return !e || !e.msgReceiptServerTime || t.time > e.msgReceiptServerTime;}, s.genSessionFromMsgReceipt = function (e, t) {var n = t.time,r = { id: t.sessionId, msgReceiptTime: n, msgReceiptServerTime: n };return e && e.id === t.sessionId && (r = o.merge({}, e, r)), e && e.updateTime || (r.updateTime = n), r;}, s.onMsgReceipt = function (e) {var t = this,n = t.db,s = e.content.msgReceipt;s.time = +s.time;var o = s.idClient,i = r.resolve();n.enable && o && (i = n.getMsgByIdClient(o)), i.then(function (e) {var n;if (e) {if (!e.idServer) return void (t.msgReceiptTasks[o] = s);n = e.time;} else n = s.time;s.msgReceiptTime = n, t.updateSessionMsgReceiptTime(s);});}, s.resolveMsgReceiptTask = function (e) {var t = this,n = t.msgReceiptTasks[e.idClient];n && (n.msgReceiptTime = e.time, this.updateSessionMsgReceiptTime(n));}, s.updateSessionMsgReceiptTime = function (e) {var t = this,n = t.db,r = { id: "p2p-" + e.from, msgReceiptTime: e.msgReceiptTime, msgReceiptServerTime: e.time };n.enable && n.putSession(r), t.onUpdateSession(r);}, s.onSendMsgReceipt = function (e) {var t = this;if (!e.error) {var n = e.obj.msgReceipt,r = +n.time,s = +e.content.msgReceipt.time,o = t.sessionSet["p2p-" + n.to];o.msgReceiptSendTime = Math.min(r, s);}}, s.shouldSendMsgReceipt = function (e) {if (e && "p2p" === e.scene && "success" === e.status) {var t = this.sessionSet[e.sessionId];if (t) {var n = t.msgReceiptSendTime;return !n || n < e.time;}}return !1;}, s.isMsgRemoteRead = function (e) {var t = this;if (e && "p2p" === e.scene && "out" === e.flow && "success" === e.status) {var n = t.sessionSet[e.sessionId];if (n && n.msgReceiptTime) return e.time <= n.msgReceiptTime;}return !1;};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn,o = n(1),i = n(92);s.processNotify = function (e) {var t = this;switch (e.cmd) {case "syncOfflineMsgs":t.onOfflineMsgs(e);break;case "batchMarkRead":break;case "syncOfflineSysMsgs":t.onOfflineSysMsgs(e);break;case "syncRoamingMsgs":t.onRoamingMsgs(e);break;case "syncOfflineFilterMsgs":t.onOfflineMsgs(e, !0);break;case "syncOfflineFilterSysMsgs":t.onOfflineSysMsgs(e, !0);break;case "syncMsgReceipts":t.onOfflineMsgReceipts(e);break;case "syncDonnop":t.onDonnop(e, !0);break;case "syncSessionAck":t.syncSessionAck(e);break;case "syncRobots":t.onRobots(e);break;case "syncBroadcastMsgs":t.onBroadcastMsgs(e);}}, s.onDonnop = function (e, t) {if (!e.error) {var n = this,r = n.db,s = i.reverse(e.content.donnop);n.mergeDonnop(s);var o = n.dbDonnop();if (t) {var a = e.content.timetag;n.timetags.donnop = a, r.enable && (o = o.then(function () {return n.db.updateDonnopTimetag(a);})), o.cmd = "donnop", n.syncPromiseArray.push(o);} else n.onPushNotificationMultiportConfigUpdate();}}, s.onUpdateDonnop = function (e) {var t = this;if (!e.error) {var n = e.obj;n && (t.mergeDonnop(o.filterObj(n, ["shouldPushNotificationWhenPCOnline"])), t.dbDonnop(), t.onPushNotificationMultiportConfigUpdate());}}, s.getPushNotificationMultiportConfig = function () {var e = this;return o.merge({}, e.pushNotificationMultiportConfig);}, s.mergeDonnop = function (e) {var t = this;t.pushNotificationMultiportConfig = o.merge({}, t.pushNotificationMultiportConfig, e);}, s.dbDonnop = function () {var e = this,t = e.db;return t.enable ? e.db.setDonnop(e.pushNotificationMultiportConfig) : r.resolve();}, s.onPushNotificationMultiportConfigUpdate = function () {var e = this;setTimeout(function () {var t = e.getPushNotificationMultiportConfig();e.logger.info("link::onPushNotificationMultiportConfigUpdate:", t), e.options.onPushNotificationMultiportConfigUpdate(t);});};}, function (e, t, n) {"use strict";var r = n(5).fn,s = n(1);r.onRobots = function (e) {var t = this,n = e.content;if (s.isFunction(t.options.onrobots) && Array.isArray(n.robots)) {var r = n.robots.filter(function (e) {return !!e.botid;});r.length > 0 && t.options.onrobots(r || []);}};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn,o = n(1),i = n(38),a = n(6);s.mergeSession = function (e) {e = o.copyWithNull(e);var t = this.sessionSet,n = e.id,r = t[n];if (r && r.lastMsg && e && e.lastMsg && e.lastMsg.isLocal) {var s = r.lastMsg.time || 0,i = e.lastMsg.time || 0;if (i < s) return r;}return t[n] = o.merge(r, e), e = t[n], o.undef(e.unread) && (e.unread = 0), e;}, s.mergeSessions = function (e) {var t = this;e.forEach(function (e) {t.mergeSession(e);});}, s.deleteLocalSession = function (e) {var t = this;o.isArray(e) || (e = [e]), e.forEach(function (e) {delete t.sessionSet[e];});}, s.onDeleteSessions = function (e) {e.obj = e.obj.sessions.map(function (e) {return i.parse(e);});}, s.onUpdateSession = function (e) {var t = this;return new r(function (n) {e ? (e = t.mergeSession(e), e = o.simpleClone(e), i.trim(e), i.isComplete(e) && setTimeout(function () {t.logger.info("session::onUpdateSession:", e.id, o.simpleClone(e)), t.options.onupdatesession(e), n(e);}, 0)) : n(e);});}, s.setCurrSession = function (e) {var t = this;e = "" + e, t.currSessionId = e, t.logger.info("session::setCurrSession:", e);}, s.findSession = function (e) {return this.sessionSet[e];}, s.resetSessionUnread = function (e) {function t() {n = { id: e, unread: 0 }, r.onUpdateSession(n);}e = "" + e;var n,r = this,s = r.db;if (!r.findSession(e)) return void r.logger.warn("session::resetSessionUnread: no session " + e);if (s.enable && s.resetSessionUnread(e), !r.options.autoMarkRead && r.sessionUnreadMsgs && r.sessionUnreadMsgs[e]) {var o = r.sessionUnreadMsgs[e];r.markMsgRead(o, !0), r.sessionUnreadMsgs[e] = [];}t();}, s.insertLocalSession = function (e) {var t = this,n = t.db,s = t.sessionSet;return new r(function (c, u) {var l = e.scene,d = e.to,m = l + "-" + d,f = t.findSession(m);if (f) u(a.sessionExist({ callFunc: "session::insertLocalSession", session: f }));else {var p;if (o.isNumber(e.updateTime)) p = e.updateTime;else {var g,y = [];for (var h in s) {s.hasOwnProperty(h) && (g = s[h], o.isNumber(g.updateTime) && y.push(g.updateTime));}p = Math.max.apply(Math, y) + 1, p = Math.max(p, +new Date());}var v = r.resolve();n.enable && (v = n.getMsgs({ sessionId: m, limit: 1 })), v.then(function (e) {if (o.isArray(e) && 1 === e.length) {var r = e[0];f = i.genSessionByMsg(r), f.updateTime = p;} else f = { id: m, scene: l, to: d, updateTime: p, lastMsg: null };n.enable ? n.putSession(f).then(c, u) : c(f), t.onUpdateSession(f);});}});}, s.updateLocalSession = function (e, t) {var n = this;return new r(function (s, i) {var c = n.db,u = n.findSession(e.id);if (u) {var l = r.resolve(),d = o.filterObj(e, "id lastMsg localCustom");c.enable && (l = c.updateSession(d)), l.then(function (e) {return n.onUpdateSession(e, t);}).then(s, function (e) {i({ callFunc: "session::updateLocalSession", event: e });});} else i(a.sessionNotExist({ sessionId: e.id, callFunc: "session::updateLocalSession" }));});};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn;s.syncSessionAck = function (e) {var t = this,n = t.db,s = r.resolve();[[e.content.p2p, "p2p"], [e.content.team.m_map, "team"]].forEach(function (e) {var r = e[0],o = e[1];Object.keys(r).forEach(function (e) {var i = o + "-" + e,a = { id: i, ack: r[e] };n.enable && (s = s.then(function () {return n.putSession(a);}).then(function () {t.markUnreadBySessionAck({ sessionId: i, ack: r[e] });})), t.mergeSession(a);});}), t.logger.warn("session::syncSessionAck: parse offline session ack", t.sessionSet);var o = e.content.timetag;n.enable && (s = s.then(function () {return t.db.updateSessionAck(o);})), s.cmd = "sessionAck", t.syncPromiseArray.push(s);}, s.onMarkSessionAck = function (e) {e.error || this.storeSessionAck(e.obj);}, s.syncMarkSessionAck = function (e) {this.storeSessionAck(e.content);}, s.storeSessionAck = function (e) {var t = this,n = t.options.syncSessionUnread;if (n) {var r = t.db,s = 0 === e.scene ? "p2p" : "team",o = s + "-" + e.to,i = e.timetag,a = t.findSession(o) || {},c = a.ack || 0;if (i <= c) return void t.logger.warn("session::storeSessionAck: ack <= ackInMemory", i);var u = { id: o, ack: i };t.mergeSession(u), r.enable && r.updateSession(u), t.logger.info("session::storeSessionAck:", u), t.markUnreadBySessionAck({ sessionId: o, ack: u.ack });}}, s.markUnreadBySessionAck = function (e) {var t = e.sessionId,n = e.ack,r = this,s = r.db;if (s.enable) r.pushMsgTask(function () {return s.getMsgCountAfterAck({ shouldCountNotifyUnread: r.options.shouldCountNotifyUnread, sessionId: t, ack: n }).then(function (e) {var n = { id: t, unread: e };return r.logger.log("session::markUnreadBySessionAck: db.getMsgCountAfterAck done"), r.syncing && r.cacheSyncedSession(n), r.onUpdateSession(n), s.updateSession(n);});});else {var o = r.findSession(t);if (o) {var i = o.unreadMsgs;if (i && i.length) {for (var a = 0, c = [], u = i.length - 1; u >= 0; u--) {var l = i[u];if (!(l.time > n)) break;a++, c.push(l);}o.unreadMsgs = c, o.unread = a, r.logger.info("session::markUnreadBySessionAck: unread " + a), r.onUpdateSession(o);}}}};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn,o = n(1),i = n(6),a = o.undef,c = o.objs2ids,u = o.objs2accounts,l = o.teams2ids,d = n(38);s.beforeSync = function () {var e = this,t = e.db;return t.enable ? t.clearSendingMsgs() : r.resolve();}, s.syncData = function () {function e(e) {t.syncPromiseArray = [], t.syncResult = {}, t.syncTeamMembersPromiseArray = [], t.syncTeamMembersResult = {}, o.verifyBooleanWithDefault(r, "syncRelations syncFriends syncFriendUsers syncTeams syncRoamingMsgs syncMsgReceipts syncExtraTeamInfo", !0, "", "sync::syncData"), o.verifyBooleanWithDefault(r, "syncFilter syncTeamMembers", !1, "", "sync::syncData");var n = {};e = e || {}, window._nimForceSyncIM && (t.logger.warn("sync::syncData: nimForceSyncIM"), delete e.teams, window._nimForceSyncIM = !1), n.myInfo = e.myInfo || 0, n.offlineMsgs = 0, r.syncRelations && (n.relations = e.relations || 0), r.syncFriends && (n.friends = e.friends || 0), r.syncFriendUsers && (n.friendUsers = e.friendUsers || 0), r.syncRobots && (n.robots = e.robots || 0), r.syncTeams && (n.teams = e.teams || 0), r.syncRoamingMsgs && (n.roamingMsgs = e.roamingMsgs || 0), r.syncMsgReceipts && (n.msgReceipts = e.msgReceipts || 0), r.syncExtraTeamInfo && (n.myTeamMembers = e.myTeamMembers || 0), r.syncSessionUnread && (n.sessionAck = e.sessionAck || 0), r.syncBroadcastMsgs && (n.broadcastMsgs = e.broadcastMsg || 0), n.donnop = e.donnop || 0, n.deleteMsg = e.deleteMsg || 0, r.syncFilter && (n.filterMsgs = 0), t.sendCmd("sync", { sync: n }, t.onSyncData.bind(t));}var t = this,n = t.db,r = t.options,s = n.enable;t.notifyLogin(), t.syncing = !0, s ? t.beforeSync().then(function () {return t.db.getTimetags();}).then(function (t) {e(t);}, function () {e();}) : e(t.timetags);}, s.onSyncData = function (e, t) {e && this.syncRetryTimes > 3 && (this.syncRetryTimes = 0, e.callFunc = "sync::onSyncData", this.onCustomError("SYNC_DATA_ERROR", e));}, s.processSync = function (e) {var t = this;switch (t.syncRetryTimes = t.syncRetryTimes || 0, t.syncRetryTimes++, e.cmd) {case "syncDone":e.error ? t.syncRetryTimes > 3 || t.syncData() : (t.timetags.sync = e.content.timetag, t.onSyncDone());break;case "syncTeamMembersDone":t.onSyncTeamMembersDone();}}, s.onSyncDone = function (e) {function t() {if (!$) return void B.logger.warn("sync::onSyncDone: after sync --no promiseArray");if (B.logger.info("sync::onSyncDone: after sync", o.promises2cmds($)), $ = [], v = X.blacklist || [], b = X.invalidBlacklist || [], M = X.mutelist || [], T = X.invalidMutelist || [], S = X.friends, k = X.invalidFriends || [], w = X.myInfo, C = X.users, I = X.teams, _ = X.invalidTeams || [], O = X.sessions, x = X.msgReceipts, E = X.roamingMsgs, P = X.offlineMsgs, A = X.offlineFilterMsgs, F = X.offlineSysMsgs, j = X.offlineCustomSysMsgs, N = X.offlineFilterSysMsgs, U = X.offlineFilterCustomSysMsgs, D = X.broadcastMsgs, L = X.sysMsgUnread, O) {var e = [];Object.keys(O).forEach(function (t) {e.push(O[t]);}), O = e.sort(function (e, t) {return t.updateTime - e.updateTime;});}var t = r.resolve();W && (t = n().then(function (e) {var t = {};e.forEach(function (e) {var n = e.sessionId;t[n] || (t[n] = !0, B.markUnreadByMsgsPromise(n));});})), t.then(function () {W && !B.hasSynced && (B.hasSynced = !0, s());var e = $.filter(function (e) {return "sessionAck" === e.cmd;});0 === e.length && e.push(r.resolve());var t = $.filter(function (e) {return "sessionAck" !== e.cmd;});0 === t.length && t.push(r.resolve()), r.all(t).then(function () {return r.all(e);}).then(m).then(p, function (e) {e.callFunc = "sync::onSyncDone", e.message = "taskAfterSync syncSessionAckPromise 出错", B.onCustomError("SYNC_SESSION_ACK_ERROR", e);});});}function n() {var e,t = [],n = [];return E && E.forEach(function (e) {n = [].concat(n, e.msgs);}), P && P.forEach(function (e) {n = [].concat(n, e.msgs);}), e = q.putMsg(n), t.push(e), r.all(t).then(function () {return n;});}function s() {H.syncRelations && (h = q.getRelations().then(function (e) {v = e[0], M = e[1], v.invalid = b, M.invalid = T;}, function (e) {return e._msg = "on relations error", e;}), $.push(h)), H.syncFriends && (h = q.getFriends().then(function (e) {S = e, S.invalid = k;}, function (e) {return e._msg = "on friends error", e;}), $.push(h)), a(w) && (h = q.getUser(B.account).then(function (e) {w = e;}, function (e) {return e._msg = "on myInfo error", e;}), $.push(h)), H.syncFriendUsers && (h = q.getFriends().then(function (e) {return e.map(function (e) {return e.account;});}).then(function (e) {return q.getUsers(e);}).then(function (e) {C = e;}, function (e) {return e._msg = "on users error", e;}), $.push(h)), H.syncTeams && (h = q.getTeams().then(function (e) {I = e, I.invalid = _;}, function (e) {return e._msg = "on teams error", e;}), $.push(h)), h = q.getTeamMembersByAccount(B.account).then(function (e) {B.mergeMyTeamMembers(e);}), $.push(h), h = q.getDonnop().then(function (e) {B.mergeDonnop(e);}), $.push(h), h = q.getSessions().then(function (e) {O = e;}, function (e) {return e._msg = "on sessions error", e;}), $.push(h), h = q.getSysMsgUnread().then(function (e) {L = e;}, function (e) {return e._msg = "on sysMsgUnread error", e;}), $.push(h);}function m() {B.logger.info("sync::onSyncDone: taskAfterSync"), f();var e = [];return e.push(B.deleteMsgOfflineRoaming(X.deleteMsgSysMsgs, O)), r.all(e);}function f() {if (X.deleteMsgSysMsgs) {var e = {};E && E.forEach(function (t) {e[t.sessionId] = t;});var t = {};P && P.forEach(function (e) {t[e.sessionId] = e;});var n = B.api;X.deleteMsgSysMsgs.forEach(function (r) {r.sysMsgs.forEach(function (r) {var s = r.msg,o = s.sessionId;[e, t].forEach(function (e) {e[o] && (e[o].msgs = n.cutMsgs(e[o].msgs, s));});});}), q.enable || [E, P].forEach(function (e) {e && e.forEach(function (e) {if (e.msgs.length) {var t = B.genSessionByMsgs(e.msgs);B.cacheSyncedSession(t), O = n.mergeSessions(O, t);} else O = n.cutSessions(O, { id: e.sessionId });});});}}function p() {setTimeout(g, 0);}function g() {var e,t,n = [];v && (B.logger.info("sync::notifyDataAsync: on blacklist", u(v), v), H.onblacklist(v)), M && (B.logger.info("sync::notifyDataAsync: on mutelist", u(M), M), H.onmutelist(M)), S && (B.logger.info("sync::notifyDataAsync: on friends", u(S), S), H.onfriends(S)), w && (B.logger.info("sync::notifyDataAsync: on myInfo", w), B.myInfo = w, H.onmyinfo(o.copy(w))), C && (C.forEach(function (e) {B.mergeUser(e);}), B.logger.info("sync::notifyDataAsync: on users", u(C), C), H.onusers(C)), I && (B.logger.info("sync::notifyDataAsync: on teams", l(I), I), H.onteams(I)), x && (!B.hasSynced && O && O.length || B.hasSynced) && (O = B.mergeSessionAndMsgReceipts(O, x)), O && O.length && (O.forEach(function (e) {B.syncResult.sessions && B.syncResult.sessions[e.id] && "number" == typeof B.syncResult.sessions[e.id].unread && (e.unread = B.syncResult.sessions[e.id].unread), B.mergeSession(e), d.trim(e);}), B.logger.info("sync::notifyDataAsync: on sessions", c(O), O), H.onsessions(O)), E && E.forEach(function (e) {n.push(e.timetag), t = e.msgs, t.length && (B.logger.info("sync::notifyDataAsync: on roaming msgs", e.sessionId, t.length, t), H.onroamingmsgs(e));}), P && P.forEach(function (e) {n.push(e.timetag), t = e.msgs, t.length && (B.logger.info("sync::notifyDataAsync: on offline msgs", e.sessionId, t.length, t), H.onofflinemsgs(e));}), A && A.forEach(function (e) {n.push(e.timetag), t = e.msgs, t.length && (B.logger.info("sync::notifyDataAsync: on offline filter msgs", e.sessionId, t.length, t), H.onofflinefiltermsgs(t));});var r = [],s = [];X.deleteMsgSysMsgs && X.deleteMsgSysMsgs.forEach(function (e) {"roaming" === e.type ? r = r.concat(e.sysMsgs) : s = s.concat(e.sysMsgs);}), r.length && (R = R || [], R = R.concat(r)), s.length && (F = F || [], F = F.concat(s)), R && (B.logger.info("sync::notifyDataAsync: on roaming sys msgs", R.length, R), H.onroamingsysmsgs(R)), F && (B.logger.info("sync::notifyDataAsync: on offline sys msgs", F.length, F), H.onofflinesysmsgs(F)), N && (B.logger.info("sync::notifyDataAsync: on offline filter sys msgs", N.length, N), H.onofflinefiltersysmsgs(N)), j && (B.logger.info("sync::notifyDataAsync: on offline custom sys msgs", j.length, j), H.onofflinecustomsysmsgs(j)), U && (B.logger.info("sync::notifyDataAsync: on offline filter custom sys msgs", U.length, U), H.onofflinefiltercustomsysmsgs(U)), L && (L = o.merge({}, B.sysMsgUnread, L), B.sysMsgUnread = o.merge({}, L), B.logger.info("sync::notifyDataAsync: on sysMsgUnread", L), H.onsysmsgunread(L));var i = B.getPushNotificationMultiportConfig();B.logger.info("sync::notifyDataAsync: on pushNotificationMultiportConfig", i), H.onPushNotificationMultiportConfig(i), n.length ? (e = Math.max.apply(Math, n), B.updateRoamingMsgTimetag(e).then(y, y)) : y(), B.syncPromiseArray = null, B.syncResult = null;}function y() {if (B.processUnsettledMsgs(), B.processUnsettledSysMsgs(), B.syncing = !1, H.onsyncdone(), H.syncTeamMembers && I && I.length) throw new i("sync team members api deprecated!");}var h,v,b,M,T,S,k,w,C,I,_,O,x,E,P,A,R,F,j,N,U,D,L,B = this,q = B.db,W = q.enable,H = B.options,$ = B.syncPromiseArray,X = B.syncResult;if ($ && $.length) {var V = $.filter(function (e) {return "sessionAck" === e.cmd;});0 === V.length && V.push(r.resolve());var J = $.filter(function (e) {return "sessionAck" !== e.cmd;});0 === J.length && J.push(r.resolve()), r.all(J).then(function () {return r.all(V);}, function (e) {e.callFunc = "sync::onSyncDone", e.message = "afterSync syncNormalPromise 出错", B.onCustomError("SYNC_NORMAL_ERROR", e);}).then(t, function (e) {e.callFunc = "sync::onSyncDone", e.message = "afterSync syncSessionAckPromise 出错", B.onCustomError("SYNC_SESSION_ACK_ERROR", e);})["catch"](function (e) {B.syncData();});} else t();}, s.syncTeamMembers = function (e) {function t(t) {var r = {};t = t || {}, e.forEach(function (e) {r[e.teamId] = 0;}, n), n.sendCmd("syncTeamMembers", { sync: r }, n.onSyncTeamMembers.bind(n));}var n = this;t(n.timetags);}, s.onSyncTeamMembers = function (e, t) {e.callFunc = "sync::onSyncTeamMembers", e.message = "同步群成员错误", this.onCustomError("SYNC_TEAM_MEMBERS_ERROR", e);}, s.onSyncTeamMembersDone = function () {function e() {l.logger.log("sync::onSyncTeamMembersDone: afterSync", o.promises2cmds(p)), p = [], d.enable && !l.hasSyncedTeamMembers ? (l.hasSyncedTeamMembers = !0, t()) : n();}function t() {return m.syncTeams && m.syncTeamMembers ? void d.getTeams().then(function (e) {e.forEach(function (e) {var t = e.teamId;c = new r(function (e, n) {l.api.getTeamMembers({ teamId: t, done: function done(r, s) {r && n({ callFunc: "sync::getTeamMembers: teamId-" + t, message: "sync team members error" }), f[t] = s.members || [], e();} });}), p.push(c);}), p.length ? r.all(p).then(n, function (e) {e.callFunc = "sync::onSyncTeamMembersDone", e.message = "pullFullData promiseArray notifyData 错误", l.onCustomError("SYNC_TEAM_MEMBERS_ERROR", e);}) : n();}, function (e) {e.callFunc = "sync::onSyncTeamMembersDone", e.message = "pullFullData getTeams 错误", l.onCustomError("SYNC_TEAM_MEMBERS_ERROR", e);}) : a();}function n() {setTimeout(s, 0);}function s() {var e, t;Object.keys(f).forEach(function (n) {n.indexOf("invalid") === -1 && (e = f[n], t = f[n + "-invalid"] || [], e.invalid = t, i(n, e));}), a();}function i(e, t) {l.logger.info("sync::onSyncTeamMembersDone: onTeamMembers", e, u(t), t), m.onteammembers({ teamId: e, members: t });}function a() {l.logger.info("sync::onSyncTeamMembersDone: bingo"), m.onsyncteammembersdone(), l.syncTeamMembersResult = null, l.syncTeamMembersPromiseArray = null;}var c,l = this,d = l.db,m = l.options,f = l.syncTeamMembersResult,p = l.syncTeamMembersPromiseArray;p.length ? r.all(p).then(e, function (e) {e.callFunc = "sync::onSyncTeamMembersDone", e.message = "同步群成员 syncTeamMembersPromiseArray 错误", l.onCustomError("SYNC_TEAM_MEMBERS_ERROR", e);})["catch"](function (t) {l.logger.log("sync::onSyncTeamMembersDone: syncTeamMembersPromiseArray promise ", t), e();}) : e();};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn,o = n(1),i = n(39);s.splitSysMsgs = function (e, t) {for (var n, r = e.length - 1; r >= 0; r--) {n = e[r], i.isCustom(n) && (e.splice(r, 1), t.push(n));}}, s.onOfflineSysMsgs = function (e, t) {var n = this,r = e.content.sysMsgs.map(function (e) {return e = i.reverse(e), t && (e.filter = !0), e;});r = r.reverse(), n.markSysMsgRead(r);var s = [];n.splitSysMsgs(r, s);var o = t ? "offlineFilterSysMsgs" : "offlineSysMsgs",a = t ? "offlineFilterCustomSysMsgs" : "offlineCustomSysMsgs";if (r.length) {var c = n.putSysMsg(r, "offlineSysMsgs").then(function (e) {r = e, r.length && (n.logger.info("sysmsg::onOfflineSysMsgs: ", o, r.length, r), n.syncResult[o] = n.syncResult[o] || [], n.syncResult[o] = n.syncResult[o].concat(r));});c.cmd = "sysMsgs", n.syncPromiseArray.push(c);}s.length && (n.logger.info("sysmsg::onOfflineSysMsgs: ", a, s), n.syncResult[a] = n.syncResult[a] || [], n.syncResult[a] = n.syncResult[a].concat(s));}, s.onSendSysMsg = function (e, t) {var n = this,r = e.obj;n.completeSysMsg(r), e.error ? r.status = "fail" : r.status = "success", r = i.reverse(r), t && (e.obj.filter = !0), e.obj = r;}, s.completeSysMsg = function (e) {return e.from = this.account, e;}, s.onSysMsg = function (e, t) {var n = this,r = i.reverse(e.content.sysMsg);n.markSysMsgRead(r), t && (r.filter = !0), i.isCustom(r) ? (n.logger.info("sysmsg::onSysMsg: on customSysMsg", r), n.options.oncustomsysmsg(r)) : n.syncing ? n.unhandledSysMsgs.push(r) : n.handleSysMsg(r);}, s.handleSysMsg = function (e) {var t = this,n = e.type,s = e.from;t.sysMsgPromise = t.sysMsgPromise.then(function () {return t.putSysMsg(e, "onSysMsg");}).then(function (t) {e = t[0];}).then(function () {if (e) {var o,i = r.resolve();switch (n) {case "addFriend":o = { type: "addFriend", account: s }, i = t.onFriendRequest(o);break;case "passFriendApply":o = { type: "passFriendApply", account: s }, i = t.onFriendRequest(o);break;case "deleteFriend":i = t.onDeleteFriend({ account: s });}return o && o.friend && (e.friend = o.friend), i;}}).then(function () {e && (t.logger.info("sysmsg::handleSysMsg: ", n, e), setTimeout(function () {t.options.onsysmsg(e);}, 0));});}, s.putSysMsg = function (e, t) {if (o.isArray(e) || (e = [e]), e[0].filter) return r.resolve(e);var n = this,s = n.db,i = s.enable,a = r.resolve(),c = [];return a = a.then(function () {return i ? s.putSysMsg(e) : e;}).then(function (t) {var r = [];e.forEach(function (e) {n.checkSysMsgUnique(e) && r.push(e);}), e = r, c = i ? t : e;}), a = a.then(function () {return n.getSysMsgUnread().then(function (r) {return c.length || (c = e, c.backward = !0), n.updateSysMsgUnread(c, r, 1).then(function (e) {"offlineSysMsgs" === t && (n.syncResult.sysMsgUnread = e), "onSysMsg" === t && n.onUpdateSysMsgUnread(e);});});}), a.then(function () {return e;});}, s.checkSysMsgUnique = o.genCheckUniqueFunc("idServer"), s.getSysMsgUnread = function () {var e = this,t = e.db;return new r(function (n) {t.enable ? t.getSysMsgUnread().then(function (e) {n(e);}, function () {n(e.sysMsgUnread);}) : n(e.sysMsgUnread);});}, s.updateSysMsgUnread = function (e, t, n) {if (o.isArray(e) || (e = [e]), !e.length) return r.resolve(t);t = t || {};var s,a = this,c = a.db;return e.forEach(function (e) {(n > 0 && !e.read || n < 0 && e.read) && (s = e.type, t[s] = (t[s] || 0) + n);}), t = i.completeUnread(t), a.sysMsgUnread = t, c.enable && !e.backward ? c.updateSysMsgUnread(t) : r.resolve(t);}, s.reduceSysMsgUnread = function (e) {var t = this;return t.getSysMsgUnread().then(function (n) {return t.updateSysMsgUnread(e, n, -1);}).then(function (e) {t.onUpdateSysMsgUnread(e);});}, s.onUpdateSysMsgUnread = function (e) {var t = this;setTimeout(function () {t.logger.info("sysmsg::onUpdateSysMsgUnread:", e), t.options.onupdatesysmsgunread(e);}, 0);}, s.updateSysMsg = function (e) {var t,n = this,s = n.db;t = s.enable ? s.updateSysMsg(e) : r.resolve(e), t.then(function (e) {n.onUpdateSysMsg(e);});}, s.onUpdateSysMsg = function (e) {var t = this;setTimeout(function () {o.isArray(e) || (e = [e]), e.forEach(function (e) {t.logger.info("sysmsg::onUpdateSysMsg:", e), t.options.onupdatesysmsg(e);});}, 0);}, s.processUnsettledSysMsgs = function () {var e = this;e.unhandledSysMsgs.forEach(function (t) {e.handleSysMsg(t);}), e.resetUnsettledSysMsgs();};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn,o = n(1),i = o.objs2accounts,a = o.teams2ids,c = n(40),u = n(34);s.processTeam = function (e) {var t = this,n = e.error,r = void 0,s = void 0,o = void 0;switch (e.cmd) {case "createTeam":if (r = e.obj.team, n || (r = e.content.team), r = c.reverse(r), e.obj.team = r, o = u.assembleOwner(r), e.obj.owner = o, !n) {var i = { team: r, owner: o };t.logger.info("team::processTeam: create team", i), t.options.onCreateTeam(i), t.onCreateTeam(r, o);}break;case "syncCreateTeam":r = c.reverse(e.content.team), o = u.assembleOwner(r), t.logger.info("team::processTeam: sync createTeam", r, o), t.options.onsynccreateteam(r, o), t.onCreateTeam(r, o);break;case "sendTeamMsg":t.onSendMsg(e);break;case "teamMsg":t.onMsg(e);break;case "teamMsgs":t.onMsgs(e);break;case "addTeamMembers":case "removeTeamMembers":case "leaveTeam":case "dismissTeam":case "addTeamManagers":case "removeTeamManagers":case "transferTeam":break;case "updateInfoInTeam":n || (s = e.obj, s.account = t.account, s.id = u.genId(s.teamId, s.account), s = u.reverse(s), e.obj = s, t.mergeMyTeamMembers(s), t.onUpdateTeamMember(s));break;case "updateNickInTeam":e.obj = u.reverse(e.obj);break;case "updateTeam":e.obj = c.reverse(e.obj, !0);
          break;case "applyTeam":e.error || (e.obj = c.reverse(e.content.team));break;case "passTeamApply":t.updateTeamSysMsgState(e, "passed");break;case "rejectTeamApply":t.updateTeamSysMsgState(e, "rejected");break;case "acceptTeamInvite":t.updateTeamSysMsgState(e, "passed"), e.error || (e.obj = c.reverse(e.content.team));break;case "rejectTeamInvite":t.updateTeamSysMsgState(e, "rejected");break;case "getTeam":e.error || (e.obj = c.reverse(e.content.team));break;case "getTeams":t.onTeams(e);break;case "getTeamMembers":t.onTeamMembers(e);break;case "syncTeams":t.onTeams(e);break;case "syncTeamMembers":t.onTeamMembers(e);break;case "getTeamHistoryMsgs":case "searchTeamHistoryMsgs":t.onHistoryMsgs(e);break;case "syncSendTeamMsg":t.onMsg(e);break;case "notifyTeamMsgReads":t.onTeamMsgReceipt(e);break;case "syncUpdateTeamMember":s = u.reverse(e.content.teamMember), t.onUpdateTeamMember(s), s.account === t.account && t.mergeMyTeamMembers(s);break;case "updateMuteStateInTeam":break;case "getMyTeamMembers":e.error || (e.obj = u.reverseMembers(e.content.teamMembers));break;case "getMutedTeamMembers":e.error || (e.obj = { teamId: e.obj.teamId, members: u.reverseMembers(e.content.teamMembers) });break;case "syncMyTeamMembers":t.onSyncMyTeamMembers(e);}}, s.onCreateTeam = function (e, t) {var n = this.db;n.enable && (n.putTeam(e), n.putTeamMembers(t));}, s.onTeams = function (e) {function t() {m && d.forEach(function (e) {e = c.reverse(e), e.validToCurrentUser ? f.push(e) : p.push(e);}), i.logger.info("team::onTeams: parseData", a(f), f, "invalid", a(p), p), d.length ? (m = !0, o = e.content.timetag) : m = !1;}function n(t, n) {e.promise = new r(function (e, r) {function a() {l ? (s(), e(), t()) : u.getTeams().then(function (n) {f = n, s(), e(), t();}).then(void 0, function (e) {e.message = "db.getTeams error", e.callFunc = "team::afterMergeData", r(e), n(e);});}m ? u.mergeTeams(f, p, o).then(function () {a();}).then(void 0, function (e) {var t = { callFunc: "team::onTeams:mergeData", message: "db.mergeTeams error", event: e };r(t), n(t);}) : (i.logger.warn("team::onTeams:mergeData: no teams need merge"), a());}).then(void 0, function (e) {throw e.message = "merge teams data error", e.callFunc = "team::mergeData", n(e), e;});}function s() {i.timetags.teams = o, f.invalid = p, l ? (i.syncResult.teams = f, i.syncResult.invalidTeams = p) : (i.logger.info("team::onTeams: not in syncing, get teams", a(f), f), e.obj = f);}e.content = e.content || {};var o,i = this,u = i.db,l = i.packetFromSync(e),d = e.content.teams || [],m = !0,f = [],p = [];if (e.error) switch (e.error.code) {case 803:e.error = null, m = !1;}var g = new r(function (r, o) {e.error ? l && o(e.error) : (t(), u.enable ? n(r, o) : (s(), r()));});l && (g.cmd = "teams", i.syncPromiseArray.push(g));}, s.onTeamMembers = function (e) {function t() {d && l.forEach(function (e) {e = u.reverse(e), e.valid ? m.push(e) : f.push(e);}), a.logger.warn("team::onTeamMembers: parseData", o, i(m), m, "invalid", i(f), f), l.length ? (d = !0, s = e.content.timetag) : d = !1;}function n() {m.invalid = f, c ? (a.syncTeamMembersResult[o] = m, a.syncTeamMembersResult[o + "-invalid"] = f, a.timetags["team-" + o] = s) : (a.logger.info("team::onTeamMembers: not syncing, get members", o, i(m), m), e.obj = { teamId: o, members: m });}e.content = e.content || {};var s,o,a = this,c = (a.db, a.packetFromSync(e)),l = e.content.members || [],d = !0,m = [],f = [];if (e.obj && (o = e.obj.teamId), o || (o = e.content.teamId), o = "" + o, e.error) switch (e.error.code) {case 406:e.error = null, d = !1;}var p = new r(function (r, s) {e.error ? c && s({ callFunc: "team::onTeamMembers", event: e.error, message: "teamId-" + o + " 获取群成员错误" }) : (t(), n(), r());});c && (p.cmd = o, a.syncTeamMembersPromiseArray.push(p));}, s.onUpdateTeamMember = function (e) {var t = this;e.updateTime || (e.updateTime = +new Date()), t.logger.info("team::onUpdateTeamMember: ", e), t.options.onupdateteammember(o.simpleClone(e));var n = { teamId: e.teamId, memberUpdateTime: e.updateTime };t.onUpdateTeam(n);var r = this.db;r.enable && r.updateTeamMember(e);}, s.onUpdateTeam = function (e) {var t = this;t.logger.info("team::onUpdateTeam:", e), t.options.onUpdateTeam(o.simpleClone(e));var n = t.db;n.enable && n.updateTeam(e);}, s.onSyncMyTeamMembers = function (e) {var t = this,n = t.db,r = u.reverseMembers(e.content.teamMembers);if (t.logger.info("team::onSyncMyTeamMembers:", r), n.enable) {var s = n.putTeamMembers(r).then(function () {return n.updateMyTeamMembersTimetag(e.content.timetag);});s.cmd = "myTeamMembers", t.syncTeamMembersPromiseArray.push(s);}t.mergeMyTeamMembers(r);}, s.mergeMyTeamMembers = function (e) {o.isArray(e) || (e = [e]);var t = this,n = t.myTeamMembersMap = t.myTeamMembersMap || {};e.forEach(function (e) {var t = e.teamId;n[t] = o.merge(n[t], e);}), t.logger.info("team::mergeMyTeamMembers:", n);}, s.notifyForNewTeamMsg = function (e) {o.isArray(e) || (e = [e]);var t = this,n = this.myTeamMembersMap || {},s = {},i = [];e.forEach(function (e) {o.exist(n[e]) ? s[e] = !n[e].muteTeam : i.push(e);});var a = r.resolve(s);return i.length && (a = t.api.getMyTeamMembers({ teamIds: i, promise: !0 }).then(function (e) {return t.mergeMyTeamMembers(e), e.forEach(function (e) {s[e.teamId] = !e.muteTeam;}), s;})), a;}, s.updateTeamSysMsgState = function (e, t) {var n,r = e.error;r && (t = "error", r = o.filterObj(r, "code message")), n = { idServer: e.obj.idServer, state: t }, r && (n.error = r), this.updateSysMsg(n);}, s.onTeamMsgReceipt = function (e) {var t = e.content,n = e.error;n && this.logger.error("team::onTeamMsgReceipt:", n), t && t.teamMsgReceipts && this.options.onTeamMsgReceipt(t);};}, function (e, t, n) {"use strict";var r = n(2).Promise,s = n(5).fn,o = n(1),i = o.objs2accounts,a = n(235),c = n(64);s.processUser = function (e) {var t,n = this,r = n.db,s = e.obj,o = e.error,i = e.content;switch (e.cmd) {case "markInBlacklist":o || n.markInBlacklist(s);break;case "syncMarkInBlacklist":n.markInBlacklist(i, !0);break;case "markInMutelist":o || n.markInMutelist(s);break;case "syncMarkInMutelist":n.markInMutelist(i, !0);break;case "getRelations":o || n.onRelations(e);break;case "syncMyInfo":n.onMyInfo(e, !0);break;case "updateMyInfo":o || (s.updateTime = i.timetag, n.onUpdateMyInfo(e, s));break;case "syncUpdateMyInfo":n.onUpdateMyInfo(e, i.user, !0);break;case "getUsers":o || (t = i.users.map(function (e) {return e = c.reverse(e), n.mergeUser(e), e;}), e.obj = t, r.enable && r.putUsers(t));break;case "updateDonnop":n.onUpdateDonnop(e);break;case "syncUpdateDonnop":n.onDonnop(e, !1);}}, s.onMyInfo = function (e) {function t() {d = c.reverse(u.user), o.logger.info("user::onMyInfo: parseData", d);}function n(e, t) {i.mergeMyInfo(d, l).then(function () {s(), e();}).then(void 0, function (e) {e.message = "db.mergeMyInfo error", e.callFunc = "user::onMyInfo", t(e);});}function s() {o.timetags.myInfo = d.updateTime, l && (o.syncResult.myInfo = d);}var o = this,i = o.db,a = e.error,u = e.content,l = !0,d = void 0,m = new r(function (e, r) {a ? l && (a && (a.callFunc = "user::onMyInfo"), e(a), o.syncData()) : (t(), i.enable ? n(e, r) : (s(), e()));});l && (m.cmd = "myInfo", o.syncPromiseArray.push(m));}, s.onUpdateMyInfo = function (e, t, n) {var r = this,s = r.db,i = c.reverse(t),a = o.merge(r.myInfo, i);r.myInfo = a, n ? (r.logger.info("user::onUpdateMyInfo:", a), r.options.onupdatemyinfo(a)) : e.obj = a, s.enable && (i.account = r.account, s.updateUser(i));}, s.onRelations = function (e) {function t() {d.forEach(function (e) {e = a.parse(e);var t = { account: e.account, createTime: e.createTime, updateTime: e.updateTime };e.isBlacked ? p.push(t) : g.push(t), e.isMuted ? y.push(t) : h.push(t);}), o.logger.info("user::onRelations: parse blacklist", i(p), p, "delete", i(g), g), o.logger.info("user::onRelations: parse mutelist", i(y), y, "delete", i(h), h), d.length ? (m = !0, f = e.content.timetag) : m = !1;}function n(t, n) {e.promise = new r(function (e, r) {function i() {l ? (s(), e(), t()) : c.getRelations().then(function (n) {p = n[0], y = n[1], s(), e(), t();}).then(void 0, function (e) {e.message = "db.getRelations error", e.callFunc = "user::onRelations", r(e), n(e);});}m ? c.mergeRelations(p, g, y, h, f).then(function () {i();}).then(void 0, function (e) {e.message = "db.mergeRelations error", e.callFunc = "user::onRelations", r(e), n(e);}) : (o.logger.warn("user::onRelations: no relations need merge"), i());}).then(void 0, function (e) {throw e.message = "merge relations data error", e.callFunc = "user::onRelations", n(e), e;});}function s() {o.timetags.relations = f, p.invalid = g, y.invalid = h, l ? (o.syncResult.blacklist = p, o.syncResult.mutelist = y, o.syncResult.invalidBlacklist = g, o.syncResult.invalidMutelist = h) : (o.logger.info("user::onRelations: get relations", p, y), e.obj.blacklist = p, e.obj.mutelist = y);}var o = this,c = o.db,u = e.error,l = o.packetFromSync(e),d = e.content.specialRelations,m = !0,f = void 0,p = [],g = [],y = [],h = [],v = new r(function (e, r) {u ? l && (e(u), o.syncData()) : (t(), c.enable ? n(e, r) : (s(), e()));});l && (v.cmd = "relations", o.syncPromiseArray.push(v));}, s.markInBlacklist = function (e, t) {var n = this,r = n.db;e.record = { account: e.account, updateTime: +new Date() }, r.enable && r.markInBlacklist(e), t && (n.logger.info("user::markInBlacklist:", e), n.options.onsyncmarkinblacklist(e));}, s.markInMutelist = function (e, t) {var n = this,r = n.db;e.record = { account: e.account, updateTime: +new Date() }, r.enable && r.markInMutelist(e), t && (n.logger.info("user::markInMutelist:", e), n.options.onsyncmarkinmutelist(e));}, s.mergeUser = function (e) {this.userSet[e.account] = e;};}]);});

/***/ }),

/***/ 246:
/*!**********************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/StatisticsNet.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.CustReportSmallTime = exports.GetDptsCustRanking = exports.SellProportion = exports.CustStatisticInfo = exports.CustDataInfo = exports.CommissionDealTrend = exports.GetStatisticalAnalysis = void 0;var _RequestApi8 = __webpack_require__(/*! ../utils/RequestApi */ 26);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var

GetStatisticalAnalysis = /*#__PURE__*/function (_RequestApi) {_inherits(GetStatisticalAnalysis, _RequestApi);
  function GetStatisticalAnalysis(responseData) {_classCallCheck(this, GetStatisticalAnalysis);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetStatisticalAnalysis).call(this,
    item));
  }_createClass(GetStatisticalAnalysis, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/commssion/getStatisticalAnalysis";
    } }]);return GetStatisticalAnalysis;}(_RequestApi8.RequestApi);

// 交易走势
exports.GetStatisticalAnalysis = GetStatisticalAnalysis;var CommissionDealTrend = /*#__PURE__*/function (_RequestApi2) {_inherits(CommissionDealTrend, _RequestApi2);
  function CommissionDealTrend(responseData) {_classCallCheck(this, CommissionDealTrend);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CommissionDealTrend).call(this,
    item));
  }_createClass(CommissionDealTrend, [{ key: "getUrl", value: function getUrl()
    {
      return "/newBuildWeb/dvlp/commission/dealTrend";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()
    {
      return true;
    } }]);return CommissionDealTrend;}(_RequestApi8.RequestApi);

//客户转化对比
exports.CommissionDealTrend = CommissionDealTrend;var CustDataInfo = /*#__PURE__*/function (_RequestApi3) {_inherits(CustDataInfo, _RequestApi3);
  function CustDataInfo(responseData) {_classCallCheck(this, CustDataInfo);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CustDataInfo).call(this,
    item));
  }_createClass(CustDataInfo, [{ key: "getUrl", value: function getUrl()
    {
      return "/newBuildWeb/dvlp/statistics/custDataInfo";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()
    {
      return true;
    } }]);return CustDataInfo;}(_RequestApi8.RequestApi);

// 客户转化率
exports.CustDataInfo = CustDataInfo;var CustStatisticInfo = /*#__PURE__*/function (_RequestApi4) {_inherits(CustStatisticInfo, _RequestApi4);
  function CustStatisticInfo(responseData) {_classCallCheck(this, CustStatisticInfo);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CustStatisticInfo).call(this,
    item));
  }_createClass(CustStatisticInfo, [{ key: "getUrl", value: function getUrl()
    {
      return "/newBuildWeb/dvlp/statistics/custStatisticInfo";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()
    {
      return true;
    } }]);return CustStatisticInfo;}(_RequestApi8.RequestApi);

// 户型销售占比
exports.CustStatisticInfo = CustStatisticInfo;var SellProportion = /*#__PURE__*/function (_RequestApi5) {_inherits(SellProportion, _RequestApi5);
  function SellProportion(responseData) {_classCallCheck(this, SellProportion);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(SellProportion).call(this,
    item));
  }_createClass(SellProportion, [{ key: "getUrl", value: function getUrl()
    {
      return "/newBuildWeb/dvlp/cust/sellProportion";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()
    {
      return true;
    } }]);return SellProportion;}(_RequestApi8.RequestApi);

// 门店排行
exports.SellProportion = SellProportion;var GetDptsCustRanking = /*#__PURE__*/function (_RequestApi6) {_inherits(GetDptsCustRanking, _RequestApi6);
  function GetDptsCustRanking(responseData) {_classCallCheck(this, GetDptsCustRanking);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetDptsCustRanking).call(this,
    item));
  }_createClass(GetDptsCustRanking, [{ key: "getUrl", value: function getUrl()
    {
      return "/newBuildWeb/dvlp/statistics/getDptsCustRanking";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()
    {
      return true;
    } }]);return GetDptsCustRanking;}(_RequestApi8.RequestApi);

// 起始日期初始化
exports.GetDptsCustRanking = GetDptsCustRanking;var CustReportSmallTime = /*#__PURE__*/function (_RequestApi7) {_inherits(CustReportSmallTime, _RequestApi7);
  function CustReportSmallTime(responseData) {_classCallCheck(this, CustReportSmallTime);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CustReportSmallTime).call(this,
    item));
  }_createClass(CustReportSmallTime, [{ key: "getUrl", value: function getUrl()
    {
      return "/newBuildWeb/dvlp/cust/custReportSmallTime";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()
    {
      return true;
    } }]);return CustReportSmallTime;}(_RequestApi8.RequestApi);exports.CustReportSmallTime = CustReportSmallTime;

/***/ }),

/***/ 247:
/*!***************************************************************************!*\
  !*** D:/小黑项目/yx_uniapp/pagesStatistics/analysis/components/changeData.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.week_month_data_change = void 0;function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}function dealNum(p) {
  if (p) {
    var unit = '';
    var p_fix = Math.floor(p * 100) / 100;
    var p_fix_str = "".concat(p_fix);
    if (p_fix_str.split('.')[0].length > 4) {
      return {
        p_fix: Math.floor(p_fix / 100) / 100,
        unit: '亿' };

    } else {
      return {
        p_fix: Math.floor(p_fix),
        unit: '万' };

    }
  } else {
    return {
      p_fix: 0,
      unit: '万' };

  }
}

var week_month_data_change = {
  // 交易数据处理
  changeAllDealTrends: function changeAllDealTrends(obj) {
    //图表数据
    if (obj.result[0] != undefined) {
      var hasData = obj.result.some(function (v) {
        return v.dealAmount != undefined && v.dealNum != undefined;
      });
      if (hasData) {var _allDealTrends;
        obj.result.sort(function (a, b) {
          return new Date(a.date).getTime() - new Date(b.date).getTime();
        });

        var series = [
        {
          name: '交易金额',
          data: obj.result.map(function (v) {
            if (v.dealAmount) {
              return dealNum(v.dealAmount).p_fix;
            } else {
              return 0;
            }
          }),
          type: 'line',
          color: '#f95742',
          pointShape: 'circle',
          addPoint: true,
          legendShape: 'circle',
          index: 0 },

        {
          name: '交易套数',
          data: obj.result.map(function (v) {return v.dealNum || 0;}),
          type: 'line',
          color: '#0586ff',
          pointShape: 'circle',
          addPoint: true,
          legendShape: 'circle',
          index: 1 }];


        // 最大值
        var max = series.map(function (v) {
          return Math.ceil(Math.max.apply(Math, _toConsumableArray(v.data)) / 5) * 5;
        });
        // content数据
        var allDealTrends = (_allDealTrends = {
          allDealAmount: {
            num: dealNum(obj.allDealTrends[0].allDealAmount).p_fix || 0,
            unit: dealNum(obj.allDealTrends[0].allDealAmount).unit || '万' },

          allDealAvg: obj.allDealTrends[0].allDealAvg || 0 }, _defineProperty(_allDealTrends, "allDealAvg",
        {
          num: dealNum(obj.allDealTrends[0].allDealAvg).p_fix || 0,
          unit: dealNum(obj.allDealTrends[0].allDealAvg).unit || '万' }), _defineProperty(_allDealTrends, "allDealNum",

        obj.allDealTrends[0].allDealNum || 0), _allDealTrends);

        //日期
        var categories;
        if (obj.result[0].date.length > 7) {
          categories = obj.result.map(function (v) {
            return v.date.slice(5);
          });
        } else {
          categories = obj.result.map(function (v) {
            return "".concat(new Date(v.date).getFullYear(), "-").concat(new Date(v.date).getMonth() + 1);
          });
        }
        return {
          allDealTrends: allDealTrends, series: series, max: max, categories: categories };

      } else {
        var emptyData = {
          allDealTrends: {
            allDealAmount: {
              num: 0,
              unit: '万' },

            allDealAvg: {
              num: 0,
              unit: '万' },

            allDealNum: 0 },

          max: [10, 10],
          series: [{
            addPoint: true,
            color: "#f95742",
            data: [],
            legendShape: "circle",
            name: "交易金额",
            pointShape: "circle",
            type: "line" },

          {
            addPoint: true,
            color: "#0586ff",
            data: [],
            legendShape: "circle",
            name: "交易套数",
            pointShape: "circle",
            type: "line" }],

          categories: [''] };

        return emptyData;
      }
    } else
    {
      return {
        allDealTrends: {
          allDealAmount: {
            num: 0,
            unit: '万' },

          allDealAvg: {
            num: 0,
            unit: '万' },

          allDealNum: 0 },

        max: [10, 10],
        series: [{
          addPoint: true,
          color: "#f95742",
          data: [],
          legendShape: "circle",
          name: "交易金额",
          pointShape: "circle",
          type: "line" },

        {
          addPoint: true,
          color: "#0586ff",
          data: [],
          legendShape: "circle",
          name: "交易套数",
          pointShape: "circle",
          type: "line" }],

        categories: [''] };

    }
  },
  // 客户转化对比数据处理
  changeCustDataInfo: function changeCustDataInfo(obj) {
    if (obj.custTimeCount != undefined) {
      var hasData = obj.custTimeCount.some(function (v) {
        return v.reportCount != 0 || v.bandCount != 0 || v.signCount != 0;
      });
      if (hasData) {
        obj.custTimeCount.sort(function (a, b) {
          return new Date(a.timeStr).getTime() - new Date(b.timeStr).getTime();
        });
        var series = [
        {
          name: '报备组',
          data: obj.custTimeCount.map(function (v) {return v.reportCount || 0;}),
          color: '#0586ff' },

        {
          name: '带看组',
          data: obj.custTimeCount.map(function (v) {return v.bandCount || 0;}),
          color: '#ff891f' },

        {
          name: '成交组',
          data: obj.custTimeCount.map(function (v) {return v.signCount || 0;}),
          color: '#43bc6d' }];



        var custCount = {
          bandCount: obj.custCount.bandCount || 0,
          reportCount: obj.custCount.reportCount || 0,
          signCount: obj.custCount.signCount || 0 };

        //求最大值并向上取5的倍数
        var _max = series.map(function (v) {
          return Math.ceil(Math.max.apply(Math, _toConsumableArray(v.data)) / 5) * 5;
        });
        var max = Math.max.apply(Math, _toConsumableArray(_max));
        //日期
        var categories;
        if (obj.custTimeCount[0].timeStr.length > 7) {
          categories = obj.custTimeCount.map(function (v) {return v.timeStr.slice(5);});
        } else {
          categories = obj.custTimeCount.map(function (v) {
            return "".concat(new Date(v.timeStr).getFullYear(), "-").concat(new Date(v.timeStr).getMonth() + 1);
          });
        }

        return { series: series, custCount: custCount, max: max, categories: categories };
      } else {
        return {
          series: [{
            name: '报备组',
            data: [],
            color: '#0586ff' },

          {
            name: '带看组',
            data: [],
            color: '#ff891f' },

          {
            name: '成交组',
            data: [],
            color: '#43bc6d' }],

          custCount: { bandCount: 0, reportCount: 0, signCount: 0 },
          max: 10,
          categories: [''] };

      }
    } else {
      return {
        series: [{
          name: '报备组',
          data: [],
          color: '#0586ff' },

        {
          name: '带看组',
          data: [],
          color: '#ff891f' },

        {
          name: '成交组',
          data: [],
          color: '#43bc6d' }],

        custCount: { bandCount: 0, reportCount: 0, signCount: 0 },
        max: 10,
        categories: [''] };

    }
  },

  //客户转化率
  custStatisticInfo: function custStatisticInfo(obj) {
    if (obj != undefined) {
      var bandRate = { series: [{ name: '带看率', data: obj.bandRate || 0, color: '#0084ff' }] };
      var commissionRate = { series: [{ name: '结佣率', data: obj.commissionRate || 0, color: '#0084ff' }] };
      var reportRate = { series: [{ name: '报备率', data: obj.reportRate || 0, color: '#0084ff' }] };
      var signRate = { series: [{ name: '签约率', data: obj.signRate || 0, color: '#0084ff' }]
        // 当为data为0时显示的颜色
      };if (bandRate.series[0].data === 0) {
        bandRate.series[0].color = '#e9e9e9';
      }
      if (commissionRate.series[0].data === 0) {
        commissionRate.series[0].color = '#e9e9e9';
      }
      if (reportRate.series[0].data === 0) {
        reportRate.series[0].color = '#e9e9e9';
      }
      if (signRate.series[0].data === 0) {
        signRate.series[0].color = '#e9e9e9';
      }
      var data_list = [
      { name: '报备数(组)', value: obj.reportCount || 0 },
      { name: '审核通过(组)', value: obj.auditCount || 0 },
      { name: '带看数(组)', value: obj.bandCount || 0 },
      { name: '成交数(组)', value: obj.signCount || 0 },
      { name: '退佣数(组)', value: obj.retCommissionCount || 0 },
      { name: '结佣数(组)', value: obj.commissionCount || 0 }];


      return {
        bandRate: bandRate, commissionRate: commissionRate, reportRate: reportRate, signRate: signRate, data_list: data_list };

    } else {
      return {
        data_list: [{ name: '报备数(组)', value: 0 }, { name: '审核通过(组)', value: 0 }, { name: '带看数(组)', value: 0 }, { name: '成交数(组)', value: 0 }, { name: '退佣数(组)', value: 0 }, { name: '结佣数(组)', value: 0 }],
        bandRate: { series: [{ name: '带看率', data: 0, color: '#e9e9e9' }] },
        commissionRate: { series: [{ name: '结佣率', data: 0, color: '#e9e9e9' }] },
        reportRate: { series: [{ name: '报备率', data: 0, color: '#e9e9e9' }] },
        signRate: {
          series: [
          { name: '签约率', data: 0, color: '#e9e9e9' }] } };



    }
  },
  // 户型销售对比
  changeSellProportionLayout: function changeSellProportionLayout(obj) {
    if (obj[0] != undefined) {
      var color = ['#0084ff', '#13c2c2', '#ffb109', '#9083f8', '#ff625b'];
      var overArr = null;
      var legend = [];
      // 数据 
      var series = obj.slice(0, 4).map(function (v) {
        return {
          name: v.name,
          data: v.sellNum };

      });


      // 数据
      if (obj.length > 5) {
        var sum = 0;
        overArr = obj.slice(4);
        for (var i = 0; i < overArr.length; i++) {
          sum += overArr[i].sellNum;
        }
        series.push({ name: '其他', data: sum });
      }
      for (var _i = 0; _i < series.length; _i++) {
        series[_i].color = color[_i];
      }
      if (series[0] == undefined)
      series = [{ name: '暂无数据', data: 1, color: '#e9e9e9' }];

      //title
      var title = 0;
      for (var _i2 = 0; _i2 < series.length; _i2++) {
        title += series[_i2].data;
      }
      title = "".concat(title);
      if (series[0].name == '')
      title = '0';


      // 图例
      legend = obj.slice(0, 4);
      var allNum = 0;
      var allPer = 0;

      if (obj.length > 5) {
        var overLegend = obj.slice(4);
        for (var _i3 = 0; _i3 < overLegend.length; _i3++) {
          allNum += overLegend[_i3].sellNum;
          allPer += overLegend[_i3].percent;
        }
        legend.push({ name: '其他', sellNum: allNum, percent: allPer });
      }

      for (var _i4 = 0; _i4 < legend.length; _i4++) {
        legend[_i4].color = color[_i4];
        legend[_i4].percent = "".concat(Math.round(legend[_i4].percent * 100 * 1000) / 1000) + '%';
      }
      return { series: series, legend: legend, title: title };
    } else {
      return {
        series: [{ name: '暂无数据', data: [1], color: "#e9e9e9" }],
        legend: [{ color: "#0084ff", name: "暂无数据", percent: "0%", sellNum: "0" }],
        title: '0' };

    }
  } };exports.week_month_data_change = week_month_data_change;

/***/ }),

/***/ 248:
/*!*****************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/moment.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) { //! moment.js
//! version : 2.10.6
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

(function (global, factory) {
   true ? module.exports = factory() :
  undefined;
})(void 0, function () {'use strict';

  var hookCallback;

  function utils_hooks__hooks() {
    return hookCallback.apply(null, arguments);
  }

  // This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback(callback) {
    hookCallback = callback;
  }

  function isArray(input) {
    return Object.prototype.toString.call(input) === '[object Array]';
  }

  function isDate(input) {
    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
  }

  function map(arr, fn) {
    var res = [],i;
    for (i = 0; i < arr.length; ++i) {
      res.push(fn(arr[i], i));
    }
    return res;
  }

  function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
  }

  function extend(a, b) {
    for (var i in b) {
      if (hasOwnProp(b, i)) {
        a[i] = b[i];
      }
    }

    if (hasOwnProp(b, 'toString')) {
      a.toString = b.toString;
    }

    if (hasOwnProp(b, 'valueOf')) {
      a.valueOf = b.valueOf;
    }

    return a;
  }

  function create_utc__createUTC(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, true).utc();
  }

  function defaultParsingFlags() {
    // We need to deep clone this object.
    return {
      empty: false,
      unusedTokens: [],
      unusedInput: [],
      overflow: -2,
      charsLeftOver: 0,
      nullInput: false,
      invalidMonth: null,
      invalidFormat: false,
      userInvalidated: false,
      iso: false };

  }

  function getParsingFlags(m) {
    if (m._pf == null) {
      m._pf = defaultParsingFlags();
    }
    return m._pf;
  }

  function valid__isValid(m) {
    if (m._isValid == null) {
      var flags = getParsingFlags(m);
      m._isValid = !isNaN(m._d.getTime()) &&
      flags.overflow < 0 &&
      !flags.empty &&
      !flags.invalidMonth &&
      !flags.invalidWeekday &&
      !flags.nullInput &&
      !flags.invalidFormat &&
      !flags.userInvalidated;

      if (m._strict) {
        m._isValid = m._isValid &&
        flags.charsLeftOver === 0 &&
        flags.unusedTokens.length === 0 &&
        flags.bigHour === undefined;
      }
    }
    return m._isValid;
  }

  function valid__createInvalid(flags) {
    var m = create_utc__createUTC(NaN);
    if (flags != null) {
      extend(getParsingFlags(m), flags);
    } else
    {
      getParsingFlags(m).userInvalidated = true;
    }

    return m;
  }

  var momentProperties = utils_hooks__hooks.momentProperties = [];

  function copyConfig(to, from) {
    var i, prop, val;

    if (typeof from._isAMomentObject !== 'undefined') {
      to._isAMomentObject = from._isAMomentObject;
    }
    if (typeof from._i !== 'undefined') {
      to._i = from._i;
    }
    if (typeof from._f !== 'undefined') {
      to._f = from._f;
    }
    if (typeof from._l !== 'undefined') {
      to._l = from._l;
    }
    if (typeof from._strict !== 'undefined') {
      to._strict = from._strict;
    }
    if (typeof from._tzm !== 'undefined') {
      to._tzm = from._tzm;
    }
    if (typeof from._isUTC !== 'undefined') {
      to._isUTC = from._isUTC;
    }
    if (typeof from._offset !== 'undefined') {
      to._offset = from._offset;
    }
    if (typeof from._pf !== 'undefined') {
      to._pf = getParsingFlags(from);
    }
    if (typeof from._locale !== 'undefined') {
      to._locale = from._locale;
    }

    if (momentProperties.length > 0) {
      for (i in momentProperties) {
        prop = momentProperties[i];
        val = from[prop];
        if (typeof val !== 'undefined') {
          to[prop] = val;
        }
      }
    }

    return to;
  }

  var updateInProgress = false;

  // Moment prototype object
  function Moment(config) {
    copyConfig(this, config);
    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
    // Prevent infinite loop in case updateOffset creates new moment
    // objects.
    if (updateInProgress === false) {
      updateInProgress = true;
      utils_hooks__hooks.updateOffset(this);
      updateInProgress = false;
    }
  }

  function isMoment(obj) {
    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
  }

  function absFloor(number) {
    if (number < 0) {
      return Math.ceil(number);
    } else {
      return Math.floor(number);
    }
  }

  function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
    value = 0;

    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
      value = absFloor(coercedNumber);
    }

    return value;
  }

  function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
    lengthDiff = Math.abs(array1.length - array2.length),
    diffs = 0,
    i;
    for (i = 0; i < len; i++) {
      if (dontConvert && array1[i] !== array2[i] ||
      !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
        diffs++;
      }
    }
    return diffs + lengthDiff;
  }

  function Locale() {
  }

  var locales = {};
  var globalLocale;

  function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
  }

  // pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names) {
    var i = 0,j,next,locale,split;

    while (i < names.length) {
      split = normalizeLocale(names[i]).split('-');
      j = split.length;
      next = normalizeLocale(names[i + 1]);
      next = next ? next.split('-') : null;
      while (j > 0) {
        locale = loadLocale(split.slice(0, j).join('-'));
        if (locale) {
          return locale;
        }
        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
          //the next array item is better than a shallower substring of this one
          break;
        }
        j--;
      }
      i++;
    }
    return null;
  }

  function loadLocale(name) {
    var oldLocale = null;
    // TODO: Find a better way to register and load all the locales in Node
    if (!locales[name] && typeof module !== 'undefined' &&
    module && module.exports) {
      try {
        oldLocale = globalLocale._abbr;
        !(function webpackMissingModule() { var e = new Error("Cannot find module 'undefined'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
        // because defineLocale currently also sets the global locale, we
        // want to undo that for lazy loaded locales
        locale_locales__getSetGlobalLocale(oldLocale);
      } catch (e) {}
    }
    return locales[name];
  }

  // This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function locale_locales__getSetGlobalLocale(key, values) {
    var data;
    if (key) {
      if (typeof values === 'undefined') {
        data = locale_locales__getLocale(key);
      } else
      {
        data = defineLocale(key, values);
      }

      if (data) {
        // moment.duration._locale = moment._locale = data;
        globalLocale = data;
      }
    }

    return globalLocale._abbr;
  }

  function defineLocale(name, values) {
    if (values !== null) {
      values.abbr = name;
      locales[name] = locales[name] || new Locale();
      locales[name].set(values);

      // backwards compat for now: also set the locale
      locale_locales__getSetGlobalLocale(name);

      return locales[name];
    } else {
      // useful for testing
      delete locales[name];
      return null;
    }
  }

  // returns locale data
  function locale_locales__getLocale(key) {
    var locale;

    if (key && key._locale && key._locale._abbr) {
      key = key._locale._abbr;
    }

    if (!key) {
      return globalLocale;
    }

    if (!isArray(key)) {
      //short-circuit everything else
      locale = loadLocale(key);
      if (locale) {
        return locale;
      }
      key = [key];
    }

    return chooseLocale(key);
  }

  var aliases = {};

  function addUnitAlias(unit, shorthand) {
    var lowerCase = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
  }

  function normalizeUnits(units) {
    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
  }

  function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
    normalizedProp,
    prop;

    for (prop in inputObject) {
      if (hasOwnProp(inputObject, prop)) {
        normalizedProp = normalizeUnits(prop);
        if (normalizedProp) {
          normalizedInput[normalizedProp] = inputObject[prop];
        }
      }
    }

    return normalizedInput;
  }

  function makeGetSet(unit, keepTime) {
    return function (value) {
      if (value != null) {
        get_set__set(this, unit, value);
        utils_hooks__hooks.updateOffset(this, keepTime);
        return this;
      } else {
        return get_set__get(this, unit);
      }
    };
  }

  function get_set__get(mom, unit) {
    return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
  }

  function get_set__set(mom, unit, value) {
    return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
  }

  // MOMENTS

  function getSet(units, value) {
    var unit;
    if (typeof units === 'object') {
      for (unit in units) {
        this.set(unit, units[unit]);
      }
    } else {
      units = normalizeUnits(units);
      if (typeof this[units] === 'function') {
        return this[units](value);
      }
    }
    return this;
  }

  function zeroFill(number, targetLength, forceSign) {
    var absNumber = '' + Math.abs(number),
    zerosToFill = targetLength - absNumber.length,
    sign = number >= 0;
    return (sign ? forceSign ? '+' : '' : '-') +
    Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
  }

  var formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

  var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

  var formatFunctions = {};

  var formatTokenFunctions = {};

  // token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken(token, padded, ordinal, callback) {
    var func = callback;
    if (typeof callback === 'string') {
      func = function func() {
        return this[callback]();
      };
    }
    if (token) {
      formatTokenFunctions[token] = func;
    }
    if (padded) {
      formatTokenFunctions[padded[0]] = function () {
        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
      };
    }
    if (ordinal) {
      formatTokenFunctions[ordinal] = function () {
        return this.localeData().ordinal(func.apply(this, arguments), token);
      };
    }
  }

  function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
      return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
  }

  function makeFormatFunction(format) {
    var array = format.match(formattingTokens),i,length;

    for (i = 0, length = array.length; i < length; i++) {
      if (formatTokenFunctions[array[i]]) {
        array[i] = formatTokenFunctions[array[i]];
      } else {
        array[i] = removeFormattingTokens(array[i]);
      }
    }

    return function (mom) {
      var output = '';
      for (i = 0; i < length; i++) {
        output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
      }
      return output;
    };
  }

  // format date using native date object
  function formatMoment(m, format) {
    if (!m.isValid()) {
      return m.localeData().invalidDate();
    }

    format = expandFormat(format, m.localeData());
    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

    return formatFunctions[format](m);
  }

  function expandFormat(format, locale) {
    var i = 5;

    function replaceLongDateFormatTokens(input) {
      return locale.longDateFormat(input) || input;
    }

    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
      localFormattingTokens.lastIndex = 0;
      i -= 1;
    }

    return format;
  }

  var match1 = /\d/; //       0 - 9
  var match2 = /\d\d/; //      00 - 99
  var match3 = /\d{3}/; //     000 - 999
  var match4 = /\d{4}/; //    0000 - 9999
  var match6 = /[+-]?\d{6}/; // -999999 - 999999
  var match1to2 = /\d\d?/; //       0 - 99
  var match1to3 = /\d{1,3}/; //       0 - 999
  var match1to4 = /\d{1,4}/; //       0 - 9999
  var match1to6 = /[+-]?\d{1,6}/; // -999999 - 999999

  var matchUnsigned = /\d+/; //       0 - inf
  var matchSigned = /[+-]?\d+/; //    -inf - inf

  var matchOffset = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z

  var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

  // any word (or two) characters or numbers including two/three word month in arabic.
  var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

  var regexes = {};

  function isFunction(sth) {
    // https://github.com/moment/moment/issues/2325
    return typeof sth === 'function' &&
    Object.prototype.toString.call(sth) === '[object Function]';
  }


  function addRegexToken(token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ? regex : function (isStrict) {
      return isStrict && strictRegex ? strictRegex : regex;
    };
  }

  function getParseRegexForToken(token, config) {
    if (!hasOwnProp(regexes, token)) {
      return new RegExp(unescapeFormat(token));
    }

    return regexes[token](config._strict, config._locale);
  }

  // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s) {
    return s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
      return p1 || p2 || p3 || p4;
    }).replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  }

  var tokens = {};

  function addParseToken(token, callback) {
    var i,func = callback;
    if (typeof token === 'string') {
      token = [token];
    }
    if (typeof callback === 'number') {
      func = function func(input, array) {
        array[callback] = toInt(input);
      };
    }
    for (i = 0; i < token.length; i++) {
      tokens[token[i]] = func;
    }
  }

  function addWeekParseToken(token, callback) {
    addParseToken(token, function (input, array, config, token) {
      config._w = config._w || {};
      callback(input, config._w, config, token);
    });
  }

  function addTimeToArrayFromToken(token, input, config) {
    if (input != null && hasOwnProp(tokens, token)) {
      tokens[token](input, config._a, config, token);
    }
  }

  var YEAR = 0;
  var MONTH = 1;
  var DATE = 2;
  var HOUR = 3;
  var MINUTE = 4;
  var SECOND = 5;
  var MILLISECOND = 6;

  function daysInMonth(year, month) {
    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
  }

  // FORMATTING

  addFormatToken('M', ['MM', 2], 'Mo', function () {
    return this.month() + 1;
  });

  addFormatToken('MMM', 0, 0, function (format) {
    return this.localeData().monthsShort(this, format);
  });

  addFormatToken('MMMM', 0, 0, function (format) {
    return this.localeData().months(this, format);
  });

  // ALIASES

  addUnitAlias('month', 'M');

  // PARSING

  addRegexToken('M', match1to2);
  addRegexToken('MM', match1to2, match2);
  addRegexToken('MMM', matchWord);
  addRegexToken('MMMM', matchWord);

  addParseToken(['M', 'MM'], function (input, array) {
    array[MONTH] = toInt(input) - 1;
  });

  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    // if we didn't find a month name, mark the date as invalid.
    if (month != null) {
      array[MONTH] = month;
    } else {
      getParsingFlags(config).invalidMonth = input;
    }
  });

  // LOCALES

  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
  function localeMonths(m) {
    return this._months[m.month()];
  }

  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
  function localeMonthsShort(m) {
    return this._monthsShort[m.month()];
  }

  function localeMonthsParse(monthName, format, strict) {
    var i, mom, regex;

    if (!this._monthsParse) {
      this._monthsParse = [];
      this._longMonthsParse = [];
      this._shortMonthsParse = [];
    }

    for (i = 0; i < 12; i++) {
      // make the regex if we don't have it already
      mom = create_utc__createUTC([2000, i]);
      if (strict && !this._longMonthsParse[i]) {
        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
      }
      if (!strict && !this._monthsParse[i]) {
        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
      }
      // test the regex
      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
        return i;
      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
        return i;
      } else if (!strict && this._monthsParse[i].test(monthName)) {
        return i;
      }
    }
  }

  // MOMENTS

  function setMonth(mom, value) {
    var dayOfMonth;

    // TODO: Move this out of here!
    if (typeof value === 'string') {
      value = mom.localeData().monthsParse(value);
      // TODO: Another silent failure?
      if (typeof value !== 'number') {
        return mom;
      }
    }

    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
  }

  function getSetMonth(value) {
    if (value != null) {
      setMonth(this, value);
      utils_hooks__hooks.updateOffset(this, true);
      return this;
    } else {
      return get_set__get(this, 'Month');
    }
  }

  function getDaysInMonth() {
    return daysInMonth(this.year(), this.month());
  }

  function checkOverflow(m) {
    var overflow;
    var a = m._a;

    if (a && getParsingFlags(m).overflow === -2) {
      overflow =
      a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :
      a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
      a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR :
      a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :
      a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :
      a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
      -1;

      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
        overflow = DATE;
      }

      getParsingFlags(m).overflow = overflow;
    }

    return m;
  }

  function warn(msg) {
    if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
      console.warn('Deprecation warning: ' + msg);
    }
  }

  function deprecate(msg, fn) {
    var firstTime = true;

    return extend(function () {
      if (firstTime) {
        warn(msg + '\n' + new Error().stack);
        firstTime = false;
      }
      return fn.apply(this, arguments);
    }, fn);
  }

  var deprecations = {};

  function deprecateSimple(name, msg) {
    if (!deprecations[name]) {
      warn(msg);
      deprecations[name] = true;
    }
  }

  utils_hooks__hooks.suppressDeprecationWarnings = false;

  var from_string__isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

  var isoDates = [
  ['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/],
  ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/],
  ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/],
  ['GGGG-[W]WW', /\d{4}-W\d{2}/],
  ['YYYY-DDD', /\d{4}-\d{3}/]];


  // iso time formats and regexes
  var isoTimes = [
  ['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/],
  ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
  ['HH:mm', /(T| )\d\d:\d\d/],
  ['HH', /(T| )\d\d/]];


  var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

  // date from iso format
  function configFromISO(config) {
    var i,l,
    string = config._i,
    match = from_string__isoRegex.exec(string);

    if (match) {
      getParsingFlags(config).iso = true;
      for (i = 0, l = isoDates.length; i < l; i++) {
        if (isoDates[i][1].exec(string)) {
          config._f = isoDates[i][0];
          break;
        }
      }
      for (i = 0, l = isoTimes.length; i < l; i++) {
        if (isoTimes[i][1].exec(string)) {
          // match[6] should be 'T' or space
          config._f += (match[6] || ' ') + isoTimes[i][0];
          break;
        }
      }
      if (string.match(matchOffset)) {
        config._f += 'Z';
      }
      configFromStringAndFormat(config);
    } else {
      config._isValid = false;
    }
  }

  // date from iso format or fallback
  function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);

    if (matched !== null) {
      config._d = new Date(+matched[1]);
      return;
    }

    configFromISO(config);
    if (config._isValid === false) {
      delete config._isValid;
      utils_hooks__hooks.createFromInputFallback(config);
    }
  }

  utils_hooks__hooks.createFromInputFallback = deprecate(
  'moment construction falls back to js Date. This is ' +
  'discouraged and will be removed in upcoming major ' +
  'release. Please refer to ' +
  'https://github.com/moment/moment/issues/1407 for more info.',
  function (config) {
    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
  });


  function createDate(y, m, d, h, M, s, ms) {
    //can't just apply() to create a date:
    //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
    var date = new Date(y, m, d, h, M, s, ms);

    //the date constructor doesn't accept years < 1970
    if (y < 1970) {
      date.setFullYear(y);
    }
    return date;
  }

  function createUTCDate(y) {
    var date = new Date(Date.UTC.apply(null, arguments));
    if (y < 1970) {
      date.setUTCFullYear(y);
    }
    return date;
  }

  addFormatToken(0, ['YY', 2], 0, function () {
    return this.year() % 100;
  });

  addFormatToken(0, ['YYYY', 4], 0, 'year');
  addFormatToken(0, ['YYYYY', 5], 0, 'year');
  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

  // ALIASES

  addUnitAlias('year', 'y');

  // PARSING

  addRegexToken('Y', matchSigned);
  addRegexToken('YY', match1to2, match2);
  addRegexToken('YYYY', match1to4, match4);
  addRegexToken('YYYYY', match1to6, match6);
  addRegexToken('YYYYYY', match1to6, match6);

  addParseToken(['YYYYY', 'YYYYYY'], YEAR);
  addParseToken('YYYY', function (input, array) {
    array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
  });
  addParseToken('YY', function (input, array) {
    array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
  });

  // HELPERS

  function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
  }

  function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
  }

  // HOOKS

  utils_hooks__hooks.parseTwoDigitYear = function (input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
  };

  // MOMENTS

  var getSetYear = makeGetSet('FullYear', false);

  function getIsLeapYear() {
    return isLeapYear(this.year());
  }

  addFormatToken('w', ['ww', 2], 'wo', 'week');
  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

  // ALIASES

  addUnitAlias('week', 'w');
  addUnitAlias('isoWeek', 'W');

  // PARSING

  addRegexToken('w', match1to2);
  addRegexToken('ww', match1to2, match2);
  addRegexToken('W', match1to2);
  addRegexToken('WW', match1to2, match2);

  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
    week[token.substr(0, 1)] = toInt(input);
  });

  // HELPERS

  // firstDayOfWeek       0 = sun, 6 = sat
  //                      the day of the week that starts the week
  //                      (usually sunday or monday)
  // firstDayOfWeekOfYear 0 = sun, 6 = sat
  //                      the first week is the week that contains the first
  //                      of this day of the week
  //                      (eg. ISO weeks use thursday (4))
  function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
    var end = firstDayOfWeekOfYear - firstDayOfWeek,
    daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
    adjustedMoment;


    if (daysToDayOfWeek > end) {
      daysToDayOfWeek -= 7;
    }

    if (daysToDayOfWeek < end - 7) {
      daysToDayOfWeek += 7;
    }

    adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');
    return {
      week: Math.ceil(adjustedMoment.dayOfYear() / 7),
      year: adjustedMoment.year() };

  }

  // LOCALES

  function localeWeek(mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
  }

  var defaultLocaleWeek = {
    dow: 0, // Sunday is the first day of the week.
    doy: 6 // The week that contains Jan 1st is the first week of the year.
  };

  function localeFirstDayOfWeek() {
    return this._week.dow;
  }

  function localeFirstDayOfYear() {
    return this._week.doy;
  }

  // MOMENTS

  function getSetWeek(input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
  }

  function getSetISOWeek(input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
  }

  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

  // ALIASES

  addUnitAlias('dayOfYear', 'DDD');

  // PARSING

  addRegexToken('DDD', match1to3);
  addRegexToken('DDDD', match3);
  addParseToken(['DDD', 'DDDD'], function (input, array, config) {
    config._dayOfYear = toInt(input);
  });

  // HELPERS

  //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
    var week1Jan = 6 + firstDayOfWeek - firstDayOfWeekOfYear,janX = createUTCDate(year, 0, 1 + week1Jan),d = janX.getUTCDay(),dayOfYear;
    if (d < firstDayOfWeek) {
      d += 7;
    }

    weekday = weekday != null ? 1 * weekday : firstDayOfWeek;

    dayOfYear = 1 + week1Jan + 7 * (week - 1) - d + weekday;

    return {
      year: dayOfYear > 0 ? year : year - 1,
      dayOfYear: dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear };

  }

  // MOMENTS

  function getSetDayOfYear(input) {
    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
  }

  // Pick the first defined of two or three arguments.
  function defaults(a, b, c) {
    if (a != null) {
      return a;
    }
    if (b != null) {
      return b;
    }
    return c;
  }

  function currentDateArray(config) {
    var now = new Date();
    if (config._useUTC) {
      return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];
    }
    return [now.getFullYear(), now.getMonth(), now.getDate()];
  }

  // convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray(config) {
    var i,date,input = [],currentDate,yearToUse;

    if (config._d) {
      return;
    }

    currentDate = currentDateArray(config);

    //compute day of the year from weeks and weekdays
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
      dayOfYearFromWeekInfo(config);
    }

    //if the day of the year is set, figure out what it is
    if (config._dayOfYear) {
      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

      if (config._dayOfYear > daysInYear(yearToUse)) {
        getParsingFlags(config)._overflowDayOfYear = true;
      }

      date = createUTCDate(yearToUse, 0, config._dayOfYear);
      config._a[MONTH] = date.getUTCMonth();
      config._a[DATE] = date.getUTCDate();
    }

    // Default to current date.
    // * if no year, month, day of month are given, default to today
    // * if day of month is given, default month and year
    // * if month is given, default only year
    // * if year is given, don't default anything
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
      config._a[i] = input[i] = currentDate[i];
    }

    // Zero out whatever was not defaulted, including time
    for (; i < 7; i++) {
      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
    }

    // Check for 24:00:00.000
    if (config._a[HOUR] === 24 &&
    config._a[MINUTE] === 0 &&
    config._a[SECOND] === 0 &&
    config._a[MILLISECOND] === 0) {
      config._nextDay = true;
      config._a[HOUR] = 0;
    }

    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
    // Apply timezone offset from input. The actual utcOffset can be changed
    // with parseZone.
    if (config._tzm != null) {
      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }

    if (config._nextDay) {
      config._a[HOUR] = 24;
    }
  }

  function dayOfYearFromWeekInfo(config) {
    var w, weekYear, week, weekday, dow, doy, temp;

    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
      dow = 1;
      doy = 4;

      // TODO: We need to take the current isoWeekYear, but that depends on
      // how we interpret now (local, utc, fixed offset). So create
      // a now version of current config (take local/utc/offset flags, and
      // create now).
      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
      week = defaults(w.W, 1);
      weekday = defaults(w.E, 1);
    } else {
      dow = config._locale._week.dow;
      doy = config._locale._week.doy;

      weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
      week = defaults(w.w, 1);

      if (w.d != null) {
        // weekday -- low day numbers are considered next week
        weekday = w.d;
        if (weekday < dow) {
          ++week;
        }
      } else if (w.e != null) {
        // local weekday -- counting starts from begining of week
        weekday = w.e + dow;
      } else {
        // default to begining of week
        weekday = dow;
      }
    }
    temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

    config._a[YEAR] = temp.year;
    config._dayOfYear = temp.dayOfYear;
  }

  utils_hooks__hooks.ISO_8601 = function () {};

  // date from string and format string
  function configFromStringAndFormat(config) {
    // TODO: Move this to another part of the creation flow to prevent circular deps
    if (config._f === utils_hooks__hooks.ISO_8601) {
      configFromISO(config);
      return;
    }

    config._a = [];
    getParsingFlags(config).empty = true;

    // This array is used to make a Date, either with `new Date` or `Date.UTC`
    var string = '' + config._i,
    i,parsedInput,tokens,token,skipped,
    stringLength = string.length,
    totalParsedInputLength = 0;

    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

    for (i = 0; i < tokens.length; i++) {
      token = tokens[i];
      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
      if (parsedInput) {
        skipped = string.substr(0, string.indexOf(parsedInput));
        if (skipped.length > 0) {
          getParsingFlags(config).unusedInput.push(skipped);
        }
        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
        totalParsedInputLength += parsedInput.length;
      }
      // don't parse if it's not a known token
      if (formatTokenFunctions[token]) {
        if (parsedInput) {
          getParsingFlags(config).empty = false;
        } else
        {
          getParsingFlags(config).unusedTokens.push(token);
        }
        addTimeToArrayFromToken(token, parsedInput, config);
      } else
      if (config._strict && !parsedInput) {
        getParsingFlags(config).unusedTokens.push(token);
      }
    }

    // add remaining unparsed input length to the string
    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
    if (string.length > 0) {
      getParsingFlags(config).unusedInput.push(string);
    }

    // clear _12h flag if hour is <= 12
    if (getParsingFlags(config).bigHour === true &&
    config._a[HOUR] <= 12 &&
    config._a[HOUR] > 0) {
      getParsingFlags(config).bigHour = undefined;
    }
    // handle meridiem
    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

    configFromArray(config);
    checkOverflow(config);
  }


  function meridiemFixWrap(locale, hour, meridiem) {
    var isPm;

    if (meridiem == null) {
      // nothing to do
      return hour;
    }
    if (locale.meridiemHour != null) {
      return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
      // Fallback
      isPm = locale.isPM(meridiem);
      if (isPm && hour < 12) {
        hour += 12;
      }
      if (!isPm && hour === 12) {
        hour = 0;
      }
      return hour;
    } else {
      // this is not supposed to happen
      return hour;
    }
  }

  function configFromStringAndArray(config) {
    var tempConfig,
    bestMoment,

    scoreToBeat,
    i,
    currentScore;

    if (config._f.length === 0) {
      getParsingFlags(config).invalidFormat = true;
      config._d = new Date(NaN);
      return;
    }

    for (i = 0; i < config._f.length; i++) {
      currentScore = 0;
      tempConfig = copyConfig({}, config);
      if (config._useUTC != null) {
        tempConfig._useUTC = config._useUTC;
      }
      tempConfig._f = config._f[i];
      configFromStringAndFormat(tempConfig);

      if (!valid__isValid(tempConfig)) {
        continue;
      }

      // if there is any input that was not parsed add a penalty for that format
      currentScore += getParsingFlags(tempConfig).charsLeftOver;

      //or tokens
      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

      getParsingFlags(tempConfig).score = currentScore;

      if (scoreToBeat == null || currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }

    extend(config, bestMoment || tempConfig);
  }

  function configFromObject(config) {
    if (config._d) {
      return;
    }

    var i = normalizeObjectUnits(config._i);
    config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];

    configFromArray(config);
  }

  function createFromConfig(config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    if (res._nextDay) {
      // Adding is smart enough around DST
      res.add(1, 'd');
      res._nextDay = undefined;
    }

    return res;
  }

  function prepareConfig(config) {
    var input = config._i,
    format = config._f;

    config._locale = config._locale || locale_locales__getLocale(config._l);

    if (input === null || format === undefined && input === '') {
      return valid__createInvalid({ nullInput: true });
    }

    if (typeof input === 'string') {
      config._i = input = config._locale.preparse(input);
    }

    if (isMoment(input)) {
      return new Moment(checkOverflow(input));
    } else if (isArray(format)) {
      configFromStringAndArray(config);
    } else if (format) {
      configFromStringAndFormat(config);
    } else if (isDate(input)) {
      config._d = input;
    } else {
      configFromInput(config);
    }

    return config;
  }

  function configFromInput(config) {
    var input = config._i;
    if (input === undefined) {
      config._d = new Date();
    } else if (isDate(input)) {
      config._d = new Date(+input);
    } else if (typeof input === 'string') {
      configFromString(config);
    } else if (isArray(input)) {
      config._a = map(input.slice(0), function (obj) {
        return parseInt(obj, 10);
      });
      configFromArray(config);
    } else if (typeof input === 'object') {
      configFromObject(config);
    } else if (typeof input === 'number') {
      // from milliseconds
      config._d = new Date(input);
    } else {
      utils_hooks__hooks.createFromInputFallback(config);
    }
  }

  function createLocalOrUTC(input, format, locale, strict, isUTC) {
    var c = {};

    if (typeof locale === 'boolean') {
      strict = locale;
      locale = undefined;
    }
    // object construction must be done this way.
    // https://github.com/moment/moment/issues/1423
    c._isAMomentObject = true;
    c._useUTC = c._isUTC = isUTC;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;

    return createFromConfig(c);
  }

  function local__createLocal(input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, false);
  }

  var prototypeMin = deprecate(
  'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
  function () {
    var other = local__createLocal.apply(null, arguments);
    return other < this ? this : other;
  });


  var prototypeMax = deprecate(
  'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
  function () {
    var other = local__createLocal.apply(null, arguments);
    return other > this ? this : other;
  });


  // Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn, moments) {
    var res, i;
    if (moments.length === 1 && isArray(moments[0])) {
      moments = moments[0];
    }
    if (!moments.length) {
      return local__createLocal();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
      if (!moments[i].isValid() || moments[i][fn](res)) {
        res = moments[i];
      }
    }
    return res;
  }

  // TODO: Use [].sort instead?
  function min() {
    var args = [].slice.call(arguments, 0);

    return pickBy('isBefore', args);
  }

  function max() {
    var args = [].slice.call(arguments, 0);

    return pickBy('isAfter', args);
  }

  function Duration(duration) {
    var normalizedInput = normalizeObjectUnits(duration),
    years = normalizedInput.year || 0,
    quarters = normalizedInput.quarter || 0,
    months = normalizedInput.month || 0,
    weeks = normalizedInput.week || 0,
    days = normalizedInput.day || 0,
    hours = normalizedInput.hour || 0,
    minutes = normalizedInput.minute || 0,
    seconds = normalizedInput.second || 0,
    milliseconds = normalizedInput.millisecond || 0;

    // representation for dateAddRemove
    this._milliseconds = +milliseconds +
    seconds * 1e3 + // 1000
    minutes * 6e4 + // 1000 * 60
    hours * 36e5; // 1000 * 60 * 60
    // Because of dateAddRemove treats 24 hours as different from a
    // day when working around DST, we need to store them separately
    this._days = +days +
    weeks * 7;
    // It is impossible translate months into days without knowing
    // which months you are are talking about, so we have to store
    // it separately.
    this._months = +months +
    quarters * 3 +
    years * 12;

    this._data = {};

    this._locale = locale_locales__getLocale();

    this._bubble();
  }

  function isDuration(obj) {
    return obj instanceof Duration;
  }

  function offset(token, separator) {
    addFormatToken(token, 0, 0, function () {
      var offset = this.utcOffset();
      var sign = '+';
      if (offset < 0) {
        offset = -offset;
        sign = '-';
      }
      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);
    });
  }

  offset('Z', ':');
  offset('ZZ', '');

  // PARSING

  addRegexToken('Z', matchOffset);
  addRegexToken('ZZ', matchOffset);
  addParseToken(['Z', 'ZZ'], function (input, array, config) {
    config._useUTC = true;
    config._tzm = offsetFromString(input);
  });

  // HELPERS

  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset = /([\+\-]|\d\d)/gi;

  function offsetFromString(string) {
    var matches = (string || '').match(matchOffset) || [];
    var chunk = matches[matches.length - 1] || [];
    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
    var minutes = +(parts[1] * 60) + toInt(parts[2]);

    return parts[0] === '+' ? minutes : -minutes;
  }

  // Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input, model) {
    var res, diff;
    if (model._isUTC) {
      res = model.clone();
      diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - +res;
      // Use low-level api, because this fn is low-level api.
      res._d.setTime(+res._d + diff);
      utils_hooks__hooks.updateOffset(res, false);
      return res;
    } else {
      return local__createLocal(input).local();
    }
  }

  function getDateOffset(m) {
    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
    // https://github.com/moment/moment/pull/1871
    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
  }

  // HOOKS

  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  utils_hooks__hooks.updateOffset = function () {};

  // MOMENTS

  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset(input, keepLocalTime) {
    var offset = this._offset || 0,
    localAdjust;
    if (input != null) {
      if (typeof input === 'string') {
        input = offsetFromString(input);
      }
      if (Math.abs(input) < 16) {
        input = input * 60;
      }
      if (!this._isUTC && keepLocalTime) {
        localAdjust = getDateOffset(this);
      }
      this._offset = input;
      this._isUTC = true;
      if (localAdjust != null) {
        this.add(localAdjust, 'm');
      }
      if (offset !== input) {
        if (!keepLocalTime || this._changeInProgress) {
          add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
        } else if (!this._changeInProgress) {
          this._changeInProgress = true;
          utils_hooks__hooks.updateOffset(this, true);
          this._changeInProgress = null;
        }
      }
      return this;
    } else {
      return this._isUTC ? offset : getDateOffset(this);
    }
  }

  function getSetZone(input, keepLocalTime) {
    if (input != null) {
      if (typeof input !== 'string') {
        input = -input;
      }

      this.utcOffset(input, keepLocalTime);

      return this;
    } else {
      return -this.utcOffset();
    }
  }

  function setOffsetToUTC(keepLocalTime) {
    return this.utcOffset(0, keepLocalTime);
  }

  function setOffsetToLocal(keepLocalTime) {
    if (this._isUTC) {
      this.utcOffset(0, keepLocalTime);
      this._isUTC = false;

      if (keepLocalTime) {
        this.subtract(getDateOffset(this), 'm');
      }
    }
    return this;
  }

  function setOffsetToParsedOffset() {
    if (this._tzm) {
      this.utcOffset(this._tzm);
    } else if (typeof this._i === 'string') {
      this.utcOffset(offsetFromString(this._i));
    }
    return this;
  }

  function hasAlignedHourOffset(input) {
    input = input ? local__createLocal(input).utcOffset() : 0;

    return (this.utcOffset() - input) % 60 === 0;
  }

  function isDaylightSavingTime() {
    return (
      this.utcOffset() > this.clone().month(0).utcOffset() ||
      this.utcOffset() > this.clone().month(5).utcOffset());

  }

  function isDaylightSavingTimeShifted() {
    if (typeof this._isDSTShifted !== 'undefined') {
      return this._isDSTShifted;
    }

    var c = {};

    copyConfig(c, this);
    c = prepareConfig(c);

    if (c._a) {
      var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
      this._isDSTShifted = this.isValid() &&
      compareArrays(c._a, other.toArray()) > 0;
    } else {
      this._isDSTShifted = false;
    }

    return this._isDSTShifted;
  }

  function isLocal() {
    return !this._isUTC;
  }

  function isUtcOffset() {
    return this._isUTC;
  }

  function isUtc() {
    return this._isUTC && this._offset === 0;
  }

  var aspNetRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/;

  // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;

  function create__createDuration(input, key) {
    var duration = input,
    // matching against regexp is expensive, do it on demand
    match = null,
    sign,
    ret,
    diffRes;

    if (isDuration(input)) {
      duration = {
        ms: input._milliseconds,
        d: input._days,
        M: input._months };

    } else if (typeof input === 'number') {
      duration = {};
      if (key) {
        duration[key] = input;
      } else {
        duration.milliseconds = input;
      }
    } else if (!!(match = aspNetRegex.exec(input))) {
      sign = match[1] === '-' ? -1 : 1;
      duration = {
        y: 0,
        d: toInt(match[DATE]) * sign,
        h: toInt(match[HOUR]) * sign,
        m: toInt(match[MINUTE]) * sign,
        s: toInt(match[SECOND]) * sign,
        ms: toInt(match[MILLISECOND]) * sign };

    } else if (!!(match = create__isoRegex.exec(input))) {
      sign = match[1] === '-' ? -1 : 1;
      duration = {
        y: parseIso(match[2], sign),
        M: parseIso(match[3], sign),
        d: parseIso(match[4], sign),
        h: parseIso(match[5], sign),
        m: parseIso(match[6], sign),
        s: parseIso(match[7], sign),
        w: parseIso(match[8], sign) };

    } else if (duration == null) {// checks for null or undefined
      duration = {};
    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
      diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

      duration = {};
      duration.ms = diffRes.milliseconds;
      duration.M = diffRes.months;
    }

    ret = new Duration(duration);

    if (isDuration(input) && hasOwnProp(input, '_locale')) {
      ret._locale = input._locale;
    }

    return ret;
  }

  create__createDuration.fn = Duration.prototype;

  function parseIso(inp, sign) {
    // We'd normally use ~~inp for this, but unfortunately it also
    // converts floats to ints.
    // inp may be undefined, so careful calling replace on it.
    var res = inp && parseFloat(inp.replace(',', '.'));
    // apply sign while we're at it
    return (isNaN(res) ? 0 : res) * sign;
  }

  function positiveMomentsDifference(base, other) {
    var res = { milliseconds: 0, months: 0 };

    res.months = other.month() - base.month() +
    (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
      --res.months;
    }

    res.milliseconds = +other - +base.clone().add(res.months, 'M');

    return res;
  }

  function momentsDifference(base, other) {
    var res;
    other = cloneWithOffset(other, base);
    if (base.isBefore(other)) {
      res = positiveMomentsDifference(base, other);
    } else {
      res = positiveMomentsDifference(other, base);
      res.milliseconds = -res.milliseconds;
      res.months = -res.months;
    }

    return res;
  }

  function createAdder(direction, name) {
    return function (val, period) {
      var dur, tmp;
      //invert the arguments, but complain about it
      if (period !== null && !isNaN(+period)) {
        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
        tmp = val;val = period;period = tmp;
      }

      val = typeof val === 'string' ? +val : val;
      dur = create__createDuration(val, period);
      add_subtract__addSubtract(this, dur, direction);
      return this;
    };
  }

  function add_subtract__addSubtract(mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
    days = duration._days,
    months = duration._months;
    updateOffset = updateOffset == null ? true : updateOffset;

    if (milliseconds) {
      mom._d.setTime(+mom._d + milliseconds * isAdding);
    }
    if (days) {
      get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
    }
    if (months) {
      setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
    }
    if (updateOffset) {
      utils_hooks__hooks.updateOffset(mom, days || months);
    }
  }

  var add_subtract__add = createAdder(1, 'add');
  var add_subtract__subtract = createAdder(-1, 'subtract');

  function moment_calendar__calendar(time, formats) {
    // We want to compare the start of today, vs this.
    // Getting start-of-today depends on whether we're local/utc/offset or not.
    var now = time || local__createLocal(),
    sod = cloneWithOffset(now, this).startOf('day'),
    diff = this.diff(sod, 'days', true),
    format = diff < -6 ? 'sameElse' :
    diff < -1 ? 'lastWeek' :
    diff < 0 ? 'lastDay' :
    diff < 1 ? 'sameDay' :
    diff < 2 ? 'nextDay' :
    diff < 7 ? 'nextWeek' : 'sameElse';
    return this.format(formats && formats[format] || this.localeData().calendar(format, this, local__createLocal(now)));
  }

  function clone() {
    return new Moment(this);
  }

  function isAfter(input, units) {
    var inputMs;
    units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
    if (units === 'millisecond') {
      input = isMoment(input) ? input : local__createLocal(input);
      return +this > +input;
    } else {
      inputMs = isMoment(input) ? +input : +local__createLocal(input);
      return inputMs < +this.clone().startOf(units);
    }
  }

  function isBefore(input, units) {
    var inputMs;
    units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
    if (units === 'millisecond') {
      input = isMoment(input) ? input : local__createLocal(input);
      return +this < +input;
    } else {
      inputMs = isMoment(input) ? +input : +local__createLocal(input);
      return +this.clone().endOf(units) < inputMs;
    }
  }

  function isBetween(from, to, units) {
    return this.isAfter(from, units) && this.isBefore(to, units);
  }

  function isSame(input, units) {
    var inputMs;
    units = normalizeUnits(units || 'millisecond');
    if (units === 'millisecond') {
      input = isMoment(input) ? input : local__createLocal(input);
      return +this === +input;
    } else {
      inputMs = +local__createLocal(input);
      return +this.clone().startOf(units) <= inputMs && inputMs <= +this.clone().endOf(units);
    }
  }

  function diff(input, units, asFloat) {
    var that = cloneWithOffset(input, this),
    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,
    delta,output;

    units = normalizeUnits(units);

    if (units === 'year' || units === 'month' || units === 'quarter') {
      output = monthDiff(this, that);
      if (units === 'quarter') {
        output = output / 3;
      } else if (units === 'year') {
        output = output / 12;
      }
    } else {
      delta = this - that;
      output = units === 'second' ? delta / 1e3 : // 1000
      units === 'minute' ? delta / 6e4 : // 1000 * 60
      units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
      units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
      units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
      delta;
    }
    return asFloat ? output : absFloor(output);
  }

  function monthDiff(a, b) {
    // difference in months
    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
    // b is in (anchor - 1 month, anchor + 1 month)
    anchor = a.clone().add(wholeMonthDiff, 'months'),
    anchor2,adjust;

    if (b - anchor < 0) {
      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
      // linear across the month
      adjust = (b - anchor) / (anchor - anchor2);
    } else {
      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
      // linear across the month
      adjust = (b - anchor) / (anchor2 - anchor);
    }

    return -(wholeMonthDiff + adjust);
  }

  utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';

  function toString() {
    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
  }

  function moment_format__toISOString() {
    var m = this.clone().utc();
    if (0 < m.year() && m.year() <= 9999) {
      if ('function' === typeof Date.prototype.toISOString) {
        // native implementation is ~50x faster, use it when we can
        return this.toDate().toISOString();
      } else {
        return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
      }
    } else {
      return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
    }
  }

  function format(inputString) {
    var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);
    return this.localeData().postformat(output);
  }

  function from(time, withoutSuffix) {
    if (!this.isValid()) {
      return this.localeData().invalidDate();
    }
    return create__createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
  }

  function fromNow(withoutSuffix) {
    return this.from(local__createLocal(), withoutSuffix);
  }

  function to(time, withoutSuffix) {
    if (!this.isValid()) {
      return this.localeData().invalidDate();
    }
    return create__createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
  }

  function toNow(withoutSuffix) {
    return this.to(local__createLocal(), withoutSuffix);
  }

  function locale(key) {
    var newLocaleData;

    if (key === undefined) {
      return this._locale._abbr;
    } else {
      newLocaleData = locale_locales__getLocale(key);
      if (newLocaleData != null) {
        this._locale = newLocaleData;
      }
      return this;
    }
  }

  var lang = deprecate(
  'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
  function (key) {
    if (key === undefined) {
      return this.localeData();
    } else {
      return this.locale(key);
    }
  });


  function localeData() {
    return this._locale;
  }

  function startOf(units) {
    units = normalizeUnits(units);
    // the following switch intentionally omits break keywords
    // to utilize falling through the cases.
    switch (units) {
      case 'year':
        this.month(0);
      /* falls through */
      case 'quarter':
      case 'month':
        this.date(1);
      /* falls through */
      case 'week':
      case 'isoWeek':
      case 'day':
        this.hours(0);
      /* falls through */
      case 'hour':
        this.minutes(0);
      /* falls through */
      case 'minute':
        this.seconds(0);
      /* falls through */
      case 'second':
        this.milliseconds(0);}


    // weeks are a special case
    if (units === 'week') {
      this.weekday(0);
    }
    if (units === 'isoWeek') {
      this.isoWeekday(1);
    }

    // quarters are also special
    if (units === 'quarter') {
      this.month(Math.floor(this.month() / 3) * 3);
    }

    return this;
  }

  function endOf(units) {
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond') {
      return this;
    }
    return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');
  }

  function to_type__valueOf() {
    return +this._d - (this._offset || 0) * 60000;
  }

  function unix() {
    return Math.floor(+this / 1000);
  }

  function toDate() {
    return this._offset ? new Date(+this) : this._d;
  }

  function toArray() {
    var m = this;
    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
  }

  function toObject() {
    var m = this;
    return {
      years: m.year(),
      months: m.month(),
      date: m.date(),
      hours: m.hours(),
      minutes: m.minutes(),
      seconds: m.seconds(),
      milliseconds: m.milliseconds() };

  }

  function moment_valid__isValid() {
    return valid__isValid(this);
  }

  function parsingFlags() {
    return extend({}, getParsingFlags(this));
  }

  function invalidAt() {
    return getParsingFlags(this).overflow;
  }

  addFormatToken(0, ['gg', 2], 0, function () {
    return this.weekYear() % 100;
  });

  addFormatToken(0, ['GG', 2], 0, function () {
    return this.isoWeekYear() % 100;
  });

  function addWeekYearFormatToken(token, getter) {
    addFormatToken(0, [token, token.length], 0, getter);
  }

  addWeekYearFormatToken('gggg', 'weekYear');
  addWeekYearFormatToken('ggggg', 'weekYear');
  addWeekYearFormatToken('GGGG', 'isoWeekYear');
  addWeekYearFormatToken('GGGGG', 'isoWeekYear');

  // ALIASES

  addUnitAlias('weekYear', 'gg');
  addUnitAlias('isoWeekYear', 'GG');

  // PARSING

  addRegexToken('G', matchSigned);
  addRegexToken('g', matchSigned);
  addRegexToken('GG', match1to2, match2);
  addRegexToken('gg', match1to2, match2);
  addRegexToken('GGGG', match1to4, match4);
  addRegexToken('gggg', match1to4, match4);
  addRegexToken('GGGGG', match1to6, match6);
  addRegexToken('ggggg', match1to6, match6);

  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
    week[token.substr(0, 2)] = toInt(input);
  });

  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
    week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
  });

  // HELPERS

  function weeksInYear(year, dow, doy) {
    return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;
  }

  // MOMENTS

  function getSetWeekYear(input) {
    var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
    return input == null ? year : this.add(input - year, 'y');
  }

  function getSetISOWeekYear(input) {
    var year = weekOfYear(this, 1, 4).year;
    return input == null ? year : this.add(input - year, 'y');
  }

  function getISOWeeksInYear() {
    return weeksInYear(this.year(), 1, 4);
  }

  function getWeeksInYear() {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
  }

  addFormatToken('Q', 0, 0, 'quarter');

  // ALIASES

  addUnitAlias('quarter', 'Q');

  // PARSING

  addRegexToken('Q', match1);
  addParseToken('Q', function (input, array) {
    array[MONTH] = (toInt(input) - 1) * 3;
  });

  // MOMENTS

  function getSetQuarter(input) {
    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
  }

  addFormatToken('D', ['DD', 2], 'Do', 'date');

  // ALIASES

  addUnitAlias('date', 'D');

  // PARSING

  addRegexToken('D', match1to2);
  addRegexToken('DD', match1to2, match2);
  addRegexToken('Do', function (isStrict, locale) {
    return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
  });

  addParseToken(['D', 'DD'], DATE);
  addParseToken('Do', function (input, array) {
    array[DATE] = toInt(input.match(match1to2)[0], 10);
  });

  // MOMENTS

  var getSetDayOfMonth = makeGetSet('Date', true);

  addFormatToken('d', 0, 'do', 'day');

  addFormatToken('dd', 0, 0, function (format) {
    return this.localeData().weekdaysMin(this, format);
  });

  addFormatToken('ddd', 0, 0, function (format) {
    return this.localeData().weekdaysShort(this, format);
  });

  addFormatToken('dddd', 0, 0, function (format) {
    return this.localeData().weekdays(this, format);
  });

  addFormatToken('e', 0, 0, 'weekday');
  addFormatToken('E', 0, 0, 'isoWeekday');

  // ALIASES

  addUnitAlias('day', 'd');
  addUnitAlias('weekday', 'e');
  addUnitAlias('isoWeekday', 'E');

  // PARSING

  addRegexToken('d', match1to2);
  addRegexToken('e', match1to2);
  addRegexToken('E', match1to2);
  addRegexToken('dd', matchWord);
  addRegexToken('ddd', matchWord);
  addRegexToken('dddd', matchWord);

  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {
    var weekday = config._locale.weekdaysParse(input);
    // if we didn't get a weekday name, mark the date as invalid
    if (weekday != null) {
      week.d = weekday;
    } else {
      getParsingFlags(config).invalidWeekday = input;
    }
  });

  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
    week[token] = toInt(input);
  });

  // HELPERS

  function parseWeekday(input, locale) {
    if (typeof input !== 'string') {
      return input;
    }

    if (!isNaN(input)) {
      return parseInt(input, 10);
    }

    input = locale.weekdaysParse(input);
    if (typeof input === 'number') {
      return input;
    }

    return null;
  }

  // LOCALES

  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
  function localeWeekdays(m) {
    return this._weekdays[m.day()];
  }

  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
  function localeWeekdaysShort(m) {
    return this._weekdaysShort[m.day()];
  }

  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
  function localeWeekdaysMin(m) {
    return this._weekdaysMin[m.day()];
  }

  function localeWeekdaysParse(weekdayName) {
    var i, mom, regex;

    this._weekdaysParse = this._weekdaysParse || [];

    for (i = 0; i < 7; i++) {
      // make the regex if we don't have it already
      if (!this._weekdaysParse[i]) {
        mom = local__createLocal([2000, 1]).day(i);
        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
      }
      // test the regex
      if (this._weekdaysParse[i].test(weekdayName)) {
        return i;
      }
    }
  }

  // MOMENTS

  function getSetDayOfWeek(input) {
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    if (input != null) {
      input = parseWeekday(input, this.localeData());
      return this.add(input - day, 'd');
    } else {
      return day;
    }
  }

  function getSetLocaleDayOfWeek(input) {
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return input == null ? weekday : this.add(input - weekday, 'd');
  }

  function getSetISODayOfWeek(input) {
    // behaves the same as moment#day except
    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
    // as a setter, sunday should belong to the previous week.
    return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
  }

  addFormatToken('H', ['HH', 2], 0, 'hour');
  addFormatToken('h', ['hh', 2], 0, function () {
    return this.hours() % 12 || 12;
  });

  function meridiem(token, lowercase) {
    addFormatToken(token, 0, 0, function () {
      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
    });
  }

  meridiem('a', true);
  meridiem('A', false);

  // ALIASES

  addUnitAlias('hour', 'h');

  // PARSING

  function matchMeridiem(isStrict, locale) {
    return locale._meridiemParse;
  }

  addRegexToken('a', matchMeridiem);
  addRegexToken('A', matchMeridiem);
  addRegexToken('H', match1to2);
  addRegexToken('h', match1to2);
  addRegexToken('HH', match1to2, match2);
  addRegexToken('hh', match1to2, match2);

  addParseToken(['H', 'HH'], HOUR);
  addParseToken(['a', 'A'], function (input, array, config) {
    config._isPm = config._locale.isPM(input);
    config._meridiem = input;
  });
  addParseToken(['h', 'hh'], function (input, array, config) {
    array[HOUR] = toInt(input);
    getParsingFlags(config).bigHour = true;
  });

  // LOCALES

  function localeIsPM(input) {
    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
    // Using charAt should be more compatible.
    return (input + '').toLowerCase().charAt(0) === 'p';
  }

  var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
  function localeMeridiem(hours, minutes, isLower) {
    if (hours > 11) {
      return isLower ? 'pm' : 'PM';
    } else {
      return isLower ? 'am' : 'AM';
    }
  }


  // MOMENTS

  // Setting the hour should keep the time, because the user explicitly
  // specified which hour he wants. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  var getSetHour = makeGetSet('Hours', true);

  addFormatToken('m', ['mm', 2], 0, 'minute');

  // ALIASES

  addUnitAlias('minute', 'm');

  // PARSING

  addRegexToken('m', match1to2);
  addRegexToken('mm', match1to2, match2);
  addParseToken(['m', 'mm'], MINUTE);

  // MOMENTS

  var getSetMinute = makeGetSet('Minutes', false);

  addFormatToken('s', ['ss', 2], 0, 'second');

  // ALIASES

  addUnitAlias('second', 's');

  // PARSING

  addRegexToken('s', match1to2);
  addRegexToken('ss', match1to2, match2);
  addParseToken(['s', 'ss'], SECOND);

  // MOMENTS

  var getSetSecond = makeGetSet('Seconds', false);

  addFormatToken('S', 0, 0, function () {
    return ~~(this.millisecond() / 100);
  });

  addFormatToken(0, ['SS', 2], 0, function () {
    return ~~(this.millisecond() / 10);
  });

  addFormatToken(0, ['SSS', 3], 0, 'millisecond');
  addFormatToken(0, ['SSSS', 4], 0, function () {
    return this.millisecond() * 10;
  });
  addFormatToken(0, ['SSSSS', 5], 0, function () {
    return this.millisecond() * 100;
  });
  addFormatToken(0, ['SSSSSS', 6], 0, function () {
    return this.millisecond() * 1000;
  });
  addFormatToken(0, ['SSSSSSS', 7], 0, function () {
    return this.millisecond() * 10000;
  });
  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
    return this.millisecond() * 100000;
  });
  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
    return this.millisecond() * 1000000;
  });


  // ALIASES

  addUnitAlias('millisecond', 'ms');

  // PARSING

  addRegexToken('S', match1to3, match1);
  addRegexToken('SS', match1to3, match2);
  addRegexToken('SSS', match1to3, match3);

  var token;
  for (token = 'SSSS'; token.length <= 9; token += 'S') {
    addRegexToken(token, matchUnsigned);
  }

  function parseMs(input, array) {
    array[MILLISECOND] = toInt(('0.' + input) * 1000);
  }

  for (token = 'S'; token.length <= 9; token += 'S') {
    addParseToken(token, parseMs);
  }
  // MOMENTS

  var getSetMillisecond = makeGetSet('Milliseconds', false);

  addFormatToken('z', 0, 0, 'zoneAbbr');
  addFormatToken('zz', 0, 0, 'zoneName');

  // MOMENTS

  function getZoneAbbr() {
    return this._isUTC ? 'UTC' : '';
  }

  function getZoneName() {
    return this._isUTC ? 'Coordinated Universal Time' : '';
  }

  var momentPrototype__proto = Moment.prototype;

  momentPrototype__proto.add = add_subtract__add;
  momentPrototype__proto.calendar = moment_calendar__calendar;
  momentPrototype__proto.clone = clone;
  momentPrototype__proto.diff = diff;
  momentPrototype__proto.endOf = endOf;
  momentPrototype__proto.format = format;
  momentPrototype__proto.from = from;
  momentPrototype__proto.fromNow = fromNow;
  momentPrototype__proto.to = to;
  momentPrototype__proto.toNow = toNow;
  momentPrototype__proto.get = getSet;
  momentPrototype__proto.invalidAt = invalidAt;
  momentPrototype__proto.isAfter = isAfter;
  momentPrototype__proto.isBefore = isBefore;
  momentPrototype__proto.isBetween = isBetween;
  momentPrototype__proto.isSame = isSame;
  momentPrototype__proto.isValid = moment_valid__isValid;
  momentPrototype__proto.lang = lang;
  momentPrototype__proto.locale = locale;
  momentPrototype__proto.localeData = localeData;
  momentPrototype__proto.max = prototypeMax;
  momentPrototype__proto.min = prototypeMin;
  momentPrototype__proto.parsingFlags = parsingFlags;
  momentPrototype__proto.set = getSet;
  momentPrototype__proto.startOf = startOf;
  momentPrototype__proto.subtract = add_subtract__subtract;
  momentPrototype__proto.toArray = toArray;
  momentPrototype__proto.toObject = toObject;
  momentPrototype__proto.toDate = toDate;
  momentPrototype__proto.toISOString = moment_format__toISOString;
  momentPrototype__proto.toJSON = moment_format__toISOString;
  momentPrototype__proto.toString = toString;
  momentPrototype__proto.unix = unix;
  momentPrototype__proto.valueOf = to_type__valueOf;

  // Year
  momentPrototype__proto.year = getSetYear;
  momentPrototype__proto.isLeapYear = getIsLeapYear;

  // Week Year
  momentPrototype__proto.weekYear = getSetWeekYear;
  momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

  // Quarter
  momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

  // Month
  momentPrototype__proto.month = getSetMonth;
  momentPrototype__proto.daysInMonth = getDaysInMonth;

  // Week
  momentPrototype__proto.week = momentPrototype__proto.weeks = getSetWeek;
  momentPrototype__proto.isoWeek = momentPrototype__proto.isoWeeks = getSetISOWeek;
  momentPrototype__proto.weeksInYear = getWeeksInYear;
  momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

  // Day
  momentPrototype__proto.date = getSetDayOfMonth;
  momentPrototype__proto.day = momentPrototype__proto.days = getSetDayOfWeek;
  momentPrototype__proto.weekday = getSetLocaleDayOfWeek;
  momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
  momentPrototype__proto.dayOfYear = getSetDayOfYear;

  // Hour
  momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

  // Minute
  momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

  // Second
  momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

  // Millisecond
  momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

  // Offset
  momentPrototype__proto.utcOffset = getSetOffset;
  momentPrototype__proto.utc = setOffsetToUTC;
  momentPrototype__proto.local = setOffsetToLocal;
  momentPrototype__proto.parseZone = setOffsetToParsedOffset;
  momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
  momentPrototype__proto.isDST = isDaylightSavingTime;
  momentPrototype__proto.isDSTShifted = isDaylightSavingTimeShifted;
  momentPrototype__proto.isLocal = isLocal;
  momentPrototype__proto.isUtcOffset = isUtcOffset;
  momentPrototype__proto.isUtc = isUtc;
  momentPrototype__proto.isUTC = isUtc;

  // Timezone
  momentPrototype__proto.zoneAbbr = getZoneAbbr;
  momentPrototype__proto.zoneName = getZoneName;

  // Deprecations
  momentPrototype__proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
  momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
  momentPrototype__proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);
  momentPrototype__proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);

  var momentPrototype = momentPrototype__proto;

  function moment__createUnix(input) {
    return local__createLocal(input * 1000);
  }

  function moment__createInZone() {
    return local__createLocal.apply(null, arguments).parseZone();
  }

  var defaultCalendar = {
    sameDay: '[Today at] LT',
    nextDay: '[Tomorrow at] LT',
    nextWeek: 'dddd [at] LT',
    lastDay: '[Yesterday at] LT',
    lastWeek: '[Last] dddd [at] LT',
    sameElse: 'L' };


  function locale_calendar__calendar(key, mom, now) {
    var output = this._calendar[key];
    return typeof output === 'function' ? output.call(mom, now) : output;
  }

  var defaultLongDateFormat = {
    LTS: 'h:mm:ss A',
    LT: 'h:mm A',
    L: 'MM/DD/YYYY',
    LL: 'MMMM D, YYYY',
    LLL: 'MMMM D, YYYY h:mm A',
    LLLL: 'dddd, MMMM D, YYYY h:mm A' };


  function longDateFormat(key) {
    var format = this._longDateFormat[key],
    formatUpper = this._longDateFormat[key.toUpperCase()];

    if (format || !formatUpper) {
      return format;
    }

    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
      return val.slice(1);
    });

    return this._longDateFormat[key];
  }

  var defaultInvalidDate = 'Invalid date';

  function invalidDate() {
    return this._invalidDate;
  }

  var defaultOrdinal = '%d';
  var defaultOrdinalParse = /\d{1,2}/;

  function ordinal(number) {
    return this._ordinal.replace('%d', number);
  }

  function preParsePostFormat(string) {
    return string;
  }

  var defaultRelativeTime = {
    future: 'in %s',
    past: '%s ago',
    s: 'a few seconds',
    m: 'a minute',
    mm: '%d minutes',
    h: 'an hour',
    hh: '%d hours',
    d: 'a day',
    dd: '%d days',
    M: 'a month',
    MM: '%d months',
    y: 'a year',
    yy: '%d years' };


  function relative__relativeTime(number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return typeof output === 'function' ?
    output(number, withoutSuffix, string, isFuture) :
    output.replace(/%d/i, number);
  }

  function pastFuture(diff, output) {
    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
    return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
  }

  function locale_set__set(config) {
    var prop, i;
    for (i in config) {
      prop = config[i];
      if (typeof prop === 'function') {
        this[i] = prop;
      } else {
        this['_' + i] = prop;
      }
    }
    // Lenient ordinal parsing accepts just a number in addition to
    // number + (possibly) stuff coming from _ordinalParseLenient.
    this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\d{1,2}/.source);
  }

  var prototype__proto = Locale.prototype;

  prototype__proto._calendar = defaultCalendar;
  prototype__proto.calendar = locale_calendar__calendar;
  prototype__proto._longDateFormat = defaultLongDateFormat;
  prototype__proto.longDateFormat = longDateFormat;
  prototype__proto._invalidDate = defaultInvalidDate;
  prototype__proto.invalidDate = invalidDate;
  prototype__proto._ordinal = defaultOrdinal;
  prototype__proto.ordinal = ordinal;
  prototype__proto._ordinalParse = defaultOrdinalParse;
  prototype__proto.preparse = preParsePostFormat;
  prototype__proto.postformat = preParsePostFormat;
  prototype__proto._relativeTime = defaultRelativeTime;
  prototype__proto.relativeTime = relative__relativeTime;
  prototype__proto.pastFuture = pastFuture;
  prototype__proto.set = locale_set__set;

  // Month
  prototype__proto.months = localeMonths;
  prototype__proto._months = defaultLocaleMonths;
  prototype__proto.monthsShort = localeMonthsShort;
  prototype__proto._monthsShort = defaultLocaleMonthsShort;
  prototype__proto.monthsParse = localeMonthsParse;

  // Week
  prototype__proto.week = localeWeek;
  prototype__proto._week = defaultLocaleWeek;
  prototype__proto.firstDayOfYear = localeFirstDayOfYear;
  prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

  // Day of Week
  prototype__proto.weekdays = localeWeekdays;
  prototype__proto._weekdays = defaultLocaleWeekdays;
  prototype__proto.weekdaysMin = localeWeekdaysMin;
  prototype__proto._weekdaysMin = defaultLocaleWeekdaysMin;
  prototype__proto.weekdaysShort = localeWeekdaysShort;
  prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
  prototype__proto.weekdaysParse = localeWeekdaysParse;

  // Hours
  prototype__proto.isPM = localeIsPM;
  prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
  prototype__proto.meridiem = localeMeridiem;

  function lists__get(format, index, field, setter) {
    var locale = locale_locales__getLocale();
    var utc = create_utc__createUTC().set(setter, index);
    return locale[field](utc, format);
  }

  function list(format, index, field, count, setter) {
    if (typeof format === 'number') {
      index = format;
      format = undefined;
    }

    format = format || '';

    if (index != null) {
      return lists__get(format, index, field, setter);
    }

    var i;
    var out = [];
    for (i = 0; i < count; i++) {
      out[i] = lists__get(format, i, field, setter);
    }
    return out;
  }

  function lists__listMonths(format, index) {
    return list(format, index, 'months', 12, 'month');
  }

  function lists__listMonthsShort(format, index) {
    return list(format, index, 'monthsShort', 12, 'month');
  }

  function lists__listWeekdays(format, index) {
    return list(format, index, 'weekdays', 7, 'day');
  }

  function lists__listWeekdaysShort(format, index) {
    return list(format, index, 'weekdaysShort', 7, 'day');
  }

  function lists__listWeekdaysMin(format, index) {
    return list(format, index, 'weekdaysMin', 7, 'day');
  }

  locale_locales__getSetGlobalLocale('en', {
    ordinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal: function ordinal(number) {
      var b = number % 10,
      output = toInt(number % 100 / 10) === 1 ? 'th' :
      b === 1 ? 'st' :
      b === 2 ? 'nd' :
      b === 3 ? 'rd' : 'th';
      return number + output;
    } });


  // Side effect imports
  utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
  utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

  var mathAbs = Math.abs;

  function duration_abs__abs() {
    var data = this._data;

    this._milliseconds = mathAbs(this._milliseconds);
    this._days = mathAbs(this._days);
    this._months = mathAbs(this._months);

    data.milliseconds = mathAbs(data.milliseconds);
    data.seconds = mathAbs(data.seconds);
    data.minutes = mathAbs(data.minutes);
    data.hours = mathAbs(data.hours);
    data.months = mathAbs(data.months);
    data.years = mathAbs(data.years);

    return this;
  }

  function duration_add_subtract__addSubtract(duration, input, value, direction) {
    var other = create__createDuration(input, value);

    duration._milliseconds += direction * other._milliseconds;
    duration._days += direction * other._days;
    duration._months += direction * other._months;

    return duration._bubble();
  }

  // supports only 2.0-style add(1, 's') or add(duration)
  function duration_add_subtract__add(input, value) {
    return duration_add_subtract__addSubtract(this, input, value, 1);
  }

  // supports only 2.0-style subtract(1, 's') or subtract(duration)
  function duration_add_subtract__subtract(input, value) {
    return duration_add_subtract__addSubtract(this, input, value, -1);
  }

  function absCeil(number) {
    if (number < 0) {
      return Math.floor(number);
    } else {
      return Math.ceil(number);
    }
  }

  function bubble() {
    var milliseconds = this._milliseconds;
    var days = this._days;
    var months = this._months;
    var data = this._data;
    var seconds, minutes, hours, years, monthsFromDays;

    // if we have a mix of positive and negative values, bubble down first
    // check: https://github.com/moment/moment/issues/2166
    if (!(milliseconds >= 0 && days >= 0 && months >= 0 ||
    milliseconds <= 0 && days <= 0 && months <= 0)) {
      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
      days = 0;
      months = 0;
    }

    // The following code bubbles up values, see the tests for
    // examples of what that means.
    data.milliseconds = milliseconds % 1000;

    seconds = absFloor(milliseconds / 1000);
    data.seconds = seconds % 60;

    minutes = absFloor(seconds / 60);
    data.minutes = minutes % 60;

    hours = absFloor(minutes / 60);
    data.hours = hours % 24;

    days += absFloor(hours / 24);

    // convert days to months
    monthsFromDays = absFloor(daysToMonths(days));
    months += monthsFromDays;
    days -= absCeil(monthsToDays(monthsFromDays));

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;

    data.days = days;
    data.months = months;
    data.years = years;

    return this;
  }

  function daysToMonths(days) {
    // 400 years have 146097 days (taking into account leap year rules)
    // 400 years have 12 months === 4800
    return days * 4800 / 146097;
  }

  function monthsToDays(months) {
    // the reverse of daysToMonths
    return months * 146097 / 4800;
  }

  function as(units) {
    var days;
    var months;
    var milliseconds = this._milliseconds;

    units = normalizeUnits(units);

    if (units === 'month' || units === 'year') {
      days = this._days + milliseconds / 864e5;
      months = this._months + daysToMonths(days);
      return units === 'month' ? months : months / 12;
    } else {
      // handle milliseconds separately because of floating point math errors (issue #1867)
      days = this._days + Math.round(monthsToDays(this._months));
      switch (units) {
        case 'week':return days / 7 + milliseconds / 6048e5;
        case 'day':return days + milliseconds / 864e5;
        case 'hour':return days * 24 + milliseconds / 36e5;
        case 'minute':return days * 1440 + milliseconds / 6e4;
        case 'second':return days * 86400 + milliseconds / 1000;
        // Math.floor prevents floating point math errors here
        case 'millisecond':return Math.floor(days * 864e5) + milliseconds;
        default:throw new Error('Unknown unit ' + units);}

    }
  }

  // TODO: Use this.as('ms')?
  function duration_as__valueOf() {
    return (
      this._milliseconds +
      this._days * 864e5 +
      this._months % 12 * 2592e6 +
      toInt(this._months / 12) * 31536e6);

  }

  function makeAs(alias) {
    return function () {
      return this.as(alias);
    };
  }

  var asMilliseconds = makeAs('ms');
  var asSeconds = makeAs('s');
  var asMinutes = makeAs('m');
  var asHours = makeAs('h');
  var asDays = makeAs('d');
  var asWeeks = makeAs('w');
  var asMonths = makeAs('M');
  var asYears = makeAs('y');

  function duration_get__get(units) {
    units = normalizeUnits(units);
    return this[units + 's']();
  }

  function makeGetter(name) {
    return function () {
      return this._data[name];
    };
  }

  var milliseconds = makeGetter('milliseconds');
  var seconds = makeGetter('seconds');
  var minutes = makeGetter('minutes');
  var hours = makeGetter('hours');
  var days = makeGetter('days');
  var months = makeGetter('months');
  var years = makeGetter('years');

  function weeks() {
    return absFloor(this.days() / 7);
  }

  var round = Math.round;
  var thresholds = {
    s: 45, // seconds to minute
    m: 45, // minutes to hour
    h: 22, // hours to day
    d: 26, // days to month
    M: 11 // months to year
  };

  // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
  }

  function duration_humanize__relativeTime(posNegDuration, withoutSuffix, locale) {
    var duration = create__createDuration(posNegDuration).abs();
    var seconds = round(duration.as('s'));
    var minutes = round(duration.as('m'));
    var hours = round(duration.as('h'));
    var days = round(duration.as('d'));
    var months = round(duration.as('M'));
    var years = round(duration.as('y'));

    var a = seconds < thresholds.s && ['s', seconds] ||
    minutes === 1 && ['m'] ||
    minutes < thresholds.m && ['mm', minutes] ||
    hours === 1 && ['h'] ||
    hours < thresholds.h && ['hh', hours] ||
    days === 1 && ['d'] ||
    days < thresholds.d && ['dd', days] ||
    months === 1 && ['M'] ||
    months < thresholds.M && ['MM', months] ||
    years === 1 && ['y'] || ['yy', years];

    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
  }

  // This function allows you to set a threshold for relative time strings
  function duration_humanize__getSetRelativeTimeThreshold(threshold, limit) {
    if (thresholds[threshold] === undefined) {
      return false;
    }
    if (limit === undefined) {
      return thresholds[threshold];
    }
    thresholds[threshold] = limit;
    return true;
  }

  function humanize(withSuffix) {
    var locale = this.localeData();
    var output = duration_humanize__relativeTime(this, !withSuffix, locale);

    if (withSuffix) {
      output = locale.pastFuture(+this, output);
    }

    return locale.postformat(output);
  }

  var iso_string__abs = Math.abs;

  function iso_string__toISOString() {
    // for ISO strings we do not use the normal bubbling rules:
    //  * milliseconds bubble up until they become hours
    //  * days do not bubble at all
    //  * months bubble up until they become years
    // This is because there is no context-free conversion between hours and days
    // (think of clock changes)
    // and also not between days and months (28-31 days per month)
    var seconds = iso_string__abs(this._milliseconds) / 1000;
    var days = iso_string__abs(this._days);
    var months = iso_string__abs(this._months);
    var minutes, hours, years;

    // 3600 seconds -> 60 minutes -> 1 hour
    minutes = absFloor(seconds / 60);
    hours = absFloor(minutes / 60);
    seconds %= 60;
    minutes %= 60;

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;


    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
    var Y = years;
    var M = months;
    var D = days;
    var h = hours;
    var m = minutes;
    var s = seconds;
    var total = this.asSeconds();

    if (!total) {
      // this is the same as C#'s (Noda) and python (isodate)...
      // but not other JS (goog.date)
      return 'P0D';
    }

    return (total < 0 ? '-' : '') +
    'P' + (
    Y ? Y + 'Y' : '') + (
    M ? M + 'M' : '') + (
    D ? D + 'D' : '') + (
    h || m || s ? 'T' : '') + (
    h ? h + 'H' : '') + (
    m ? m + 'M' : '') + (
    s ? s + 'S' : '');
  }

  var duration_prototype__proto = Duration.prototype;

  duration_prototype__proto.abs = duration_abs__abs;
  duration_prototype__proto.add = duration_add_subtract__add;
  duration_prototype__proto.subtract = duration_add_subtract__subtract;
  duration_prototype__proto.as = as;
  duration_prototype__proto.asMilliseconds = asMilliseconds;
  duration_prototype__proto.asSeconds = asSeconds;
  duration_prototype__proto.asMinutes = asMinutes;
  duration_prototype__proto.asHours = asHours;
  duration_prototype__proto.asDays = asDays;
  duration_prototype__proto.asWeeks = asWeeks;
  duration_prototype__proto.asMonths = asMonths;
  duration_prototype__proto.asYears = asYears;
  duration_prototype__proto.valueOf = duration_as__valueOf;
  duration_prototype__proto._bubble = bubble;
  duration_prototype__proto.get = duration_get__get;
  duration_prototype__proto.milliseconds = milliseconds;
  duration_prototype__proto.seconds = seconds;
  duration_prototype__proto.minutes = minutes;
  duration_prototype__proto.hours = hours;
  duration_prototype__proto.days = days;
  duration_prototype__proto.weeks = weeks;
  duration_prototype__proto.months = months;
  duration_prototype__proto.years = years;
  duration_prototype__proto.humanize = humanize;
  duration_prototype__proto.toISOString = iso_string__toISOString;
  duration_prototype__proto.toString = iso_string__toISOString;
  duration_prototype__proto.toJSON = iso_string__toISOString;
  duration_prototype__proto.locale = locale;
  duration_prototype__proto.localeData = localeData;

  // Deprecations
  duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
  duration_prototype__proto.lang = lang;

  // Side effect imports

  addFormatToken('X', 0, 0, 'unix');
  addFormatToken('x', 0, 0, 'valueOf');

  // PARSING

  addRegexToken('x', matchSigned);
  addRegexToken('X', matchTimestamp);
  addParseToken('X', function (input, array, config) {
    config._d = new Date(parseFloat(input, 10) * 1000);
  });
  addParseToken('x', function (input, array, config) {
    config._d = new Date(toInt(input));
  });

  // Side effect imports


  utils_hooks__hooks.version = '2.10.6';

  setHookCallback(local__createLocal);

  utils_hooks__hooks.fn = momentPrototype;
  utils_hooks__hooks.min = min;
  utils_hooks__hooks.max = max;
  utils_hooks__hooks.utc = create_utc__createUTC;
  utils_hooks__hooks.unix = moment__createUnix;
  utils_hooks__hooks.months = lists__listMonths;
  utils_hooks__hooks.isDate = isDate;
  utils_hooks__hooks.locale = locale_locales__getSetGlobalLocale;
  utils_hooks__hooks.invalid = valid__createInvalid;
  utils_hooks__hooks.duration = create__createDuration;
  utils_hooks__hooks.isMoment = isMoment;
  utils_hooks__hooks.weekdays = lists__listWeekdays;
  utils_hooks__hooks.parseZone = moment__createInZone;
  utils_hooks__hooks.localeData = locale_locales__getLocale;
  utils_hooks__hooks.isDuration = isDuration;
  utils_hooks__hooks.monthsShort = lists__listMonthsShort;
  utils_hooks__hooks.weekdaysMin = lists__listWeekdaysMin;
  utils_hooks__hooks.defineLocale = defineLocale;
  utils_hooks__hooks.weekdaysShort = lists__listWeekdaysShort;
  utils_hooks__hooks.normalizeUnits = normalizeUnits;
  utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;

  var _moment = utils_hooks__hooks;

  return _moment;

});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../软件/老版本HBuilderX/工具/HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/module.js */ 249)(module)))

/***/ }),

/***/ 249:
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ 25:
/*!*******************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/ImChartNet.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.GetYunXinToken = exports.SmartService = exports.IsInBlackList = exports.GetServiceProblemList = exports.GetImEntrustHouseList = exports.GetChartList = exports.CreateCallHistory = exports.ReplyChart = exports.SendWeiDianMessage = exports.SendAutomaticMessage = exports.UpdateUserLoginInfo = exports.GetCouponDetail = exports.ReceiveCoupon = exports.GetBrokerContactInfo = exports.UpdateSysMsgReadPoint = exports.GetSysMessageAction = exports.InitImChart = void 0;var _RequestApi18 = __webpack_require__(/*! ../utils/RequestApi */ 26);function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}


// 初始化im
var InitImChart = /*#__PURE__*/function (_RequestApi) {_inherits(InitImChart, _RequestApi);
  function InitImChart(responseData) {_classCallCheck(this, InitImChart);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "kdb";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(InitImChart).call(this,
    item));
  }_createClass(InitImChart, [{ key: "getUrl", value: function getUrl()

    {
      return "/api/im/index";
    } }]);return InitImChart;}(_RequestApi18.RequestApi);


// 系统消息列表
exports.InitImChart = InitImChart;var GetSysMessageAction = /*#__PURE__*/function (_RequestApi2) {_inherits(GetSysMessageAction, _RequestApi2);
  function GetSysMessageAction(responseData) {_classCallCheck(this, GetSysMessageAction);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetSysMessageAction).call(this,
    item));
  }_createClass(GetSysMessageAction, [{ key: "getUrl", value: function getUrl()

    {
      return "/uuhfWeb/systemMessageManager/getsysMessageAction";
    } }]);return GetSysMessageAction;}(_RequestApi18.RequestApi);


// 更新系统消息列表红点
exports.GetSysMessageAction = GetSysMessageAction;var UpdateSysMsgReadPoint = /*#__PURE__*/function (_RequestApi3) {_inherits(UpdateSysMsgReadPoint, _RequestApi3);
  function UpdateSysMsgReadPoint(responseData) {_classCallCheck(this, UpdateSysMsgReadPoint);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(UpdateSysMsgReadPoint).call(this,
    item));
  }_createClass(UpdateSysMsgReadPoint, [{ key: "getUrl", value: function getUrl()

    {
      return "/uuhfWeb/systemMessageManager/updateSysmsg4Readed";
    } }]);return UpdateSysMsgReadPoint;}(_RequestApi18.RequestApi);


// 获取经纪人所在公司信息
exports.UpdateSysMsgReadPoint = UpdateSysMsgReadPoint;var GetBrokerContactInfo = /*#__PURE__*/function (_RequestApi4) {_inherits(GetBrokerContactInfo, _RequestApi4);
  function GetBrokerContactInfo(responseData) {_classCallCheck(this, GetBrokerContactInfo);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetBrokerContactInfo).call(this,
    item));
  }_createClass(GetBrokerContactInfo, [{ key: "getUrl", value: function getUrl()

    {
      return "/uuhfWeb/archiveManager/getBrokerContactInfo";
    } }]);return GetBrokerContactInfo;}(_RequestApi18.RequestApi);


// 领取优惠券
exports.GetBrokerContactInfo = GetBrokerContactInfo;var ReceiveCoupon = /*#__PURE__*/function (_RequestApi5) {_inherits(ReceiveCoupon, _RequestApi5);
  function ReceiveCoupon(responseData) {_classCallCheck(this, ReceiveCoupon);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "kdb";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(ReceiveCoupon).call(this,
    item));
  }_createClass(ReceiveCoupon, [{ key: "getUrl", value: function getUrl()

    {
      return "/zdapi/active/receiveCouponAction";
    } }]);return ReceiveCoupon;}(_RequestApi18.RequestApi);


// 获取优惠券信息
exports.ReceiveCoupon = ReceiveCoupon;var GetCouponDetail = /*#__PURE__*/function (_RequestApi6) {_inherits(GetCouponDetail, _RequestApi6);
  function GetCouponDetail(responseData) {_classCallCheck(this, GetCouponDetail);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "kdb";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCouponDetail).call(this,
    item));
  }_createClass(GetCouponDetail, [{ key: "getUrl", value: function getUrl()

    {
      return "/zdapi/active/getCouponReceiveInfo";
    } }]);return GetCouponDetail;}(_RequestApi18.RequestApi);


// 进入app调用（每隔十分钟再调用一次）
exports.GetCouponDetail = GetCouponDetail;var UpdateUserLoginInfo = /*#__PURE__*/function (_RequestApi7) {_inherits(UpdateUserLoginInfo, _RequestApi7);
  function UpdateUserLoginInfo(responseData) {_classCallCheck(this, UpdateUserLoginInfo);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "kdb";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(UpdateUserLoginInfo).call(this,
    item));
  }_createClass(UpdateUserLoginInfo, [{ key: "getUrl", value: function getUrl()

    {
      return "/zdapi/appUser/updateUserLoginInfo";
    } }]);return UpdateUserLoginInfo;}(_RequestApi18.RequestApi);


// 撩客：进入和收藏
exports.UpdateUserLoginInfo = UpdateUserLoginInfo;var SendAutomaticMessage = /*#__PURE__*/function (_RequestApi8) {_inherits(SendAutomaticMessage, _RequestApi8);
  function SendAutomaticMessage(responseData) {_classCallCheck(this, SendAutomaticMessage);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(SendAutomaticMessage).call(this,
    item));
  }_createClass(SendAutomaticMessage, [{ key: "getUrl", value: function getUrl()

    {
      return "/uuhfWeb/houseInfoManager/sendAutomaticMessage";
    } }]);return SendAutomaticMessage;}(_RequestApi18.RequestApi);


// 撩客：微店区域筛选后并且有房源
exports.SendAutomaticMessage = SendAutomaticMessage;var SendWeiDianMessage = /*#__PURE__*/function (_RequestApi9) {_inherits(SendWeiDianMessage, _RequestApi9);
  function SendWeiDianMessage(responseData) {_classCallCheck(this, SendWeiDianMessage);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(SendWeiDianMessage).call(this,
    item));
  }_createClass(SendWeiDianMessage, [{ key: "getUrl", value: function getUrl()

    {
      return "/uuhfWeb/houseInfoManager/sendWeiDianMessage";
    } }]);return SendWeiDianMessage;}(_RequestApi18.RequestApi);


// 撩客：回复撩客消息
exports.SendWeiDianMessage = SendWeiDianMessage;var ReplyChart = /*#__PURE__*/function (_RequestApi10) {_inherits(ReplyChart, _RequestApi10);
  function ReplyChart(responseData) {_classCallCheck(this, ReplyChart);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "java";
    item.method = "post";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(ReplyChart).call(this,
    item));
  }_createClass(ReplyChart, [{ key: "getUrl", value: function getUrl()

    {
      return "/uuhfWeb/openApi/entrust/replyChart";
    } }]);return ReplyChart;}(_RequestApi18.RequestApi);


// 创建拨打记录
//callType 1语音拨打 2直拨 3IP拨打 4;400拨打 5:IM聊天 其中1语音拨打 3IP拨打小程序不行
// callType: 5,
// cityId: that.data.cityId,
// callImid: callImid,
// calledImid: calledImid,
// callSource: callSource,
// resource: that.data.resource,
// deviceType: tool.isIOS() ? 2 : 1,
// caseId: that.data.caseType,
// caseType: that.data.caseType
exports.ReplyChart = ReplyChart;var CreateCallHistory = /*#__PURE__*/function (_RequestApi11) {_inherits(CreateCallHistory, _RequestApi11);
  function CreateCallHistory(responseData) {_classCallCheck(this, CreateCallHistory);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "kdb";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CreateCallHistory).call(this,
    item));
  }_createClass(CreateCallHistory, [{ key: "getUrl", value: function getUrl()

    {
      return "/zdapi/app/createCallHistory";
    } }]);return CreateCallHistory;}(_RequestApi18.RequestApi);


// 获取聊天列表
exports.CreateCallHistory = CreateCallHistory;var GetChartListRequest = /*#__PURE__*/function (_RequestApi12) {_inherits(GetChartListRequest, _RequestApi12);
  function GetChartListRequest(responseData) {_classCallCheck(this, GetChartListRequest);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "uuweb";
    item.method = "get";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetChartListRequest).call(this,
    item));
  }_createClass(GetChartListRequest, [{ key: "getUrl", value: function getUrl()

    {
      return "/Mini/Im/getContactList";
    } }]);return GetChartListRequest;}(_RequestApi18.RequestApi);var

GetChartList = /*#__PURE__*/function () {

  function GetChartList(response) {_classCallCheck(this, GetChartList);_defineProperty(this, "response", {});
    this.response = response;
  }_createClass(GetChartList, [{ key: "send", value: function send()

    {
      return new GetChartListRequest(this.response).send().
      then(function (res) {
        if (!res.data || !res.data.contactList) {
          res["data"] = {
            contactList: res.contactList || [] };

        }
        return res;
      });
    } }]);return GetChartList;}();


// im 获取委托房源列表
exports.GetChartList = GetChartList;var GetImEntrustHouseList = /*#__PURE__*/function (_RequestApi13) {_inherits(GetImEntrustHouseList, _RequestApi13);
  function GetImEntrustHouseList(responseData) {_classCallCheck(this, GetImEntrustHouseList);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "kdb";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetImEntrustHouseList).call(this,
    item));
  }_createClass(GetImEntrustHouseList, [{ key: "getUrl", value: function getUrl()

    {
      return "/zdapi/im/queryImEntrustHouseList";
    } }]);return GetImEntrustHouseList;}(_RequestApi18.RequestApi);


// 客服问题数组
exports.GetImEntrustHouseList = GetImEntrustHouseList;var GetServiceProblemList = /*#__PURE__*/function (_RequestApi14) {_inherits(GetServiceProblemList, _RequestApi14);
  function GetServiceProblemList(responseData) {_classCallCheck(this, GetServiceProblemList);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "kdb";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetServiceProblemList).call(this,
    item));
  }_createClass(GetServiceProblemList, [{ key: "getUrl", value: function getUrl()

    {
      return "/zdapi/im/getCustomerConsultation";
    } }]);return GetServiceProblemList;}(_RequestApi18.RequestApi);


// 判断是否是屏蔽
exports.GetServiceProblemList = GetServiceProblemList;var IsInBlackList = /*#__PURE__*/function (_RequestApi15) {_inherits(IsInBlackList, _RequestApi15);
  function IsInBlackList(responseData) {_classCallCheck(this, IsInBlackList);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "kdb";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(IsInBlackList).call(this,
    item));
  }_createClass(IsInBlackList, [{ key: "getUrl", value: function getUrl()

    {
      return "/zdapi/im/isInBlackList";
    } }]);return IsInBlackList;}(_RequestApi18.RequestApi);


// 客服智能回复
exports.IsInBlackList = IsInBlackList;var SmartService = /*#__PURE__*/function (_RequestApi16) {_inherits(SmartService, _RequestApi16);
  function SmartService(responseData) {_classCallCheck(this, SmartService);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "kdb";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(SmartService).call(this,
    item));
  }_createClass(SmartService, [{ key: "getUrl", value: function getUrl()

    {
      return "/zdapi/im/smartServiceNew";
    } }]);return SmartService;}(_RequestApi18.RequestApi);


// 获取云信token
exports.SmartService = SmartService;var GetYunXinToken = /*#__PURE__*/function (_RequestApi17) {_inherits(GetYunXinToken, _RequestApi17);
  function GetYunXinToken(responseData) {_classCallCheck(this, GetYunXinToken);
    var item = new _RequestApi18.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetYunXinToken).call(this,
    item));
  }_createClass(GetYunXinToken, [{ key: "getUrl", value: function getUrl()

    {
      return "/kdbWeb/brokerApi/im/getYunXinToken";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }, { key: "getHeader", value: function getHeader()

    {
      return {
        "U-FS": "erpappv1",
        'appSource': '5' };

    } }]);return GetYunXinToken;}(_RequestApi18.RequestApi);exports.GetYunXinToken = GetYunXinToken;

/***/ }),

/***/ 258:
/*!**************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/Staff.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.TransferCust = exports.ChangeBuildConsultant = exports.GetCustListForStaff = exports.PermissionsAllocation = exports.CancelUser = exports.GetAllUserListForStaff = exports.AddStaff = void 0;var _RequestApi8 = __webpack_require__(/*! ../utils/RequestApi */ 26);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

//　添加员工
var AddStaff = /*#__PURE__*/function (_RequestApi) {_inherits(AddStaff, _RequestApi);
  function AddStaff(responseData) {_classCallCheck(this, AddStaff);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(AddStaff).call(this,
    item));
  }_createClass(AddStaff, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/addUser";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return AddStaff;}(_RequestApi8.RequestApi);


// 获取员工列表
exports.AddStaff = AddStaff;var GetAllUserListForStaff = /*#__PURE__*/function (_RequestApi2) {_inherits(GetAllUserListForStaff, _RequestApi2);
  function GetAllUserListForStaff(responseData) {_classCallCheck(this, GetAllUserListForStaff);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetAllUserListForStaff).call(this,
    item));
  }_createClass(GetAllUserListForStaff, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/getAllUserList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetAllUserListForStaff;}(_RequestApi8.RequestApi);


// 注销员工
exports.GetAllUserListForStaff = GetAllUserListForStaff;var CancelUser = /*#__PURE__*/function (_RequestApi3) {_inherits(CancelUser, _RequestApi3);
  function CancelUser(responseData) {_classCallCheck(this, CancelUser);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CancelUser).call(this,
    item));
  }_createClass(CancelUser, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/cancelUser";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return CancelUser;}(_RequestApi8.RequestApi);


// 设置权限
exports.CancelUser = CancelUser;var PermissionsAllocation = /*#__PURE__*/function (_RequestApi4) {_inherits(PermissionsAllocation, _RequestApi4);
  function PermissionsAllocation(responseData) {_classCallCheck(this, PermissionsAllocation);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(PermissionsAllocation).call(this,
    item));
  }_createClass(PermissionsAllocation, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/permissionsAllocation";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return PermissionsAllocation;}(_RequestApi8.RequestApi);


// 查询员工下的客户
exports.PermissionsAllocation = PermissionsAllocation;var GetCustListForStaff = /*#__PURE__*/function (_RequestApi5) {_inherits(GetCustListForStaff, _RequestApi5);
  function GetCustListForStaff(responseData) {_classCallCheck(this, GetCustListForStaff);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCustListForStaff).call(this,
    item));
  }_createClass(GetCustListForStaff, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/dvlp/cust/getCustList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetCustListForStaff;}(_RequestApi8.RequestApi);


// 员工调动
exports.GetCustListForStaff = GetCustListForStaff;var ChangeBuildConsultant = /*#__PURE__*/function (_RequestApi6) {_inherits(ChangeBuildConsultant, _RequestApi6);
  function ChangeBuildConsultant(responseData) {_classCallCheck(this, ChangeBuildConsultant);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(ChangeBuildConsultant).call(this,
    item));
  }_createClass(ChangeBuildConsultant, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/changeBuildConsultant";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return ChangeBuildConsultant;}(_RequestApi8.RequestApi);


// 移交客户
exports.ChangeBuildConsultant = ChangeBuildConsultant;var TransferCust = /*#__PURE__*/function (_RequestApi7) {_inherits(TransferCust, _RequestApi7);
  function TransferCust(responseData) {_classCallCheck(this, TransferCust);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(TransferCust).call(this,
    item));
  }_createClass(TransferCust, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/transferCust";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return TransferCust;}(_RequestApi8.RequestApi);exports.TransferCust = TransferCust;

/***/ }),

/***/ 259:
/*!*****************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/IndexNet.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.SellProportion = exports.CustStatisticInfo = exports.TodayCustStc = exports.GetSpreadParam = exports.GetUserManageBuildList = exports.ChangeBuild = exports.GetIndexInfo = void 0;var _RequestApi8 = __webpack_require__(/*! ../utils/RequestApi */ 26);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

// 获取首页信息 java 置业顾问端
var GetIndexInfo = /*#__PURE__*/function (_RequestApi) {_inherits(GetIndexInfo, _RequestApi);
  function GetIndexInfo(request) {_classCallCheck(this, GetIndexInfo);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(GetIndexInfo).call(this,
    item));
  }_createClass(GetIndexInfo, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/consultant/getIndexInfo";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetIndexInfo;}(_RequestApi8.RequestApi);


// 切换楼盘
exports.GetIndexInfo = GetIndexInfo;var ChangeBuild = /*#__PURE__*/function (_RequestApi2) {_inherits(ChangeBuild, _RequestApi2);
  function ChangeBuild(request) {_classCallCheck(this, ChangeBuild);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(ChangeBuild).call(this,
    item));
  }_createClass(ChangeBuild, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/changeBuild";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return ChangeBuild;}(_RequestApi8.RequestApi);


// 楼盘管理员管理的楼盘列表
exports.ChangeBuild = ChangeBuild;var GetUserManageBuildList = /*#__PURE__*/function (_RequestApi3) {_inherits(GetUserManageBuildList, _RequestApi3);
  function GetUserManageBuildList(request) {_classCallCheck(this, GetUserManageBuildList);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(GetUserManageBuildList).call(this,
    item));
  }_createClass(GetUserManageBuildList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/getUserManageBuildList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetUserManageBuildList;}(_RequestApi8.RequestApi);


// 楼盘推广数
exports.GetUserManageBuildList = GetUserManageBuildList;var GetSpreadParam = /*#__PURE__*/function (_RequestApi4) {_inherits(GetSpreadParam, _RequestApi4);
  function GetSpreadParam(request) {_classCallCheck(this, GetSpreadParam);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(GetSpreadParam).call(this,
    item));
  }_createClass(GetSpreadParam, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/index/getSpreadParam";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetSpreadParam;}(_RequestApi8.RequestApi);


// 今日客户情况
exports.GetSpreadParam = GetSpreadParam;var TodayCustStc = /*#__PURE__*/function (_RequestApi5) {_inherits(TodayCustStc, _RequestApi5);
  function TodayCustStc(request) {_classCallCheck(this, TodayCustStc);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(TodayCustStc).call(this,
    item));
  }_createClass(TodayCustStc, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/dvlp/statistics/todayCustStc";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return TodayCustStc;}(_RequestApi8.RequestApi);


// 客户转化率
exports.TodayCustStc = TodayCustStc;var CustStatisticInfo = /*#__PURE__*/function (_RequestApi6) {_inherits(CustStatisticInfo, _RequestApi6);
  function CustStatisticInfo(request) {_classCallCheck(this, CustStatisticInfo);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(CustStatisticInfo).call(this,
    item));
  }_createClass(CustStatisticInfo, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/dvlp/statistics/custStatisticInfo";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return CustStatisticInfo;}(_RequestApi8.RequestApi);


// 销售占比
exports.CustStatisticInfo = CustStatisticInfo;var SellProportion = /*#__PURE__*/function (_RequestApi7) {_inherits(SellProportion, _RequestApi7);
  function SellProportion(request) {_classCallCheck(this, SellProportion);
    var item = new _RequestApi8.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(SellProportion).call(this,
    item));
  }_createClass(SellProportion, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/dvlp/cust/sellProportion";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return SellProportion;}(_RequestApi8.RequestApi);exports.SellProportion = SellProportion;

/***/ }),

/***/ 26:
/*!*********************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/RequestApi.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.RequestApi = exports.RequestApiItem = exports.RequestTimeOut = void 0;

var _Const = __webpack_require__(/*! ./Const */ 17);
var _config = __webpack_require__(/*! ../config/config.js */ 16);
var _UserInfoModel = __webpack_require__(/*! ../model/UserInfoModel */ 12);
var _LoginSuccessModel = __webpack_require__(/*! ../model/LoginSuccessModel */ 18);
var _DifferenceApi = __webpack_require__(/*! ./DifferenceApi */ 27);
var _CommonModel = __webpack_require__(/*! ../model/CommonModel */ 28);
var _ImChart = __webpack_require__(/*! ./ImChart */ 21);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var

RequestTimeOut = /*#__PURE__*/function () {




  function RequestTimeOut() {_classCallCheck(this, RequestTimeOut);
    this.timeoutTime = 50000;
  }_createClass(RequestTimeOut, [{ key: "send", value: function send()

    {var _this = this;
      return new Promise(function (resolve, reject) {
        RequestTimeOut.timeoutFun = setTimeout(function () {
          RequestTimeOut.timeoutFun = null;
          reject("超时");
        }, _this.timeoutTime);
      });
    } }]);return RequestTimeOut;}();exports.RequestTimeOut = RequestTimeOut;_defineProperty(RequestTimeOut, "isTokenError", false);_defineProperty(RequestTimeOut, "timeoutFun", null);_defineProperty(RequestTimeOut, "isInLoginPage", false);var



RequestApiItem = function RequestApiItem() {_classCallCheck(this, RequestApiItem);_defineProperty(this, "method",
  "post");_defineProperty(this, "domain",
  "java");_defineProperty(this, "header",
  {});_defineProperty(this, "data",
  {});};exports.RequestApiItem = RequestApiItem;var


RequestApi = /*#__PURE__*/function () {


  function RequestApi() {var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new RequestApiItem();_classCallCheck(this, RequestApi);_defineProperty(this, "url", "");_defineProperty(this, "domain", "");
    this.request = item;
    this.domain = item.domain;
    this.url = item.domain.indexOf("http") === -1 ?
    _config.Config[item.domain] + this.getUrl() :
    item.domain + this.getUrl();
  }_createClass(RequestApi, [{ key: "factoryMap", value: function factoryMap()

    {
      var map = new Map([
      ["get", "getRequest"],
      ["post", "postRequest"]]);

      if (!map.has(this.request.method)) return "nullRequest";

      return map.get(this.request.method);
    } }, { key: "send", value: function send()

    {var _this2 = this;
      return new Promise(function (resolve, reject) {
        if (!_this2.url) {
          throw new Error("请配置请求的url");
        }

        if (typeof _this2.request.data === "object" &&
        _this2.request.data instanceof Array) {
          throw new Error("data类型是对象");
        }

        if (_this2.getNeedClientKey() && _this2.getNeedTokenDomain() &&
        !new _UserInfoModel.UserInfoModel().getModel("clientKey")) {
          _this2.tokeError("");
          return;
        }

        Promise.race([_this2[_this2.factoryMap()](), new RequestTimeOut().send()]).
        then(function (res) {
          RequestTimeOut.timeoutFun = null;
          resolve(res);
        }).
        catch(function (err) {
          RequestTimeOut.timeoutFun = null;
          reject(err);
        });
      });
    } }, { key: "getRequest", value: function getRequest()

    {var _this3 = this;
      var header = this.getHeader();
      if (this.getNeedClientKey()) {
        header["clientKey"] = _LoginSuccessModel.GetLoginModel.getClientKey();
      }
      header["appSource"] = _LoginSuccessModel.GetLoginModel.getAccountSource() == 2 ? 4 : 3;
      header["U-FS"] = "erpappv1";
      return new Promise(function (resolve, reject) {
        uni.request({
          url: _this3.url,
          data: _this3.request.data,
          header: header,
          method: "GET",
          success: function success(res) {
            if (res.status && res.status !== _Const.Const.success) {
              reject(res);
              return;
            }

            if (res.statusCode && res.statusCode !== _Const.Const.success) {
              reject(res);
              return;
            }

            var data = res.data || {};
            if (data.errCode && _this3.getNeedTokenDomain() &&
            data.errCode === _Const.Const.tokenExpireCode) {
              _this3.tokeError(data.errMsg || "");
              // resolve(data);
              return;
            }

            if (data.errCode && _this3.getNeedTokenDomain() &&
            data.errCode === 400) {
              _this3.tokeError(data.errMsg || "");
              // resolve(data);
              return;
            }

            if (data.errCode && _this3.getNeedTokenDomain() &&
            data.errCode === 500 && data.errMsg &&
            data.errMsg.indexOf("重新登录") >= 0) {
              _this3.tokeError(data.errMsg || "");
              // resolve(data);
              return;
            }

            resolve(data);
          },
          fail: function fail(res) {
            reject(res);
          } });

      });
    } }, { key: "postRequest", value: function postRequest()

    {var _this4 = this;
      var header = this.getHeader();
      if (this.getNeedClientKey() && _LoginSuccessModel.GetLoginModel.getClientKey()) {
        header["clientKey"] = _LoginSuccessModel.GetLoginModel.getClientKey();
      }
      header["appSource"] = _LoginSuccessModel.GetLoginModel.getAccountSource() == 2 ? 4 : 3;
      header["U-FS"] = "erpappv1";
      return new Promise(function (resolve, reject) {
        uni.request({
          url: _this4.url,
          data: _this4.request.data,
          method: "POST",
          header: header,
          success: function success(res) {
            if (res.status && res.status !== _Const.Const.success) {
              reject(res);
              return;
            }

            if (res.statusCode && res.statusCode !== _Const.Const.success) {
              reject(res);
              return;
            }

            var data = res.data || {};
            if (data.errCode && _this4.getNeedTokenDomain() &&
            data.errCode === _Const.Const.tokenExpireCode) {
              _this4.tokeError(data.errMsg || "");
              // resolve(data);
              return;
            }

            if (data.errCode && _this4.getNeedTokenDomain() &&
            data.errCode === 400) {
              _this4.tokeError(data.errMsg || "");
              // resolve(data);
              return;
            }

            if (data.errCode && _this4.getNeedTokenDomain() &&
            data.errCode === 500 && data.errMsg &&
            data.errMsg.indexOf("重新登录") >= 0) {
              _this4.tokeError(data.errMsg || "");
              // resolve(data);
              return;
            }

            resolve(data);
          },
          fail: function fail(res) {
            reject(res);
          } });

      });
    } }, { key: "nullRequest", value: function nullRequest()

    {
      return new Promise(function (resolve, reject) {
        reject("");
        throw new Error("请求method不是get/post");
      });
    }

    // 判断那些域名才校验域名
  }, { key: "getNeedTokenDomain", value: function getNeedTokenDomain() {
      var needTokenDomains = ["java"];
      return needTokenDomains.includes(this.domain);
    } }, { key: "tokeError", value: function tokeError()

    {var errMsg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      if (!this.checkClientKey()) return;

      if (RequestTimeOut.isTokenError) return;

      new _DifferenceApi.DifferenceApi().showToast(errMsg || "登录已失效,请重新登录");
      RequestTimeOut.isTokenError = true;
      new _UserInfoModel.UserInfoModel().setModel("", "clientKey");
      var routePath = getCurrentPages() && getCurrentPages().length > 0 ?
      getCurrentPages()[0].route || "pages/index/index" :
      "pages/index/index";
      new _CommonModel.CommonModel().setModel("/" + routePath, "routePath");var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {
        for (var _iterator = (getCurrentPages() || [])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var info = _step.value;
          if (info.route.indexOf("login/login") >= 0) {
            RequestTimeOut.isInLoginPage = true;
            break;
          }
        }} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return != null) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}
      if (!RequestTimeOut.isInLoginPage) {
        RequestTimeOut.isInLoginPage = true;
        _ImChart.ImChart.exitLogin();
        setTimeout(function () {
          uni.reLaunch({
            url: "/pagesSet/login/login" });

        }, 800);
      }
    } }, { key: "getUrl", value: function getUrl()

    {
      return "";
    } }, { key: "getHeader", value: function getHeader()

    {
      return {};
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    }

    // 是否检测clientKey
  }, { key: "checkClientKey", value: function checkClientKey() {
      return true;
    } }]);return RequestApi;}();exports.RequestApi = RequestApi;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 27:
/*!************************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/DifferenceApi.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.DifferenceApi = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}

// 由于部分api在不同环境有差异无法使用,所以这个文件的价值得到了体现
var DifferenceApi = /*#__PURE__*/function () {function DifferenceApi() {_classCallCheck(this, DifferenceApi);}_createClass(DifferenceApi, [{ key: "makePhoneCall",
    // 拨打电话
    value: function makePhoneCall() {var tel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      if (!tel) {
        uni.showToast({
          icon: "none",
          title: "暂无电话，无法拨打" });

        return;
      }





      uni.makePhoneCall({
        phoneNumber: tel });


    }

    // 查询节点信息
  }, { key: "boundingClientRect", value: function boundingClientRect() {var _this = this;var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;
      return new Promise(function (resolve, reject) {
        if (!node) {
          resolve({});
          return;
        }









        _this.createSelectorQuery(page).
        select(node).boundingClientRect(function (data) {
          resolve(data || {});
        }).exec();

      });
    }

    // 创建节点
  }, { key: "createSelectorQuery", value: function createSelectorQuery() {var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this;













      return uni.createSelectorQuery().in(page);

    }

    // 授权获取code
  }, { key: "getAuthCode", value: function getAuthCode() {var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
























    }

    // 设置title
  }, { key: "setNavigationBarTitle", value: function setNavigationBarTitle() {var info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};





      uni.setNavigationBarTitle(info);

    }

    // toast
  }, { key: "showToast", value: function showToast(text) {var icon = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "none";var position = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "bottom";





      uni.showToast({ title: text, icon: icon, position: position, mask: true });

    } }]);return DifferenceApi;}();exports.DifferenceApi = DifferenceApi;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 28:
/*!**********************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/CommonModel.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.CommonModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ./DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

// 包含的key: enterAppTime(存的16位时间戳), 
var CommonModel = /*#__PURE__*/function (_DefaultModel) {_inherits(CommonModel, _DefaultModel);
  function CommonModel() {_classCallCheck(this, CommonModel);return _possibleConstructorReturn(this, _getPrototypeOf(CommonModel).call(this));

  }_createClass(CommonModel, [{ key: "getKey", value: function getKey()

    {
      return "CommonModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return CommonModel;}(_DefaultModel2.DefaultModel);exports.CommonModel = CommonModel;

/***/ }),

/***/ 29:
/*!****************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/im/UnReadMsgModel.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.UnReadRemindModel = exports.UnReadVoiceModel = exports.UnReadMsgModel = void 0;var _DefaultModel4 = __webpack_require__(/*! ../DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var


UnReadMsgModel = /*#__PURE__*/function (_DefaultModel) {_inherits(UnReadMsgModel, _DefaultModel);
  function UnReadMsgModel() {_classCallCheck(this, UnReadMsgModel);return _possibleConstructorReturn(this, _getPrototypeOf(UnReadMsgModel).call(this));

  }_createClass(UnReadMsgModel, [{ key: "getKey", value: function getKey()

    {
      return "UnReadMsgModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return UnReadMsgModel;}(_DefaultModel4.DefaultModel);


// 未读语音
exports.UnReadMsgModel = UnReadMsgModel;var UnReadVoiceModel = /*#__PURE__*/function (_DefaultModel2) {_inherits(UnReadVoiceModel, _DefaultModel2);
  function UnReadVoiceModel() {_classCallCheck(this, UnReadVoiceModel);return _possibleConstructorReturn(this, _getPrototypeOf(UnReadVoiceModel).call(this));

  }_createClass(UnReadVoiceModel, [{ key: "getKey", value: function getKey()

    {
      return "UnReadVoiceModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return UnReadVoiceModel;}(_DefaultModel4.DefaultModel);exports.UnReadVoiceModel = UnReadVoiceModel;var


UnReadRemindModel = /*#__PURE__*/function (_DefaultModel3) {_inherits(UnReadRemindModel, _DefaultModel3);
  function UnReadRemindModel() {_classCallCheck(this, UnReadRemindModel);return _possibleConstructorReturn(this, _getPrototypeOf(UnReadRemindModel).call(this));

  }_createClass(UnReadRemindModel, [{ key: "getKey", value: function getKey()

    {
      return "UnReadRemindModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return UnReadRemindModel;}(_DefaultModel4.DefaultModel);exports.UnReadRemindModel = UnReadRemindModel;

/***/ }),

/***/ 3:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 30:
/*!*************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/im/LastMsgTime.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.LastMsgTime = void 0;var _DefaultModel2 = __webpack_require__(/*! ../DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var


LastMsgTime = /*#__PURE__*/function (_DefaultModel) {_inherits(LastMsgTime, _DefaultModel);
  function LastMsgTime() {_classCallCheck(this, LastMsgTime);return _possibleConstructorReturn(this, _getPrototypeOf(LastMsgTime).call(this));

  }_createClass(LastMsgTime, [{ key: "getKey", value: function getKey()

    {
      return "LastMsgTime";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return LastMsgTime;}(_DefaultModel2.DefaultModel);exports.LastMsgTime = LastMsgTime;

/***/ }),

/***/ 31:
/*!********************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/im/PositionChartModel.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.PositionChartModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ../DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}


// 位置消息
var PositionChartModel = /*#__PURE__*/function (_DefaultModel) {_inherits(PositionChartModel, _DefaultModel);
  function PositionChartModel() {_classCallCheck(this, PositionChartModel);return _possibleConstructorReturn(this, _getPrototypeOf(PositionChartModel).call(this));

  }_createClass(PositionChartModel, [{ key: "getKey", value: function getKey()

    {
      return "PositionChartModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return PositionChartModel;}(_DefaultModel2.DefaultModel);exports.PositionChartModel = PositionChartModel;

/***/ }),

/***/ 32:
/*!********************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/im/UnReadMsgTimeModel.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.UnReadMsgTimeModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ../DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var


UnReadMsgTimeModel = /*#__PURE__*/function (_DefaultModel) {_inherits(UnReadMsgTimeModel, _DefaultModel);
  function UnReadMsgTimeModel() {_classCallCheck(this, UnReadMsgTimeModel);return _possibleConstructorReturn(this, _getPrototypeOf(UnReadMsgTimeModel).call(this));

  }_createClass(UnReadMsgTimeModel, [{ key: "getKey", value: function getKey()

    {
      return "UnReadMsgTimeModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return UnReadMsgTimeModel;}(_DefaultModel2.DefaultModel);exports.UnReadMsgTimeModel = UnReadMsgTimeModel;

/***/ }),

/***/ 33:
/*!******************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/MsgPush.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.MsgPush = exports.DealLastMsg = void 0;

var _MsgEntrustPushModel = __webpack_require__(/*! ../model/im/MsgEntrustPushModel.js */ 34);
var _UserInfoModel = __webpack_require__(/*! ../model/UserInfoModel.js */ 12);
var _Notify = __webpack_require__(/*! ../utils/Notify.js */ 19);
var _Notification = __webpack_require__(/*! ../utils/Notification.js */ 20);function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _get(target, property, receiver) {if (typeof Reflect !== "undefined" && Reflect.get) {_get = Reflect.get;} else {_get = function _get(target, property, receiver) {var base = _superPropBase(target, property);if (!base) return;var desc = Object.getOwnPropertyDescriptor(base, property);if (desc.get) {return desc.get.call(receiver);}return desc.value;};}return _get(target, property, receiver || target);}function _superPropBase(object, property) {while (!Object.prototype.hasOwnProperty.call(object, property)) {object = _getPrototypeOf(object);if (object === null) break;}return object;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

// 将收到的委托推送消息设置到缓存;
var DealLastMsg = /*#__PURE__*/function () {function DealLastMsg() {_classCallCheck(this, DealLastMsg);}_createClass(DealLastMsg, null, [{ key: "upDataMap",
    // archiveId: {text: "", timeStr: "时间戳"};
    value: function upDataMap()

    {
      this.dataMap = new _MsgEntrustPushModel.MsgEntrustPushModel().getModel() || {};
    } }, { key: "getData", value: function getData(

    archiveId) {
      this.upDataMap();
      return this.dataMap[archiveId] || {};
    } }, { key: "setData", value: function setData(

    archiveId, data) {
      this.upDataMap();
      data[archiveId] = archiveId;
      this.dataMap[archiveId] = data;
      new _MsgEntrustPushModel.MsgEntrustPushModel().setModel(this.dataMap);
    } }]);return DealLastMsg;}();


// 根据IM推送的消息类型，做本地分发推送
exports.DealLastMsg = DealLastMsg;_defineProperty(DealLastMsg, "dataMap", new _MsgEntrustPushModel.MsgEntrustPushModel().getModel() || {});var MsgPush = /*#__PURE__*/function () {

  // 接收到消息类型

  function MsgPush(type) {_classCallCheck(this, MsgPush);_defineProperty(this, "eventMap", new Map());_defineProperty(this, "type", "");
    // 后台换了类型，就不用这个了
    // this.type = type;
    this.initEventMap();
  }_createClass(MsgPush, [{ key: "initEventMap", value: function initEventMap()

    {
      this.eventMap.
      set("BROKER_RECEIVE", [ReceiveOrder]) // 接收订单
      .set("BROKER_RECOM_HOUSE", [RecommendHouse]) // 推荐房源
      .set("BROKER_INVITE_EVA", [TakeLookEvaluate]) // 带看评价
      .set("BROKER_PAY_TIP", [CommissionPay]) // 佣金支付
      .set("entrustLookHouse", [EntrustLookHouse]).
      set("entrustFinishLookHouse", [EntrustFinishLookHouse]).
      set("entrustDealService", [EntrustDealService]).
      set("robEntrustPublish", [RobEntrustPublish]).
      set("robEntrustEdit", [RobEntrustEdit]).
      set("robEntrustLowerShelfCancel", [RobEntrustLowerShelfCancel]).
      set("robEntrustRemind", [RobEntrustRemind]);
    } }, { key: "push", value: function push(

    msg) {
      this.type = msg.msg_type || "";
      // 为了应变后台这块这样操作
      if (msg.pushLogId) {
        this.type = "BROKER_RECEIVE";
      }
      var list = this.eventMap.has(this.type) ? this.eventMap.get(this.type) || [] : [];var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {
        for (var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var event = _step.value;
          new event(msg);
        }
        // 如果有委托推送im消息则推送一条通知
      } catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return != null) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}if (list.length > 0) {
        new _Notification.Notification().postNotification(_Notify.Notify.NewMsgChanged.Name,
        { type: _Notify.Notify.NewMsgChanged.Type_entrust });
      }
    } }]);return MsgPush;}();



// 页面跳转处理
exports.MsgPush = MsgPush;var PageToDeal = /*#__PURE__*/function () {
  function PageToDeal() {_classCallCheck(this, PageToDeal);}

  // 跳转到委托详情
  _createClass(PageToDeal, [{ key: "getEntrustDetailUrl", value: function getEntrustDetailUrl(caseType, entrustId) {
      var url = "/pagesEntrust/prizeTrustDetail/prizeTrustDetail?entrustId=" + entrustId;
      if (caseType == 2 || caseType == 1) {
        // 卖房、出租委托详情
        url = "/pagesEntrust/entrustDetail/entrustDetail?entrustId=" + entrustId;
      }
      return url;
    }

    // 跳转到im详情
  }, { key: "getImDetailUrl", value: function getImDetailUrl(archiveId) {
      var me = new _UserInfoModel.UserInfoModel().getModel("me") || {};
      var accid = new _UserInfoModel.UserInfoModel().getModel("accid") || "";
      var openId = me.openId || "";
      var messageId = archiveId;
      var userId = me.userId || "";
      var url = "/pagesTool/messageDetailH5/messageDetailH5";

      url = "/pagesTool/messageDetail/messageDetail";

      return url + "?userId=" + userId + "&openId=" + openId +
      "&messageId=" + messageId + "&accid=" + accid;
    } }]);return PageToDeal;}();



// 基类
var DefaultMsg = /*#__PURE__*/function () {

  function DefaultMsg() {var msg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};_classCallCheck(this, DefaultMsg);_defineProperty(this, "msg", {});
    this.msg = msg;
    this.dealMsg();
    DealLastMsg.setData(this.msg.archiveId,
    { text: this.msg.content, timeStr: new Date().getTime() });
    // 判断是否需要推送
    if (!this.checkIsPush()) return;

    // 创建单例 防止多次创建弹窗，弹窗销毁后再创建下一个
    if (!DefaultMsg.instance) {
      this.init();
      DefaultMsg.instance = this;
    }
    return DefaultMsg.instance;
  }

  // 简单地处理一下数据，具体的处理方式由子类决定
  _createClass(DefaultMsg, [{ key: "dealMsg", value: function dealMsg() {
      var msg = this.msg;
      msg.title = msg.detail_title || "";
      msg.content = msg.detail_content || "";
      msg.entrustId = msg.pushLogId || "";
      msg.archiveId = msg.fromArchiveId || "";
      msg.caseType = msg.caseType || "";
      this.msg = msg;
    }

    // 子类去实现具体的方法
  }, { key: "init", value: function init() {} }, { key: "destroyInstance",

    // 销毁单例
    value: function destroyInstance() {
      DefaultMsg.instance = null;
    }

    // 模态窗参数
  }, { key: "modalItem", value: function modalItem() {var
      Item = function Item() {_classCallCheck(this, Item);_defineProperty(this, "title",
        "");_defineProperty(this, "content",
        "");_defineProperty(this, "cancelText",
        "取消");_defineProperty(this, "cancelColor",
        "#a6a6a6");_defineProperty(this, "confirmText",
        "确定");_defineProperty(this, "confirmColor",
        "#ff5400");};

      return new Item();
    } }, { key: "setModal", value: function setModal()

    {var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.modalItem();var confirm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};var cancel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};
      var that = this;
      uni.showModal({
        title: item.title,
        content: item.content,
        showCancel: true,
        cancelColor: item.cancelColor || "#a6a6a6",
        cancelText: item.cancelText || "取消",
        confirmText: item.confirmText || "确定",
        confirmColor: item.confirmColor || "#ff5400",
        success: function success(res) {
          that.destroyInstance();
          if (res.confirm) {
            confirm(res);
            return;
          }

          cancel(res);
        } });

    }

    // 页面跳转
  }, { key: "pageTo", value: function pageTo(url) {var method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "navigateTo";
      if (!uni[method]) {
        throw new Error("该页面跳转方法不存在");
      }

      uni[method]({
        url: url });

    }

    // 判断是否需要推送
  }, { key: "checkIsPush", value: function checkIsPush() {} }]);return DefaultMsg;}();


// 接收订单
var ReceiveOrder = /*#__PURE__*/function (_DefaultMsg) {_inherits(ReceiveOrder, _DefaultMsg);
  function ReceiveOrder(msg) {_classCallCheck(this, ReceiveOrder);return _possibleConstructorReturn(this, _getPrototypeOf(ReceiveOrder).call(this,
    msg));
  }

  // msg => caseType;entrustId: 委托id;
  _createClass(ReceiveOrder, [{ key: "init", value: function init() {var _this = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      if (!this.msg.caseType) {
        throw new Error("暂无caseType");
      }
      if (!this.msg.entrustId) {
        throw new Error("暂无委托id");
      }
      var item = _get(_getPrototypeOf(ReceiveOrder.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(ReceiveOrder.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(ReceiveOrder.prototype), "pageTo", _this).call(_this, new PageToDeal().getEntrustDetailUrl(_this.msg.caseType, _this.msg.entrustId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i = 0; _i < noNeedPushPages.length; _i++) {var page = noNeedPushPages[_i];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return ReceiveOrder;}(DefaultMsg);


// 推荐房源
var RecommendHouse = /*#__PURE__*/function (_DefaultMsg2) {_inherits(RecommendHouse, _DefaultMsg2);
  function RecommendHouse(msg) {_classCallCheck(this, RecommendHouse);return _possibleConstructorReturn(this, _getPrototypeOf(RecommendHouse).call(this,
    msg));
  }

  // msg => archiveId: 经纪人id;
  _createClass(RecommendHouse, [{ key: "init", value: function init() {var _this2 = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.archiveId) {
        throw new Error("暂无经纪人id");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      var item = _get(_getPrototypeOf(RecommendHouse.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(RecommendHouse.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(RecommendHouse.prototype), "pageTo", _this2).call(_this2, new PageToDeal().getImDetailUrl(_this2.msg.archiveId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i2 = 0; _i2 < noNeedPushPages.length; _i2++) {var page = noNeedPushPages[_i2];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return RecommendHouse;}(DefaultMsg);


// 带看评价
var TakeLookEvaluate = /*#__PURE__*/function (_DefaultMsg3) {_inherits(TakeLookEvaluate, _DefaultMsg3);
  function TakeLookEvaluate(msg) {_classCallCheck(this, TakeLookEvaluate);return _possibleConstructorReturn(this, _getPrototypeOf(TakeLookEvaluate).call(this,
    msg));
  }

  // msg => archiveId: 经纪人id;
  _createClass(TakeLookEvaluate, [{ key: "init", value: function init() {var _this3 = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      if (!this.msg.archiveId) {
        throw new Error("暂无经纪人id");
      }
      var item = _get(_getPrototypeOf(TakeLookEvaluate.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(TakeLookEvaluate.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(TakeLookEvaluate.prototype), "pageTo", _this3).call(_this3, new PageToDeal().getImDetailUrl(_this3.msg.archiveId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i3 = 0; _i3 < noNeedPushPages.length; _i3++) {var page = noNeedPushPages[_i3];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return TakeLookEvaluate;}(DefaultMsg);


// 佣金支付
var CommissionPay = /*#__PURE__*/function (_DefaultMsg4) {_inherits(CommissionPay, _DefaultMsg4);
  function CommissionPay(msg) {_classCallCheck(this, CommissionPay);return _possibleConstructorReturn(this, _getPrototypeOf(CommissionPay).call(this,
    msg));
  }

  // msg => archiveId: 经纪人id;
  _createClass(CommissionPay, [{ key: "init", value: function init() {var _this4 = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      if (!this.msg.archiveId) {
        throw new Error("暂无经纪人id");
      }
      var item = _get(_getPrototypeOf(CommissionPay.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(CommissionPay.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(CommissionPay.prototype), "pageTo", _this4).call(_this4, new PageToDeal().getImDetailUrl(_this4.msg.archiveId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i4 = 0; _i4 < noNeedPushPages.length; _i4++) {var page = noNeedPushPages[_i4];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return CommissionPay;}(DefaultMsg);


// 专属委托 -- 看房通知
var EntrustLookHouse = /*#__PURE__*/function (_DefaultMsg5) {_inherits(EntrustLookHouse, _DefaultMsg5);
  function EntrustLookHouse(msg) {_classCallCheck(this, EntrustLookHouse);return _possibleConstructorReturn(this, _getPrototypeOf(EntrustLookHouse).call(this,
    msg));
  }

  // msg => entrustId: 委托id;caseType;
  _createClass(EntrustLookHouse, [{ key: "init", value: function init() {var _this5 = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      if (!this.msg.entrustId) {
        throw new Error("暂无委托id");
      }
      if (!this.msg.caseType) {
        throw new Error("暂无caseType");
      }
      var item = _get(_getPrototypeOf(EntrustLookHouse.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(EntrustLookHouse.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(EntrustLookHouse.prototype), "pageTo", _this5).call(_this5, new PageToDeal().getEntrustDetailUrl(_this5.msg.caseType, _this5.msg.entrustId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i5 = 0; _i5 < noNeedPushPages.length; _i5++) {var page = noNeedPushPages[_i5];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return EntrustLookHouse;}(DefaultMsg);


// 专属委托 -- 经纪人完成看房（委托中）
var EntrustFinishLookHouse = /*#__PURE__*/function (_DefaultMsg6) {_inherits(EntrustFinishLookHouse, _DefaultMsg6);
  function EntrustFinishLookHouse(msg) {_classCallCheck(this, EntrustFinishLookHouse);return _possibleConstructorReturn(this, _getPrototypeOf(EntrustFinishLookHouse).call(this,
    msg));
  }

  // msg => entrustId: 委托id;caseType;
  _createClass(EntrustFinishLookHouse, [{ key: "init", value: function init() {var _this6 = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      if (!this.msg.entrustId) {
        throw new Error("暂无委托id");
      }
      if (!this.msg.caseType) {
        throw new Error("暂无caseType");
      }
      var item = _get(_getPrototypeOf(EntrustFinishLookHouse.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(EntrustFinishLookHouse.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(EntrustFinishLookHouse.prototype), "pageTo", _this6).call(_this6, new PageToDeal().getEntrustDetailUrl(_this6.msg.caseType, _this6.msg.entrustId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i6 = 0; _i6 < noNeedPushPages.length; _i6++) {var page = noNeedPushPages[_i6];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return EntrustFinishLookHouse;}(DefaultMsg);


// 专属委托 -- 成交后服务评价
var EntrustDealService = /*#__PURE__*/function (_DefaultMsg7) {_inherits(EntrustDealService, _DefaultMsg7);
  function EntrustDealService(msg) {_classCallCheck(this, EntrustDealService);return _possibleConstructorReturn(this, _getPrototypeOf(EntrustDealService).call(this,
    msg));
  }

  // msg => entrustId: 委托id;caseType;
  _createClass(EntrustDealService, [{ key: "init", value: function init() {var _this7 = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      if (!this.msg.entrustId) {
        throw new Error("暂无委托id");
      }
      if (!this.msg.caseType) {
        throw new Error("暂无caseType");
      }
      var item = _get(_getPrototypeOf(EntrustDealService.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(EntrustDealService.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(EntrustDealService.prototype), "pageTo", _this7).call(_this7, new PageToDeal().getEntrustDetailUrl(_this7.msg.caseType, _this7.msg.entrustId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i7 = 0; _i7 < noNeedPushPages.length; _i7++) {var page = noNeedPushPages[_i7];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return EntrustDealService;}(DefaultMsg);


// 抢单委托 -- 发布审核
var RobEntrustPublish = /*#__PURE__*/function (_DefaultMsg8) {_inherits(RobEntrustPublish, _DefaultMsg8);
  function RobEntrustPublish(msg) {_classCallCheck(this, RobEntrustPublish);return _possibleConstructorReturn(this, _getPrototypeOf(RobEntrustPublish).call(this,
    msg));
  }

  // msg => entrustId: 委托id;caseType;
  _createClass(RobEntrustPublish, [{ key: "init", value: function init() {var _this8 = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      if (!this.msg.entrustId) {
        throw new Error("暂无委托id");
      }
      if (!this.msg.caseType) {
        throw new Error("暂无caseType");
      }
      var item = _get(_getPrototypeOf(RobEntrustPublish.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(RobEntrustPublish.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(RobEntrustPublish.prototype), "pageTo", _this8).call(_this8, new PageToDeal().getEntrustDetailUrl(_this8.msg.caseType, _this8.msg.entrustId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i8 = 0; _i8 < noNeedPushPages.length; _i8++) {var page = noNeedPushPages[_i8];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return RobEntrustPublish;}(DefaultMsg);


// 抢单委托 -- 修改审核
var RobEntrustEdit = /*#__PURE__*/function (_DefaultMsg9) {_inherits(RobEntrustEdit, _DefaultMsg9);
  function RobEntrustEdit(msg) {_classCallCheck(this, RobEntrustEdit);return _possibleConstructorReturn(this, _getPrototypeOf(RobEntrustEdit).call(this,
    msg));
  }

  // msg => entrustId: 委托id;caseType;
  _createClass(RobEntrustEdit, [{ key: "init", value: function init() {var _this9 = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      if (!this.msg.entrustId) {
        throw new Error("暂无委托id");
      }
      if (!this.msg.caseType) {
        throw new Error("暂无caseType");
      }
      var item = _get(_getPrototypeOf(RobEntrustEdit.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(RobEntrustEdit.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(RobEntrustEdit.prototype), "pageTo", _this9).call(_this9, new PageToDeal().getEntrustDetailUrl(_this9.msg.caseType, _this9.msg.entrustId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i9 = 0; _i9 < noNeedPushPages.length; _i9++) {var page = noNeedPushPages[_i9];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return RobEntrustEdit;}(DefaultMsg);


// 抢单委托 -- 下架取消委托
var RobEntrustLowerShelfCancel = /*#__PURE__*/function (_DefaultMsg10) {_inherits(RobEntrustLowerShelfCancel, _DefaultMsg10);
  function RobEntrustLowerShelfCancel(msg) {_classCallCheck(this, RobEntrustLowerShelfCancel);return _possibleConstructorReturn(this, _getPrototypeOf(RobEntrustLowerShelfCancel).call(this,
    msg));
  }

  // msg => entrustId: 委托id;caseType;
  _createClass(RobEntrustLowerShelfCancel, [{ key: "init", value: function init() {var _this10 = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      if (!this.msg.entrustId) {
        throw new Error("暂无委托id");
      }
      if (!this.msg.caseType) {
        throw new Error("暂无caseType");
      }
      var item = _get(_getPrototypeOf(RobEntrustLowerShelfCancel.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(RobEntrustLowerShelfCancel.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(RobEntrustLowerShelfCancel.prototype), "pageTo", _this10).call(_this10, new PageToDeal().getEntrustDetailUrl(_this10.msg.caseType, _this10.msg.entrustId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i10 = 0; _i10 < noNeedPushPages.length; _i10++) {var page = noNeedPushPages[_i10];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return RobEntrustLowerShelfCancel;}(DefaultMsg);


// 抢单委托 -- 提醒业主经纪人查看信息
var RobEntrustRemind = /*#__PURE__*/function (_DefaultMsg11) {_inherits(RobEntrustRemind, _DefaultMsg11);
  function RobEntrustRemind(msg) {_classCallCheck(this, RobEntrustRemind);return _possibleConstructorReturn(this, _getPrototypeOf(RobEntrustRemind).call(this,
    msg));
  }

  // msg => entrustId: 委托id;caseType;
  _createClass(RobEntrustRemind, [{ key: "init", value: function init() {var _this11 = this;
      if (!this.msg.title) {
        throw new Error("暂无title");
      }
      if (!this.msg.content) {
        throw new Error("暂无content");
      }
      if (!this.msg.entrustId) {
        throw new Error("暂无委托id");
      }
      if (!this.msg.caseType) {
        throw new Error("暂无caseType");
      }
      var item = _get(_getPrototypeOf(RobEntrustRemind.prototype), "modalItem", this).call(this);
      item.title = this.msg.title;
      item.content = this.msg.content;
      item.confirmText = "立即查看";
      _get(_getPrototypeOf(RobEntrustRemind.prototype), "setModal", this).call(this, item, function () {
        _get(_getPrototypeOf(RobEntrustRemind.prototype), "pageTo", _this11).call(_this11, new PageToDeal().getEntrustDetailUrl(_this11.msg.caseType, _this11.msg.entrustId));
      });
    } }, { key: "checkIsPush", value: function checkIsPush()

    {
      var routes = getCurrentPages() || [];
      if (routes.length === 0) return true;

      var currentPage = routes[routes.length - 1].route || "";
      if (!currentPage) return true;

      var noNeedPushPages = [
      "pagesTool/messageDetail/messageDetail",
      "pagesTool/messageDetailH5/messageDetailH5",
      "pages/message/message",
      "pagesEntrust/trustList/trustList",
      "pagesEntrust/entrustDetail/entrustDetail",
      "pagesTool/messageDetail/systemMessage"];

      for (var _i11 = 0; _i11 < noNeedPushPages.length; _i11++) {var page = noNeedPushPages[_i11];
        if (currentPage.indexOf(page) >= 0) {
          return false;
        }
      }

      return true;
    } }]);return RobEntrustRemind;}(DefaultMsg);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 332:
/*!*********************************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/CustomerForDevelopersNet.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.PermissionsAllocation = exports.CancelUser = exports.GetAllUserListForStaff = exports.GetBuildLayouts = exports.ApplyNextStep = exports.UpdateCustStatus = exports.GetCustDetailInfo = exports.GetDeptCustInfoList = exports.GetCommissionList = exports.GetCustList = void 0;var _RequestApi11 = __webpack_require__(/*! ../utils/RequestApi */ 26);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

// 获取客户列表 http://hft.myfun7.com/newBuildWeb/pad/cust/getCustList
var GetCustList = /*#__PURE__*/function (_RequestApi) {_inherits(GetCustList, _RequestApi);
  function GetCustList(responseData) {_classCallCheck(this, GetCustList);
    var item = new _RequestApi11.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCustList).call(this,
    item));
  }_createClass(GetCustList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/cust/getCustList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetCustList;}(_RequestApi11.RequestApi);


// 佣金列表获取门店数据 http://dev.51vfang.cn/newBuildWeb/dvlp/commission/commissionList
exports.GetCustList = GetCustList;var GetCommissionList = /*#__PURE__*/function (_RequestApi2) {_inherits(GetCommissionList, _RequestApi2);
  function GetCommissionList(responseData) {_classCallCheck(this, GetCommissionList);
    var item = new _RequestApi11.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCommissionList).call(this,
    item));
  }_createClass(GetCommissionList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/dvlp/commission/commissionList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetCommissionList;}(_RequestApi11.RequestApi);


// 佣金列表下查询某门店客户信息 http://dev.51vfang.cn/newBuildWeb/dvlp/commission/deptCustInfoList
exports.GetCommissionList = GetCommissionList;var GetDeptCustInfoList = /*#__PURE__*/function (_RequestApi3) {_inherits(GetDeptCustInfoList, _RequestApi3);
  function GetDeptCustInfoList(responseData) {_classCallCheck(this, GetDeptCustInfoList);
    var item = new _RequestApi11.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetDeptCustInfoList).call(this,
    item));
  }_createClass(GetDeptCustInfoList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/dvlp/commission/deptCustInfoList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetDeptCustInfoList;}(_RequestApi11.RequestApi);


// 获取用户详情 http://hft.myfun7.com/newBuildWeb/app/newBuild/custBiz/getCustDetailInfo
exports.GetDeptCustInfoList = GetDeptCustInfoList;var GetCustDetailInfo = /*#__PURE__*/function (_RequestApi4) {_inherits(GetCustDetailInfo, _RequestApi4);
  function GetCustDetailInfo(responseData) {_classCallCheck(this, GetCustDetailInfo);
    var item = new _RequestApi11.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCustDetailInfo).call(this,
    item));
  }_createClass(GetCustDetailInfo, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/custBiz/getCustDetailInfo";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetCustDetailInfo;}(_RequestApi11.RequestApi);


// 更改客户状态
exports.GetCustDetailInfo = GetCustDetailInfo;var UpdateCustStatus = /*#__PURE__*/function (_RequestApi5) {_inherits(UpdateCustStatus, _RequestApi5);
  function UpdateCustStatus(responseData) {_classCallCheck(this, UpdateCustStatus);
    var item = new _RequestApi11.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(UpdateCustStatus).call(this,
    item));
  }_createClass(UpdateCustStatus, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/updateCustStatus";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return UpdateCustStatus;}(_RequestApi11.RequestApi);


// 申请权限
exports.UpdateCustStatus = UpdateCustStatus;var ApplyNextStep = /*#__PURE__*/function (_RequestApi6) {_inherits(ApplyNextStep, _RequestApi6);
  function ApplyNextStep(responseData) {_classCallCheck(this, ApplyNextStep);
    var item = new _RequestApi11.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(ApplyNextStep).call(this,
    item));
  }_createClass(ApplyNextStep, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/requestNextStep";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return ApplyNextStep;}(_RequestApi11.RequestApi);


// 认购下拉户型接口 http://dev.51vfang.cn/newBuildWeb/openApi/build/getBuildLayouts
exports.ApplyNextStep = ApplyNextStep;var GetBuildLayouts = /*#__PURE__*/function (_RequestApi7) {_inherits(GetBuildLayouts, _RequestApi7);
  function GetBuildLayouts(responseData) {_classCallCheck(this, GetBuildLayouts);
    var item = new _RequestApi11.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetBuildLayouts).call(this,
    item));
  }_createClass(GetBuildLayouts, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/openApi/build/getBuildLayouts";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetBuildLayouts;}(_RequestApi11.RequestApi);


// 获取员工列表 http://dev.51vfang.cn/newBuildWeb/pad/userManage/getAllUserList
exports.GetBuildLayouts = GetBuildLayouts;var GetAllUserListForStaff = /*#__PURE__*/function (_RequestApi8) {_inherits(GetAllUserListForStaff, _RequestApi8);
  function GetAllUserListForStaff(responseData) {_classCallCheck(this, GetAllUserListForStaff);
    var item = new _RequestApi11.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetAllUserListForStaff).call(this,
    item));
  }_createClass(GetAllUserListForStaff, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/getAllUserList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetAllUserListForStaff;}(_RequestApi11.RequestApi);


// 注销员工
exports.GetAllUserListForStaff = GetAllUserListForStaff;var CancelUser = /*#__PURE__*/function (_RequestApi9) {_inherits(CancelUser, _RequestApi9);
  function CancelUser(responseData) {_classCallCheck(this, CancelUser);
    var item = new _RequestApi11.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CancelUser).call(this,
    item));
  }_createClass(CancelUser, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/cancelUser";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return CancelUser;}(_RequestApi11.RequestApi);


// 设置权限
exports.CancelUser = CancelUser;var PermissionsAllocation = /*#__PURE__*/function (_RequestApi10) {_inherits(PermissionsAllocation, _RequestApi10);
  function PermissionsAllocation(responseData) {_classCallCheck(this, PermissionsAllocation);
    var item = new _RequestApi11.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(PermissionsAllocation).call(this,
    item));
  }_createClass(PermissionsAllocation, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/permissionsAllocation";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return PermissionsAllocation;}(_RequestApi11.RequestApi);exports.PermissionsAllocation = PermissionsAllocation;

/***/ }),

/***/ 333:
/*!************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/CustomerModel.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.CustomerModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ./DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var

CustomerModel = /*#__PURE__*/function (_DefaultModel) {_inherits(CustomerModel, _DefaultModel);
  function CustomerModel() {_classCallCheck(this, CustomerModel);return _possibleConstructorReturn(this, _getPrototypeOf(CustomerModel).call(this));

  }_createClass(CustomerModel, [{ key: "getKey", value: function getKey()

    {
      return "CustomerModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return false;
    } }]);return CustomerModel;}(_DefaultModel2.DefaultModel);exports.CustomerModel = CustomerModel;

/***/ }),

/***/ 34:
/*!*********************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/im/MsgEntrustPushModel.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.MsgEntrustPushModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ../DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var


MsgEntrustPushModel = /*#__PURE__*/function (_DefaultModel) {_inherits(MsgEntrustPushModel, _DefaultModel);
  function MsgEntrustPushModel() {_classCallCheck(this, MsgEntrustPushModel);return _possibleConstructorReturn(this, _getPrototypeOf(MsgEntrustPushModel).call(this));

  }_createClass(MsgEntrustPushModel, [{ key: "getKey", value: function getKey()

    {
      return "MsgEntrustPushModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return MsgEntrustPushModel;}(_DefaultModel2.DefaultModel);exports.MsgEntrustPushModel = MsgEntrustPushModel;

/***/ }),

/***/ 35:
/*!***************************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/DealLiaoKeDetail.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.ImNeedSendShortMessage = exports.DealWeiDianLiaoKeDetail = exports.DealLiaoKeDetail = exports.UpAgentHouseTips = void 0;

var _AgentHouseTipsModel = __webpack_require__(/*! ../model/im/AgentHouseTipsModel.js */ 36);
var _ImChartNet = __webpack_require__(/*! ../net/ImChartNet */ 25);

var _UserInfoModel = __webpack_require__(/*! ../model/UserInfoModel.js */ 12);
var _ImChart = __webpack_require__(/*! ./ImChart */ 21);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}

// 更新撩客的tips显示信息 key: archiveId, value: {alreadyShowTip: boolean}
// alreadyShowTip => 是否出发显示过进入房源的tips规则
// collectTimeStr => 收藏时间
// alreadyShowCollectTips => 是否显示过收藏的tips规则
// archiveId => 经纪人id
// tips => tips的文案
var UpAgentHouseTips = /*#__PURE__*/function () {function UpAgentHouseTips() {_classCallCheck(this, UpAgentHouseTips);}_createClass(UpAgentHouseTips, null, [{ key: "setData", value: function setData(


    archiveId, data) {
      data.archiveId = archiveId;
      this.tipsMap[archiveId] = data;
      new _AgentHouseTipsModel.AgentHouseTipsModel().setModel(this.tipsMap);
    } }, { key: "getData", value: function getData(

    archiveId) {
      return this.tipsMap[archiveId] || {};
    } }]);return UpAgentHouseTips;}();



// 处理房源详情撩客信息
exports.UpAgentHouseTips = UpAgentHouseTips;_defineProperty(UpAgentHouseTips, "tipsMap", new _AgentHouseTipsModel.AgentHouseTipsModel().getModel() || {});var DealLiaoKeDetail = /*#__PURE__*/function () {
  // 经纪人id
  // 收藏时间
  // 是否有聊天
  // 进入房间的延时器
  // 自动隐藏进入房源的撩客tip
  // 收藏房源的延时器

  // 房源参数信息




  function DealLiaoKeDetail(archiveId) {var collectTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;var cityId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";var caseId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";var caseType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "";_classCallCheck(this, DealLiaoKeDetail);_defineProperty(this, "archiveId", "");_defineProperty(this, "collectTime", 10);_defineProperty(this, "haveChart", false);_defineProperty(this, "enterHouseTimeTimeOutVal", null);_defineProperty(this, "autoHideTipTimeOutVal", null);_defineProperty(this, "collectHouseTimeOutVal", null);_defineProperty(this, "cityId", "");_defineProperty(this, "caseId", "");_defineProperty(this, "caseType", "");
    this.archiveId = archiveId;
    this.collectTime = collectTime;
    this.cityId = cityId;
    this.caseId = caseId;
    this.caseType = caseType;
  }_createClass(DealLiaoKeDetail, [{ key: "getUserId", value: function getUserId()

    {
      var me = new _UserInfoModel.UserInfoModel().getModel("me") || "";
      return me.userId || "";
    }

    // 通知net主动发送进入房源撩客信息 private
  }, { key: "sendEnterHouseNet", value: function sendEnterHouseNet() {var fromSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
      // 请求接口
      var userId = this.getUserId();
      if (!userId) return;

      var keys = ["cityId", "caseId", "caseType"];
      for (var _i = 0; _i < keys.length; _i++) {var key = keys[_i];
        if (!this[key]) return;
      }

      new _ImChartNet.SendAutomaticMessage({
        cityId: this.cityId,
        caseId: this.caseId,
        caseType: this.caseType,
        fromSource: fromSource, // 来源 1 客户浏览经纪人房源 2 客户收藏经纪人房源
        youyouUserId: userId,
        chatFlag: 0 //是否聊天 0否 1是
      }).send();
    }

    // 判断是否和某个经纪人有聊天  return boolean
  }, { key: "checkHaveChart", value: function checkHaveChart() {
      var that = this;
      return new Promise(function (resolve, reject) {
        var userId = that.getUserId();
        var accid = new _UserInfoModel.UserInfoModel().getModel("accid") || "";
        if (!userId || !that.archiveId || !accid) {
          that.haveChart = true;
          resolve(true);
          return;
        }

        _ImChart.ImChart.getHistoryOriginal(that.archiveId, new Date().getTime() + 2000, 10).
        then(function (res) {
          if (!res.msgs || res.msgs.length === 0) {
            that.haveChart = false;
            resolve(false);
            return;
          }

          that.haveChart = true;
          resolve(true);
        }).
        catch(function () {
          that.haveChart = true;
          resolve(true);
        });
      });
    }


    // 进入房源时请求（房源信息请求完毕时调用）
    // timeOutVal: 多久后请求 sendEnterHouseNet
    // bubbleTime 气泡自动关闭时间  秒
    // callback boolean  返回知否显示进入的撩客tips
  }, { key: "enterHouse", value: function enterHouse() {var _this = this;var timeOutVal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 60;var bubbleTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};
      this.leaveHouse();
      if (UpAgentHouseTips.getData(this.archiveId).alreadyShowTip) {
        callback(false);
        return;
      }

      this.checkHaveChart().
      then(function (val) {
        if (val) {
          callback(false);
          return;
        }

        _this.enterHouseTimeTimeOutVal = setTimeout(function () {
          if (!_this.enterHouseTimeTimeOutVal) return;

          if (_this.haveChart) {
            clearTimeout(_this.enterHouseTimeTimeOutVal);
            _this.enterHouseTimeTimeOutVal = null;
            callback(false);
            return;
          }

          _this.checkHaveChart().
          then(function (val) {
            if (val) {
              callback(false);
              return;
            }

            _this.haveChart = true;
            _this.sendEnterHouseNet(1);
            callback(true);

            var UpAgentHouseTipsMap = UpAgentHouseTips.getData(_this.archiveId);
            UpAgentHouseTipsMap.alreadyShowTip = true;
            UpAgentHouseTips.setData(_this.archiveId, UpAgentHouseTipsMap);
            _this.checkHideEnterTip(bubbleTime, function (val) {
              callback(val);
            });
          });
        }, timeOutVal * 1000);
      }).
      catch(function (err) {
        callback(false);
      });
    }

    // 离开房源清除定时器
  }, { key: "leaveHouse", value: function leaveHouse() {
      clearTimeout(this.enterHouseTimeTimeOutVal);
      this.enterHouseTimeTimeOutVal = null;

      clearTimeout(this.autoHideTipTimeOutVal);
      this.autoHideTipTimeOutVal = null;

      clearTimeout(this.collectHouseTimeOutVal);
      this.collectHouseTimeOutVal = null;
    }

    // 判断是否隐藏撩客tip  return boolean
    // bubbleTime 气泡自动关闭时间  秒
  }, { key: "checkHideEnterTip", value: function checkHideEnterTip() {var _this2 = this;var bubbleTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 300;var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
      this.autoHideTipTimeOutVal = setTimeout(function () {
        if (!_this2.autoHideTipTimeOutVal) return;

        callback(false);
      }, bubbleTime * 1000);
    }


    // 收藏（由未收藏变为收藏状态）
    // collectTime 单位 秒
    // callback return boolean 返回知否显示收藏的撩客tips
  }, { key: "collectHouse", value: function collectHouse() {var _this3 = this;var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
      if (this.haveChart) {
        callback(false);
        return;
      }

      this.checkHaveChart().
      then(function (val) {
        if (val) {
          callback(false);
          return;
        }

        // 此处请求接口
        _this3.sendEnterHouseNet(2);
        _this3.haveChart = true;
        var UpAgentHouseTipsMap = UpAgentHouseTips.getData(_this3.archiveId);
        UpAgentHouseTipsMap.collectTimeStr = new Date().getTime();
        UpAgentHouseTipsMap.alreadyShowCollectTips = false;
        UpAgentHouseTips.setData(_this3.archiveId, UpAgentHouseTipsMap);
        _this3.collectHouseTimeOutVal = setTimeout(function () {
          if (!_this3.collectHouseTimeOutVal) return;

          // UpAgentHouseTipsMap.alreadyShowCollectTips = true;
          // UpAgentHouseTips.setData(this.archiveId, UpAgentHouseTipsMap);
          callback(true);
        }, _this3.collectTime * 1000);
      });
    }

    // 刚进入房源，判断是否显示收藏的tip
  }, { key: "checkShowCollectTips", value: function checkShowCollectTips() {var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
      var UpAgentHouseTipsMap = UpAgentHouseTips.getData(this.archiveId);
      if (!UpAgentHouseTipsMap.tips) {
        callback(false);
        return;
      }

      if (UpAgentHouseTipsMap.alreadyShowCollectTips !== undefined &&
      UpAgentHouseTipsMap.alreadyShowCollectTips === false) {
        UpAgentHouseTipsMap.alreadyShowCollectTips = true;
        UpAgentHouseTips.setData(this.archiveId, UpAgentHouseTipsMap);
        callback(true, UpAgentHouseTipsMap.tips);
        return;
      }

      callback(false);
    } }]);return DealLiaoKeDetail;}();



// 处理微店撩客信息
exports.DealLiaoKeDetail = DealLiaoKeDetail;var DealWeiDianLiaoKeDetail = /*#__PURE__*/function () {
  // 是否有聊天
  // 经纪人id


  function DealWeiDianLiaoKeDetail() {var archiveId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";_classCallCheck(this, DealWeiDianLiaoKeDetail);_defineProperty(this, "haveChart", false);_defineProperty(this, "archiveId", "");_defineProperty(this, "regionId", "");
    this.archiveId = archiveId;
  }_createClass(DealWeiDianLiaoKeDetail, [{ key: "getUserId", value: function getUserId()

    {
      var me = new _UserInfoModel.UserInfoModel().getModel("me") || "";
      return me.userId || "";
    }

    // 判断是否和某个经纪人有聊天  return boolean
  }, { key: "checkHaveChart", value: function checkHaveChart() {
      var that = this;
      return new Promise(function (resolve, reject) {
        var userId = that.getUserId();
        var accid = new _UserInfoModel.UserInfoModel().getModel("accid") || "";
        if (!userId || !that.archiveId || !accid) {
          that.haveChart = true;
          resolve(true);
          return;
        }

        _ImChart.ImChart.getHistoryOriginal(that.archiveId, new Date().getTime() + 2000, 10).
        then(function (res) {
          if (!res.msgs || res.msgs.length === 0) {
            that.haveChart = false;
            resolve(false);
            return;
          }

          that.haveChart = true;
          resolve(true);
        }).
        catch(function () {
          that.haveChart = true;
          resolve(true);
        });
      });
    }

    // 选择区域
  }, { key: "chooseRegion", value: function chooseRegion(regionId) {var _this4 = this;var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
      if (this.haveChart) {
        callback(false);
        return;
      }

      this.checkHaveChart().
      then(function (val) {
        if (val) {
          callback(false);
          return;
        }

        _this4.haveChart = true;
        _this4.sendChooseRegionNet(regionId, function (val) {
          callback(val);
        });
      });
    }

    // 通知net主动发送进入房源撩客信息 private
  }, { key: "sendChooseRegionNet", value: function sendChooseRegionNet(regionId) {var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
      // 请求接口
      var userId = this.getUserId();
      if (!userId || !regionId) return;

      new _ImChartNet.SendWeiDianMessage({
        archiveId: this.archiveId,
        regionId: regionId,
        youyouUserId: userId,
        chatFlag: 0 //是否聊天 0否 1是
      }).send().then(function (res) {
        callback(true);
      });
    } }]);return DealWeiDianLiaoKeDetail;}();



// im发送消息判断是否需要需要调用发送短信的接口
exports.DealWeiDianLiaoKeDetail = DealWeiDianLiaoKeDetail;var ImNeedSendShortMessage = /*#__PURE__*/function () {
  // 是否有撩客消息
  // 是否已经回复了撩客消息
  // 历史纪录消息
  // 经纪人id
  // 是否在请求中

  function ImNeedSendShortMessage(archiveId) {var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];_classCallCheck(this, ImNeedSendShortMessage);_defineProperty(this, "haveLiaoKeMessage", false);_defineProperty(this, "alreadyReply", false);_defineProperty(this, "list", []);_defineProperty(this, "archiveId", "");_defineProperty(this, "isRequestIng", false);
    this.archiveId = archiveId;
    this.list = list.data ? list.data || [] : [];
    this.initMsgStatus();
  }_createClass(ImNeedSendShortMessage, [{ key: "getUserId", value: function getUserId()

    {
      var me = new _UserInfoModel.UserInfoModel().getModel("me") || "";
      return me.userId || "";
    }

    // 初始化是否有撩客消息和是否已经回复消息
  }, { key: "initMsgStatus", value: function initMsgStatus() {
      this.haveLiaoKeMessage = false;
      this.alreadyReply = false;
      var userId = this.getUserId();
      var accid = new _UserInfoModel.UserInfoModel().getModel("accid") || "";var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {
        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var item = _step.value;
          if (item.type == 100 && item.body && item.body.type && (
          item.body.type == 123 || item.body.type == 130)) {
            this.haveLiaoKeMessage = true;
          }
          if (item.from == accid) {
            this.alreadyReply = true;
          }
        }} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return != null) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}
    }

    // 更新是否已经回复了撩客消息
  }, { key: "upAlreadyReply", value: function upAlreadyReply(val) {
      this.alreadyReply = val;
    }

    // 会触发是否需要调用启动发送短信的延时器接口
  }, { key: "init", value: function init() {
      var that = this;
      return new Promise(function (resolve, reject) {
        if (!that.haveLiaoKeMessage || that.alreadyReply || that.isRequestIng) {
          resolve(false);
          return;
        }

        that.sendShortMsgNet(function (val) {
          resolve(val);
        });
      });
    } }, { key: "sendShortMsgNet", value: function sendShortMsgNet()

    {var _this5 = this;var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
      var userId = this.getUserId();
      if (!this.archiveId || !userId) return;

      this.isRequestIng = true;
      new _ImChartNet.ReplyChart({
        archiveId: this.archiveId,
        fromChart: 0, // 来自那一端的回复 0：优优回复经纪人 1：经纪人回复优优用户"
        youyouUserId: userId }).
      send().then(function (res) {
        setTimeout(function () {
          _this5.isRequestIng = false;
        }, 2000);
        callback(true);
      });
    } }]);return ImNeedSendShortMessage;}();exports.ImNeedSendShortMessage = ImNeedSendShortMessage;

/***/ }),

/***/ 36:
/*!*********************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/im/AgentHouseTipsModel.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.AgentHouseTipsModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ../DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var


AgentHouseTipsModel = /*#__PURE__*/function (_DefaultModel) {_inherits(AgentHouseTipsModel, _DefaultModel);
  function AgentHouseTipsModel() {_classCallCheck(this, AgentHouseTipsModel);return _possibleConstructorReturn(this, _getPrototypeOf(AgentHouseTipsModel).call(this));

  }_createClass(AgentHouseTipsModel, [{ key: "getKey", value: function getKey()

    {
      return "AgentHouseTipsModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return AgentHouseTipsModel;}(_DefaultModel2.DefaultModel);exports.AgentHouseTipsModel = AgentHouseTipsModel;

/***/ }),

/***/ 37:
/*!*************************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/ImEvaluateDeal.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.ImEvaluateDeal = void 0;

var _UserInfoModel = __webpack_require__(/*! ../model/UserInfoModel */ 12);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var

ImEvaluateDeal = /*#__PURE__*/function () {
  // 聊天详情列表
  // 最少聊天条数
  // 评价消息type
  // 3分钟
  // 7天
  // 最新的一个评价

  function ImEvaluateDeal() {var chartList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];_classCallCheck(this, ImEvaluateDeal);_defineProperty(this, "chartList", []);_defineProperty(this, "minChartLength", 10);_defineProperty(this, "evaluateMsgType", 140);_defineProperty(this, "threeMinuteTimeLength", 3 * 60 * 1000);_defineProperty(this, "sevenDayTimeLength", 7 * 24 * 60 * 60 * 1000);_defineProperty(this, "evaluateMsgItem", null);
    this.chartList = chartList;
    this.dealChartList();
  }

  // 获取accid
  _createClass(ImEvaluateDeal, [{ key: "getAccid", value: function getAccid() {
      return new _UserInfoModel.UserInfoModel().getModel("accid") || "";
    }

    // 获取当前时间
  }, { key: "getNowTimeStr", value: function getNowTimeStr() {
      return new Date().getTime();
    }

    // 返回最新一条评价后的所有记录
  }, { key: "dealChartList", value: function dealChartList() {
      var evaluateMsgItem = null;
      var otherChartList = [];
      for (var i = this.chartList.length - 1; i >= 0; i--) {
        var item = this.chartList[i];
        if (item.type === "evaluate") {
          evaluateMsgItem = item;
          break;
        }

        otherChartList.push(item);
      }
      this.evaluateMsgItem = evaluateMsgItem;
      this.chartList = otherChartList;
    }

    // return Boolean 点击时触发
  }, { key: "checkIsCanEvaluate", value: function checkIsCanEvaluate() {var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
      if (this.chartList.length <= this.minChartLength) {
        callback(false);
        return;
      }

      var haveMySend = false; // 是否有自己发送的
      var haveOtherSend = false; // 是否有其他人发送的
      var lastMsgSendTimeStr = this.chartList[this.chartList.length - 1].timeStr ?
      this.chartList[this.chartList.length - 1].timeStr : 0;var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {
        for (var _iterator = this.chartList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var item = _step.value;
          // 判断是否有相互的
          if (item.mySend) {
            haveMySend = true;
          } else {
            haveOtherSend = true;
          }
        }
        // 没有互相发送消息则不可以评价
      } catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return != null) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}if (!haveMySend || !haveOtherSend) {
        callback(false);
        return;
      }

      // 最后一条消息时间距离现在有3分钟
      if (this.getNowTimeStr() - lastMsgSendTimeStr < this.threeMinuteTimeLength) {
        callback(false);
        return;
      }

      // 没有评价消息可以评价
      if (!this.evaluateMsgItem) {
        callback(true);
        return;
      }

      // 最新的评价距离现在是否7天之内则不能发送
      if (this.getNowTimeStr() - this.evaluateMsgItem.timeStr <= this.sevenDayTimeLength) {
        callback(false);
        return;
      }

      callback(true);
    }

    // 刚进入时判断是否显示评价按钮
  }, { key: "showEvaluateBtn", value: function showEvaluateBtn() {var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
      if (this.chartList.length <= this.minChartLength) {
        callback(true);
        return;
      }

      var haveMySend = false; // 是否有自己发送的
      var haveOtherSend = false; // 是否有其他人发送的
      var lastMsgSendTimeStr = this.chartList[this.chartList.length - 1].timeStr ?
      this.chartList[this.chartList.length - 1].timeStr : 0;var _iteratorNormalCompletion2 = true;var _didIteratorError2 = false;var _iteratorError2 = undefined;try {
        for (var _iterator2 = this.chartList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {var item = _step2.value;
          // 判断是否有相互的
          if (item.mySend) {
            haveMySend = true;
          } else {
            haveOtherSend = true;
          }
        }
        // 没有互相发送消息则不可以评价
      } catch (err) {_didIteratorError2 = true;_iteratorError2 = err;} finally {try {if (!_iteratorNormalCompletion2 && _iterator2.return != null) {_iterator2.return();}} finally {if (_didIteratorError2) {throw _iteratorError2;}}}if (!haveMySend || !haveOtherSend) {
        callback(true);
        return;
      }

      // 最后一条消息时间距离现在有3分钟
      if (this.getNowTimeStr() - lastMsgSendTimeStr < this.threeMinuteTimeLength) {
        callback(true);
        return;
      }

      // 没有评价消息可以评价
      if (!this.evaluateMsgItem) {
        callback(true);
        return;
      }

      // 最新的评价距离现在是否7天之内则不能发送
      if (this.getNowTimeStr() - this.evaluateMsgItem.timeStr <= this.sevenDayTimeLength) {
        callback(false);
        return;
      }

      callback(true);
    }

    // 刚进入时判断是否自动显示评价
  }, { key: "autoEvaluateTc", value: function autoEvaluateTc() {var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
      if (this.chartList.length <= this.minChartLength) {
        callback(false);
        return;
      }

      var haveMySend = false; // 是否有自己发送的
      var haveOtherSend = false; // 是否有其他人发送的
      var lastMsgSendTimeStr = this.chartList[this.chartList.length - 1].timeStr ?
      this.chartList[this.chartList.length - 1].timeStr : 0;var _iteratorNormalCompletion3 = true;var _didIteratorError3 = false;var _iteratorError3 = undefined;try {
        for (var _iterator3 = this.chartList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {var item = _step3.value;
          // 判断是否有相互的
          if (item.mySend) {
            haveMySend = true;
          } else {
            haveOtherSend = true;
          }
        }
        // 没有互相发送消息则不可以评价
      } catch (err) {_didIteratorError3 = true;_iteratorError3 = err;} finally {try {if (!_iteratorNormalCompletion3 && _iterator3.return != null) {_iterator3.return();}} finally {if (_didIteratorError3) {throw _iteratorError3;}}}if (!haveMySend || !haveOtherSend) {
        callback(false);
        return;
      }

      // 最后一条消息时间距离现在有3分钟
      if (this.getNowTimeStr() - lastMsgSendTimeStr < this.threeMinuteTimeLength) {
        callback(false);
        return;
      }

      // 没有评价消息可以评价
      if (!this.evaluateMsgItem) {
        callback(true);
        return;
      }

      // 最新的评价距离现在是否7天之内则不能发送
      if (this.getNowTimeStr() - this.evaluateMsgItem.timeStr <= this.sevenDayTimeLength) {
        callback(false);
        return;
      }

      callback(true);
    } }]);return ImEvaluateDeal;}();exports.ImEvaluateDeal = ImEvaluateDeal;

/***/ }),

/***/ 38:
/*!***************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/im/ChatListModel.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.DealChartListModel = exports.ChatListModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ../DefaultModel */ 13);
var _Notification = __webpack_require__(/*! ../../utils/Notification */ 20);
var _Notify = __webpack_require__(/*! ../../utils/Notify */ 19);
var _Const = __webpack_require__(/*! ../../utils/Const */ 17);
var _ImChart = __webpack_require__(/*! ../../utils/ImChart */ 21);
var _LoginSuccessModel = __webpack_require__(/*! ../LoginSuccessModel */ 18);
var _ProjectConfigConst = __webpack_require__(/*! ../../utils/ProjectConfigConst */ 39);function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}


// IM列表model
var ChatListModel = /*#__PURE__*/function (_DefaultModel) {_inherits(ChatListModel, _DefaultModel);
  function ChatListModel() {_classCallCheck(this, ChatListModel);return _possibleConstructorReturn(this, _getPrototypeOf(ChatListModel).call(this));

  }_createClass(ChatListModel, [{ key: "getKey", value: function getKey()

    {
      return "ChatListModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return ChatListModel;}(_DefaultModel2.DefaultModel);


// 处理本地列表
exports.ChatListModel = ChatListModel;var DealChartListModel = /*#__PURE__*/function () {
  // 会话的 messageId 指的就是 archiveId


  function DealChartListModel(messageId) {_classCallCheck(this, DealChartListModel);_defineProperty(this, "messageId", "");
    this.messageId = messageId;
  }

  // 发送会话列表改变的通知
  _createClass(DealChartListModel, [{ key: "sendMsgListNc", value: function sendMsgListNc() {
      setTimeout(function () {
        new _Notification.Notification().postNotification(_Notify.Notify.UpChartListChanged.Name);
      }, 100);
    }

    // 获取当前会话map
  }, { key: "getMessageMap", value: function getMessageMap() {
      if (!this.messageId) return {};

      var userId = _LoginSuccessModel.GetLoginModel.getUserId() || "";
      var listModel = new ChatListModel().getModel() || {};
      var map = listModel[userId] || {};
      return map[this.messageId] || {};
    }

    // 更新当前会话map
  }, { key: "upMessageMap", value: function upMessageMap() {var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      if (!this.messageId) return;

      var userId = _LoginSuccessModel.GetLoginModel.getUserId() || "";
      var listModel = new ChatListModel().getModel() || {};
      var map = listModel[userId] || {};
      if (Object.keys(item).length === 0) return;

      map[this.messageId] = item;
      listModel[userId] = map;
      new ChatListModel().setModel(listModel);
    }

    // 获取聊天列表
  }, { key: "getMsgList", value: function getMsgList() {
      var userId = _LoginSuccessModel.GetLoginModel.getUserId() || "";
      var listModel = new ChatListModel().getModel() || {};
      var map = listModel[userId] || {};
      if (Object.keys(map).length > 0) {
        return Object.keys(map).map(function (key) {return map[key];});
      }

      return [];
    }

    // 屏蔽和解除屏蔽
    // blockUserId 屏蔽的id
    // status == true ? 屏蔽 : 解除屏蔽
  }, { key: "blockMsg", value: function blockMsg(status) {
      var obj = this.getMessageMap();
      obj.isShield = status ? 1 : 0;
      obj.isShowBtn = false;
      this.upMessageMap(obj);
      this.sendMsgListNc();
    }

    // 删除消息
    // removeId 删除id
  }, { key: "deleteMsg", value: function deleteMsg() {
      if (!this.messageId) return;

      var userId = _LoginSuccessModel.GetLoginModel.getUserId() || "";
      var listModel = new ChatListModel().getModel() || {};
      var map = listModel[userId] || {};
      if (!map[this.messageId]) return;

      delete map[this.messageId];
      // 同时删除对应的未读数
      _ImChart.UpUnReadNumTab.removeReadNum(this.messageId);
      listModel[userId] = map;
      new ChatListModel().setModel(listModel);
      this.sendMsgListNc();
    }

    // 更新置顶
  }, { key: "upTopStatus", value: function upTopStatus(isTop) {
      if (!this.messageId) return;

      var userId = _LoginSuccessModel.GetLoginModel.getUserId() || "";
      var listModel = new ChatListModel().getModel() || {};
      var map = listModel[userId] || {};
      if (!map[this.messageId]) return;

      map[this.messageId].isTop = isTop;
      listModel[userId] = map;
      new ChatListModel().setModel(listModel);
      this.sendMsgListNc();
    }

    // 接受新消息
  }, { key: "newMsg", value: function newMsg(item) {var _this = this;var session = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var userId = _LoginSuccessModel.GetLoginModel.getUserId() || "";
      var listModel = new ChatListModel().getModel() || {};
      var map = listModel[userId] || {};
      var lastMsg = session.lastMsg || {};
      if (_ProjectConfigConst.ProjectConfigConst.getNoDealIds().includes(session.to)) return;

      if (!item.messageId) return;

      // 获取用户信息
      _ImChart.ImChart.imChartVal.getUser({
        account: item.messageId,
        sync: true,
        done: function done(error, user) {
          var obj = map[item.messageId] || {};
          var icon = obj.icon || _Const.Const.imDefaultHeadImg;
          if (user && user.avatar) {
            icon = user.avatar;
          }
          if (new _LoginSuccessModel.ConsultantListModel().getModel() &&
          new _LoginSuccessModel.ConsultantListModel().getModel()[item.messageId] &&
          new _LoginSuccessModel.ConsultantListModel().getModel()[item.messageId].avatar) {
            icon = new _LoginSuccessModel.ConsultantListModel().getModel()[item.messageId].avatar;
          }
          obj.msg_timestamp = item.msg_timestamp;
          obj.msg_type = item.msg_type;
          obj.body = item.msg;
          if (lastMsg.type === "custom") {
            var content = JSON.parse(lastMsg.content);
            if (content.type == _ImChart.ImChartConst.positionType) {
              obj.body = content.data && content.data.locationAddTitle ? "[\u4F4D\u7F6E] ".concat(
              content.data.locationAddTitle) :
              item.msg;
            }
          }
          obj.accid = item.messageId;
          obj.name = obj.name || item.name || "";
          if (item.messageId == lastMsg.from && lastMsg.fromNick) {
            obj.name = lastMsg.fromNick;
          }
          if (user && user.nick) {
            obj.name = user.nick;
          }
          obj.isShield = 0;
          obj.id = item.messageId;
          obj.from_account = item.messageId;
          obj.to = item.to;
          obj.msg_timestamp = item.msg_timestamp;
          obj.icon = icon;
          map[item.messageId] = obj;
          listModel[userId] = map;
          new ChatListModel().setModel(listModel);
          _this.sendMsgListNc();
        } });

    } }]);return DealChartListModel;}();exports.DealChartListModel = DealChartListModel;

/***/ }),

/***/ 39:
/*!*****************************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/ProjectConfigConst.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.ProjectConfigConst = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var

ProjectConfigConst = /*#__PURE__*/function () {function ProjectConfigConst() {_classCallCheck(this, ProjectConfigConst);}_createClass(ProjectConfigConst, null, [{ key: "getSysIds",
    // 提醒消息的id
    // 系统消息的id
    value: function getSysIds()
    {
      return [this.remindMsgMessageId, this.systemMsgMessageId];
    } }, { key: "getNoDealIds", value: function getNoDealIds()

    {
      return [this.remindMsgMessageId];
    } }]);return ProjectConfigConst;}();exports.ProjectConfigConst = ProjectConfigConst;_defineProperty(ProjectConfigConst, "remindMsgMessageId", "sys_trends_remind");_defineProperty(ProjectConfigConst, "systemMsgMessageId", "sys_robot_chat");

/***/ }),

/***/ 4:
/*!************************************!*\
  !*** D:/小黑项目/yx_uniapp/pages.json ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/***/ }),

/***/ 40:
/*!****************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/Utils.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.AppUtils = exports.Platform = exports.Utils = void 0;

var _LoginSuccessModel = __webpack_require__(/*! ../model/LoginSuccessModel */ 18);
var _Const = __webpack_require__(/*! ./Const */ 17);
var _config = __webpack_require__(/*! ../config/config */ 16);
var _SetNet = __webpack_require__(/*! ../net/SetNet */ 41);function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}var

Utils = /*#__PURE__*/function () {function Utils() {_classCallCheck(this, Utils);}_createClass(Utils, [{ key: "checkHaveLetterNumber",
    // 判断是否含有英文和数字
    value: function checkHaveLetterNumber(text) {
      var pwdRegex = new RegExp('(?=.*[0-9])(?=.*[a-zA-Z]).{6,20}');
      return !!pwdRegex.test(text);
    }

    // 判断是否只有英文和数字
  }, { key: "checkMustLetterNumber", value: function checkMustLetterNumber(text) {
      var regx = /^(?!([a-zA-Z]+|\d+)$)[a-zA-Z\d]{6,20}$/;
      return !(text.match(regx) == null);
    }

    // 判断手机号是否正确
  }, { key: "checkTelephone", value: function checkTelephone(tel) {
      return !!/^1[23456789]\d{9}$/.test(tel);
    }

    // 上传图片
  }, { key: "upLoadImg", value: function upLoadImg(filePath) {
      return new Promise(function (resolve, reject) {
        if (!filePath) {
          uni.showToast({ title: "请上传文件", icon: "none" });
          reject("请上传临时文件");
          return;
        }

        uni.uploadFile({
          url: _config.Config.java + "/newBuildWeb/openApi/common/upload",
          filePath: filePath,
          name: 'file',
          header: {
            "Content-Type": "multipart/form-data",
            "clientKey": _LoginSuccessModel.GetLoginModel.getClientKey() },

          success: function success(uploadFileRes) {
            if (uploadFileRes.statusCode !== _Const.Const.success || !uploadFileRes.data) {
              reject(uploadFileRes);
              return;
            }

            resolve(JSON.parse(uploadFileRes.data));
          },
          fail: function fail(err) {
            reject(err);
          } });

      });
    }

    // 检查更新
  }, { key: "checkUpVersion", value: function checkUpVersion() {








































    }

    // 对象排序
  }, { key: "ObjectSort", value: function ObjectSort(obj) {
      var newKey = Object.keys(obj).sort();
      var newObj = {};
      for (var i = 0; i < newKey.length; i++) {
        newObj[newKey[i]] = obj[newKey[i]];
      }
      return newObj;
    }

    // 处理图片尺寸
  }, { key: "dealImgSrcSize", value: function dealImgSrcSize(url) {var w = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 80;var h = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 80;
      if (!url) return "";

      if (url.indexOf("x-oss-process=image") >= 0) return url;

      return "".concat(url, "?x-oss-process=image/resize,m_fill,h_").concat(h, ",w_").concat(w);
    }

    // 获取地图图片
  }, { key: "getMapStaticImg", value: function getMapStaticImg(lat, lng, w, h) {var zoom = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 14;var scale = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 2;
      return "https://apis.map.qq.com/ws/staticmap/v2/?center=" +
      lat + "," + lng + "&zoom=" + zoom + "&scale=" + scale + "&markers=size:large|icon:https://cd.haofang.net/Public/images/wap/icon_mylocation.png|" +
      lng + "," + lat + "&key=DGFBZ-3IFW2-PDEUL-CBLCE-XOSYK-K5B5I&size=" +
      +w + "*" + h;
    } }]);return Utils;}();


// 获取设备平台
exports.Utils = Utils;var Platform = /*#__PURE__*/function () {


  // 是否是工具
  function Platform() {_classCallCheck(this, Platform);_defineProperty(this, "android", false);_defineProperty(this, "ios", false);_defineProperty(this, "utils", false);
    switch (uni.getSystemInfoSync().platform) {
      case 'android':
        this.android = true;
        break;
      case 'ios':
        this.ios = true;
        break;
      default:
        this.utils = true;
        break;}

  }_createClass(Platform, [{ key: "getIsAndroid", value: function getIsAndroid()

    {
      return this.android;
    } }, { key: "getIsIos", value: function getIsIos()

    {
      return this.ios;
    } }, { key: "getIsUtils", value: function getIsUtils()

    {
      return this.utils;
    } }]);return Platform;}();


// app 现有模式
exports.Platform = Platform;var AppUtils = /*#__PURE__*/function () {
  function AppUtils() {_classCallCheck(this, AppUtils);

  }

  // 隐藏软键盘
  _createClass(AppUtils, [{ key: "hideSoftKeybord", value: function hideSoftKeybord() {
      plus.key.hideSoftKeybord();
    }

    // 获取参数值
  }, { key: "getParam", value: function getParam(name) {
      var val = "";
      var url = decodeURI(weex.config.bundleUrl); //取得整个地址栏
      var result = url.match(new RegExp("[\?\&]" + name + "=([^\&]+)", "i"));
      if (result) {
        val = result[1];
      }
      val = val.replace(".js", "");
      return val;
    } }]);return AppUtils;}();exports.AppUtils = AppUtils;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 406:
/*!*********************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/buildModel.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.buildModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ./DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var


buildModel = /*#__PURE__*/function (_DefaultModel) {_inherits(buildModel, _DefaultModel);
  function buildModel() {_classCallCheck(this, buildModel);return _possibleConstructorReturn(this, _getPrototypeOf(buildModel).call(this));

  }_createClass(buildModel, [{ key: "getKey", value: function getKey()

    {
      return "buildModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return false;
    } }]);return buildModel;}(_DefaultModel2.DefaultModel);exports.buildModel = buildModel;

/***/ }),

/***/ 407:
/*!*****************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/BuildNet.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.GetCooperationRule = exports.SaveCooperationRule = exports.DeleteLayOut = exports.AddAndChangLayOutPhoto = exports.GetLayOutPhotoList = exports.DeleteOneLayOutPhoto = exports.AddBuildPhoto = exports.GetBuildingInfo = exports.CreateActivity = exports.GetBuildSellingPointDetailsList = exports.GetTalkSkills = exports.GetBuildDynamicDetails = exports.GetBuildDynamicList = exports.GetActivityList = exports.GetNewBuildPhotoListByType = exports.GetBuildPhotoList = exports.GetCommissionDetail = exports.GetHouseTypeImagesList = exports.GetNewBuildBasicDetail = exports.GetNewBuildDetail = exports.GetBuildDetails = exports.SaveBuildingInfo = exports.ListUserRelativeBuilding = void 0;var _RequestApi24 = __webpack_require__(/*! ../utils/RequestApi */ 26);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

// 楼盘列表
var ListUserRelativeBuilding = /*#__PURE__*/function (_RequestApi) {_inherits(ListUserRelativeBuilding, _RequestApi);
  function ListUserRelativeBuilding(responseData) {_classCallCheck(this, ListUserRelativeBuilding);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(ListUserRelativeBuilding).call(this,
    item));
  }_createClass(ListUserRelativeBuilding, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/building/listUserRelativeBuilding";
    } }]);return ListUserRelativeBuilding;}(_RequestApi24.RequestApi);


// 添加编辑楼盘
exports.ListUserRelativeBuilding = ListUserRelativeBuilding;var SaveBuildingInfo = /*#__PURE__*/function (_RequestApi2) {_inherits(SaveBuildingInfo, _RequestApi2);
  function SaveBuildingInfo(responseData) {_classCallCheck(this, SaveBuildingInfo);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(SaveBuildingInfo).call(this,
    item));
  }_createClass(SaveBuildingInfo, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/building/saveBuildingInfo";
    } }]);return SaveBuildingInfo;}(_RequestApi24.RequestApi);


// 楼盘 - 详情
exports.SaveBuildingInfo = SaveBuildingInfo;var GetBuildDetails = /*#__PURE__*/function (_RequestApi3) {_inherits(GetBuildDetails, _RequestApi3);
  function GetBuildDetails(responseData) {_classCallCheck(this, GetBuildDetails);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetBuildDetails).call(this,
    item));
  }_createClass(GetBuildDetails, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/newBuild/getBuildDetails";
    } }]);return GetBuildDetails;}(_RequestApi24.RequestApi);


// 楼盘详情 - 置业顾问端
exports.GetBuildDetails = GetBuildDetails;var GetNewBuildDetail = /*#__PURE__*/function (_RequestApi4) {_inherits(GetNewBuildDetail, _RequestApi4);
  function GetNewBuildDetail(responseData) {_classCallCheck(this, GetNewBuildDetail);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetNewBuildDetail).call(this,
    item));
  }_createClass(GetNewBuildDetail, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getNewBuildDetail";
    } }]);return GetNewBuildDetail;}(_RequestApi24.RequestApi);


// 详情
exports.GetNewBuildDetail = GetNewBuildDetail;var GetNewBuildBasicDetail = /*#__PURE__*/function (_RequestApi5) {_inherits(GetNewBuildBasicDetail, _RequestApi5);
  function GetNewBuildBasicDetail(responseData) {_classCallCheck(this, GetNewBuildBasicDetail);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetNewBuildBasicDetail).call(this,
    item));
  }_createClass(GetNewBuildBasicDetail, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getNewBuildBasicDetail";
    } }]);return GetNewBuildBasicDetail;}(_RequestApi24.RequestApi);


// 户型
exports.GetNewBuildBasicDetail = GetNewBuildBasicDetail;var GetHouseTypeImagesList = /*#__PURE__*/function (_RequestApi6) {_inherits(GetHouseTypeImagesList, _RequestApi6);
  function GetHouseTypeImagesList(responseData) {_classCallCheck(this, GetHouseTypeImagesList);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetHouseTypeImagesList).call(this,
    item));
  }_createClass(GetHouseTypeImagesList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getHouseTypeImagesList";
    } }]);return GetHouseTypeImagesList;}(_RequestApi24.RequestApi);


// 佣金方案
exports.GetHouseTypeImagesList = GetHouseTypeImagesList;var GetCommissionDetail = /*#__PURE__*/function (_RequestApi7) {_inherits(GetCommissionDetail, _RequestApi7);
  function GetCommissionDetail(responseData) {_classCallCheck(this, GetCommissionDetail);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCommissionDetail).call(this,
    item));
  }_createClass(GetCommissionDetail, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getCommissionDetail";
    } }]);return GetCommissionDetail;}(_RequestApi24.RequestApi);


// 获取相册列表 - 商家端
exports.GetCommissionDetail = GetCommissionDetail;var GetBuildPhotoList = /*#__PURE__*/function (_RequestApi8) {_inherits(GetBuildPhotoList, _RequestApi8);
  function GetBuildPhotoList(responseData) {_classCallCheck(this, GetBuildPhotoList);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetBuildPhotoList).call(this,
    item));
  }_createClass(GetBuildPhotoList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/newBuild/getBuildPhotoList";
    } }]);return GetBuildPhotoList;}(_RequestApi24.RequestApi);


// 获取相册列表 - 置业顾问端
exports.GetBuildPhotoList = GetBuildPhotoList;var GetNewBuildPhotoListByType = /*#__PURE__*/function (_RequestApi9) {_inherits(GetNewBuildPhotoListByType, _RequestApi9);
  function GetNewBuildPhotoListByType(responseData) {_classCallCheck(this, GetNewBuildPhotoListByType);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetNewBuildPhotoListByType).call(this,
    item));
  }_createClass(GetNewBuildPhotoListByType, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getNewBuildPhotoListByType";
    } }]);return GetNewBuildPhotoListByType;}(_RequestApi24.RequestApi);


// 楼盘动态列表 - 商家端
exports.GetNewBuildPhotoListByType = GetNewBuildPhotoListByType;var GetActivityList = /*#__PURE__*/function (_RequestApi10) {_inherits(GetActivityList, _RequestApi10);
  function GetActivityList(responseData) {_classCallCheck(this, GetActivityList);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetActivityList).call(this,
    item));
  }_createClass(GetActivityList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/spread/getActivityList";
    } }]);return GetActivityList;}(_RequestApi24.RequestApi);


// 楼盘动态列表 - 置业顾问端
exports.GetActivityList = GetActivityList;var GetBuildDynamicList = /*#__PURE__*/function (_RequestApi11) {_inherits(GetBuildDynamicList, _RequestApi11);
  function GetBuildDynamicList(responseData) {_classCallCheck(this, GetBuildDynamicList);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetBuildDynamicList).call(this,
    item));
  }_createClass(GetBuildDynamicList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getBuildDynamicList";
    } }]);return GetBuildDynamicList;}(_RequestApi24.RequestApi);


// 楼盘动态详情
exports.GetBuildDynamicList = GetBuildDynamicList;var GetBuildDynamicDetails = /*#__PURE__*/function (_RequestApi12) {_inherits(GetBuildDynamicDetails, _RequestApi12);
  function GetBuildDynamicDetails(responseData) {_classCallCheck(this, GetBuildDynamicDetails);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetBuildDynamicDetails).call(this,
    item));
  }_createClass(GetBuildDynamicDetails, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getBuildDynamicDetails";
    } }]);return GetBuildDynamicDetails;}(_RequestApi24.RequestApi);


// 拓客技巧详情
exports.GetBuildDynamicDetails = GetBuildDynamicDetails;var GetTalkSkills = /*#__PURE__*/function (_RequestApi13) {_inherits(GetTalkSkills, _RequestApi13);
  function GetTalkSkills(responseData) {_classCallCheck(this, GetTalkSkills);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetTalkSkills).call(this,
    item));
  }_createClass(GetTalkSkills, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getTalkSkills";
    } }]);return GetTalkSkills;}(_RequestApi24.RequestApi);


// 楼盘卖点详情
exports.GetTalkSkills = GetTalkSkills;var GetBuildSellingPointDetailsList = /*#__PURE__*/function (_RequestApi14) {_inherits(GetBuildSellingPointDetailsList, _RequestApi14);
  function GetBuildSellingPointDetailsList(responseData) {_classCallCheck(this, GetBuildSellingPointDetailsList);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetBuildSellingPointDetailsList).call(this,
    item));
  }_createClass(GetBuildSellingPointDetailsList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getBuildSellingPointDetailsList";
    } }]);return GetBuildSellingPointDetailsList;}(_RequestApi24.RequestApi);


// 发布楼盘动态
exports.GetBuildSellingPointDetailsList = GetBuildSellingPointDetailsList;var CreateActivity = /*#__PURE__*/function (_RequestApi15) {_inherits(CreateActivity, _RequestApi15);
  function CreateActivity(responseData) {_classCallCheck(this, CreateActivity);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CreateActivity).call(this,
    item));
  }_createClass(CreateActivity, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/spread/createActivity";
    } }]);return CreateActivity;}(_RequestApi24.RequestApi);


// 获取保存的楼盘信息
exports.CreateActivity = CreateActivity;var GetBuildingInfo = /*#__PURE__*/function (_RequestApi16) {_inherits(GetBuildingInfo, _RequestApi16);
  function GetBuildingInfo(responseData) {_classCallCheck(this, GetBuildingInfo);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetBuildingInfo).call(this,
    item));
  }_createClass(GetBuildingInfo, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/building/getBuildingInfo";
    } }]);return GetBuildingInfo;}(_RequestApi24.RequestApi);


// 楼盘相册上传
exports.GetBuildingInfo = GetBuildingInfo;var AddBuildPhoto = /*#__PURE__*/function (_RequestApi17) {_inherits(AddBuildPhoto, _RequestApi17);
  function AddBuildPhoto(responseData) {_classCallCheck(this, AddBuildPhoto);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(AddBuildPhoto).call(this,
    item));
  }_createClass(AddBuildPhoto, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/newBuild/addBuildPhoto";
    } }]);return AddBuildPhoto;}(_RequestApi24.RequestApi);


// 楼盘相册删除
exports.AddBuildPhoto = AddBuildPhoto;var DeleteOneLayOutPhoto = /*#__PURE__*/function (_RequestApi18) {_inherits(DeleteOneLayOutPhoto, _RequestApi18);
  function DeleteOneLayOutPhoto(responseData) {_classCallCheck(this, DeleteOneLayOutPhoto);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(DeleteOneLayOutPhoto).call(this,
    item));
  }_createClass(DeleteOneLayOutPhoto, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/newBuild/deleteOneLayOutPhoto";
    } }]);return DeleteOneLayOutPhoto;}(_RequestApi24.RequestApi);


// 分销户型列表
exports.DeleteOneLayOutPhoto = DeleteOneLayOutPhoto;var GetLayOutPhotoList = /*#__PURE__*/function (_RequestApi19) {_inherits(GetLayOutPhotoList, _RequestApi19);
  function GetLayOutPhotoList(responseData) {_classCallCheck(this, GetLayOutPhotoList);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetLayOutPhotoList).call(this,
    item));
  }_createClass(GetLayOutPhotoList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/newBuild/getLayOutPhotoList";
    } }]);return GetLayOutPhotoList;}(_RequestApi24.RequestApi);


// 添加分销户型
exports.GetLayOutPhotoList = GetLayOutPhotoList;var AddAndChangLayOutPhoto = /*#__PURE__*/function (_RequestApi20) {_inherits(AddAndChangLayOutPhoto, _RequestApi20);
  function AddAndChangLayOutPhoto(responseData) {_classCallCheck(this, AddAndChangLayOutPhoto);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(AddAndChangLayOutPhoto).call(this,
    item));
  }_createClass(AddAndChangLayOutPhoto, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/newBuild/addAndChangLayOutPhoto";
    } }]);return AddAndChangLayOutPhoto;}(_RequestApi24.RequestApi);


// 删除户型 layoutId
exports.AddAndChangLayOutPhoto = AddAndChangLayOutPhoto;var DeleteLayOut = /*#__PURE__*/function (_RequestApi21) {_inherits(DeleteLayOut, _RequestApi21);
  function DeleteLayOut(responseData) {_classCallCheck(this, DeleteLayOut);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(DeleteLayOut).call(this,
    item));
  }_createClass(DeleteLayOut, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/newBuild/deleteLayOut";
    } }]);return DeleteLayOut;}(_RequestApi24.RequestApi);


// 编辑合作规则 佣金规则 注意事项
exports.DeleteLayOut = DeleteLayOut;var SaveCooperationRule = /*#__PURE__*/function (_RequestApi22) {_inherits(SaveCooperationRule, _RequestApi22);
  function SaveCooperationRule(responseData) {_classCallCheck(this, SaveCooperationRule);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(SaveCooperationRule).call(this,
    item));
  }_createClass(SaveCooperationRule, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/cooperationRule/saveCooperationRule";
    } }]);return SaveCooperationRule;}(_RequestApi24.RequestApi);


// 获取合作规则 佣金规则 注意事项
exports.SaveCooperationRule = SaveCooperationRule;var GetCooperationRule = /*#__PURE__*/function (_RequestApi23) {_inherits(GetCooperationRule, _RequestApi23);
  function GetCooperationRule(responseData) {_classCallCheck(this, GetCooperationRule);
    var item = new _RequestApi24.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCooperationRule).call(this,
    item));
  }_createClass(GetCooperationRule, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/cooperationRule/getCooperationRule";
    } }]);return GetCooperationRule;}(_RequestApi24.RequestApi);exports.GetCooperationRule = GetCooperationRule;

/***/ }),

/***/ 41:
/*!***************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/SetNet.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.BuildUserData = exports.PersonalCenter = exports.GetSetting = exports.ExitLogin = exports.UpdatePayPwd = exports.ModifyPassword = exports.SetDistractionFree = exports.CheckNewVersion = exports.UploadUserPhoto = exports.GetVerificationCode = exports.ForgetPassword = exports.LoginAppJava = void 0;var _RequestApi13 = __webpack_require__(/*! ../utils/RequestApi */ 26);
var _LoginSuccessModel = __webpack_require__(/*! ../model/LoginSuccessModel */ 18);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}


// 登录 java
var LoginAppJava = /*#__PURE__*/function (_RequestApi) {_inherits(LoginAppJava, _RequestApi);
  function LoginAppJava(request) {_classCallCheck(this, LoginAppJava);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(LoginAppJava).call(this,
    item));
  }_createClass(LoginAppJava, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/openApi/init/login";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return false;
    } }]);return LoginAppJava;}(_RequestApi13.RequestApi);


// 忘记密码 java
exports.LoginAppJava = LoginAppJava;var ForgetPassword = /*#__PURE__*/function (_RequestApi2) {_inherits(ForgetPassword, _RequestApi2);
  function ForgetPassword(request) {_classCallCheck(this, ForgetPassword);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(ForgetPassword).call(this,
    item));
  }_createClass(ForgetPassword, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/openApi/init/forgetPassword";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return false;
    } }]);return ForgetPassword;}(_RequestApi13.RequestApi);


// 获取验证码 java
exports.ForgetPassword = ForgetPassword;var GetVerificationCode = /*#__PURE__*/function (_RequestApi3) {_inherits(GetVerificationCode, _RequestApi3);
  function GetVerificationCode(request) {_classCallCheck(this, GetVerificationCode);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(GetVerificationCode).call(this,
    item));
  }_createClass(GetVerificationCode, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/sendMessage/getVerificationCode";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return false;
    } }]);return GetVerificationCode;}(_RequestApi13.RequestApi);


// 头像上传后绑定到用户 java
exports.GetVerificationCode = GetVerificationCode;var UploadUserPhoto = /*#__PURE__*/function (_RequestApi4) {_inherits(UploadUserPhoto, _RequestApi4);
  function UploadUserPhoto(request) {_classCallCheck(this, UploadUserPhoto);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(UploadUserPhoto).call(this,
    item));
  }_createClass(UploadUserPhoto, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/user/uploadUserPhoto";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return UploadUserPhoto;}(_RequestApi13.RequestApi);


// 检查更新 java
exports.UploadUserPhoto = UploadUserPhoto;var CheckNewVersion = /*#__PURE__*/function (_RequestApi5) {_inherits(CheckNewVersion, _RequestApi5);
  function CheckNewVersion(request) {_classCallCheck(this, CheckNewVersion);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(CheckNewVersion).call(this,
    item));
  }_createClass(CheckNewVersion, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/openApi/upgrade/checkNewVersion";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return CheckNewVersion;}(_RequestApi13.RequestApi);


// 设置免打扰 java
exports.CheckNewVersion = CheckNewVersion;var SetDistractionFree = /*#__PURE__*/function (_RequestApi6) {_inherits(SetDistractionFree, _RequestApi6);
  function SetDistractionFree(request) {_classCallCheck(this, SetDistractionFree);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(SetDistractionFree).call(this,
    item));
  }_createClass(SetDistractionFree, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/user/setDistractionFree";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return SetDistractionFree;}(_RequestApi13.RequestApi);


// 修改登录密码 java
exports.SetDistractionFree = SetDistractionFree;var ModifyPassword = /*#__PURE__*/function (_RequestApi7) {_inherits(ModifyPassword, _RequestApi7);
  function ModifyPassword(request) {_classCallCheck(this, ModifyPassword);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(ModifyPassword).call(this,
    item));
  }_createClass(ModifyPassword, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/openApi/init/modifyPassword";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }, { key: "getHeader", value: function getHeader()

    {
      if (_LoginSuccessModel.GetLoginModel.getAccountSource() == 2) {
        return {
          deviceType: 2 };

      }

      return {};
    } }]);return ModifyPassword;}(_RequestApi13.RequestApi);


// 修改支付密码 java
exports.ModifyPassword = ModifyPassword;var UpdatePayPwd = /*#__PURE__*/function (_RequestApi8) {_inherits(UpdatePayPwd, _RequestApi8);
  function UpdatePayPwd(request) {_classCallCheck(this, UpdatePayPwd);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(UpdatePayPwd).call(this,
    item));
  }_createClass(UpdatePayPwd, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/updatePayPwd";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }, { key: "getHeader", value: function getHeader()

    {
      if (_LoginSuccessModel.GetLoginModel.getAccountSource() == 2) {
        return {
          deviceType: 2 };

      }

      return {};
    } }]);return UpdatePayPwd;}(_RequestApi13.RequestApi);


// 退出登录 java
exports.UpdatePayPwd = UpdatePayPwd;var ExitLogin = /*#__PURE__*/function (_RequestApi9) {_inherits(ExitLogin, _RequestApi9);
  function ExitLogin(request) {_classCallCheck(this, ExitLogin);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(ExitLogin).call(this,
    item));
  }_createClass(ExitLogin, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/openApi/init/evitLogin";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }, { key: "checkClientKey", value: function checkClientKey()

    {
      return false;
    } }]);return ExitLogin;}(_RequestApi13.RequestApi);


// 判断账号来源
exports.ExitLogin = ExitLogin;var GetSetting = /*#__PURE__*/function (_RequestApi10) {_inherits(GetSetting, _RequestApi10);
  function GetSetting(request) {_classCallCheck(this, GetSetting);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(GetSetting).call(this,
    item));
  }_createClass(GetSetting, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/getSetting";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }, { key: "checkClientKey", value: function checkClientKey()

    {
      return true;
    } }]);return GetSetting;}(_RequestApi13.RequestApi);


// 个人信息
exports.GetSetting = GetSetting;var PersonalCenter = /*#__PURE__*/function (_RequestApi11) {_inherits(PersonalCenter, _RequestApi11);
  function PersonalCenter(request) {_classCallCheck(this, PersonalCenter);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(PersonalCenter).call(this,
    item));
  }_createClass(PersonalCenter, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/dvlp/org/personalCenter";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }, { key: "checkClientKey", value: function checkClientKey()

    {
      return true;
    } }]);return PersonalCenter;}(_RequestApi13.RequestApi);


// 我的 - 成交信息
exports.PersonalCenter = PersonalCenter;var BuildUserData = /*#__PURE__*/function (_RequestApi12) {_inherits(BuildUserData, _RequestApi12);
  function BuildUserData(request) {_classCallCheck(this, BuildUserData);
    var item = new _RequestApi13.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(BuildUserData).call(this,
    item));
  }_createClass(BuildUserData, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/dvlp/build/buildUserData";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }, { key: "checkClientKey", value: function checkClientKey()

    {
      return true;
    } }]);return BuildUserData;}(_RequestApi13.RequestApi);exports.BuildUserData = BuildUserData;

/***/ }),

/***/ 42:
/*!***************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/MsgNet.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.GetBrokerContactInfo = exports.UserDeptName = exports.GetAllUserList = exports.GetUserMobile = exports.GetConsultantList = exports.GetBrokerList = void 0;var _RequestApi7 = __webpack_require__(/*! ../utils/RequestApi */ 26);
var _config = __webpack_require__(/*! ../config/config */ 16);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}


// 通讯录 置业顾问端
var GetBrokerList = /*#__PURE__*/function (_RequestApi) {_inherits(GetBrokerList, _RequestApi);
  function GetBrokerList(request) {_classCallCheck(this, GetBrokerList);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(GetBrokerList).call(this,
    item));
  }_createClass(GetBrokerList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getBrokerList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetBrokerList;}(_RequestApi7.RequestApi);



// 获取通讯录 java
exports.GetBrokerList = GetBrokerList;var GetConsultantList = /*#__PURE__*/function (_RequestApi2) {_inherits(GetConsultantList, _RequestApi2);
  function GetConsultantList(request) {_classCallCheck(this, GetConsultantList);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(GetConsultantList).call(this,
    item));
  }_createClass(GetConsultantList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getConsultantList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetConsultantList;}(_RequestApi7.RequestApi);


// 获取经纪人电话
exports.GetConsultantList = GetConsultantList;var GetUserMobile = /*#__PURE__*/function (_RequestApi3) {_inherits(GetUserMobile, _RequestApi3);
  function GetUserMobile(request) {_classCallCheck(this, GetUserMobile);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(GetUserMobile).call(this,
    item));
  }_createClass(GetUserMobile, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getUserMobile";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetUserMobile;}(_RequestApi7.RequestApi);


// 开发商端获取所有员工
exports.GetUserMobile = GetUserMobile;var GetAllUserList = /*#__PURE__*/function (_RequestApi4) {_inherits(GetAllUserList, _RequestApi4);
  function GetAllUserList(request) {_classCallCheck(this, GetAllUserList);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(GetAllUserList).call(this,
    item));
  }_createClass(GetAllUserList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/userManage/getAllUserList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }, { key: "getHeader", value: function getHeader()

    {
      return {
        deviceType: 2 };

    } }]);return GetAllUserList;}(_RequestApi7.RequestApi);



// 获取置业顾问信息
exports.GetAllUserList = GetAllUserList;var UserDeptName = /*#__PURE__*/function (_RequestApi5) {_inherits(UserDeptName, _RequestApi5);
  function UserDeptName(request) {_classCallCheck(this, UserDeptName);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(UserDeptName).call(this,
    item));
  }_createClass(UserDeptName, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/dvlp/cust/userDeptName";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }, { key: "getHeader", value: function getHeader()

    {
      return {
        deviceType: 2 };

    } }]);return UserDeptName;}(_RequestApi7.RequestApi);


// 获取经纪人信息
exports.UserDeptName = UserDeptName;var GetBrokerContactInfo = /*#__PURE__*/function (_RequestApi6) {_inherits(GetBrokerContactInfo, _RequestApi6);
  function GetBrokerContactInfo(request) {_classCallCheck(this, GetBrokerContactInfo);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "java";
    item.data = request;return _possibleConstructorReturn(this, _getPrototypeOf(GetBrokerContactInfo).call(this,
    item));
  }_createClass(GetBrokerContactInfo, [{ key: "getUrl", value: function getUrl()

    {
      return "/uuhfWeb/archiveManager/getBrokerContactInfo";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return false;
    } }, { key: "getHeader", value: function getHeader()

    {
      return {
        "content-type": "application/x-www-form-urlencoded",
        "U-FS": "zdzfmini" };

    } }]);return GetBrokerContactInfo;}(_RequestApi7.RequestApi);exports.GetBrokerContactInfo = GetBrokerContactInfo;

/***/ }),

/***/ 43:
/*!***********************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/InitBaseInfo.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.InitBaseInfo = void 0;var _CommonNet = __webpack_require__(/*! ../net/CommonNet */ 44);
var _GpsInfoModel = __webpack_require__(/*! ../model/GpsInfoModel */ 23);
var _Const = __webpack_require__(/*! ./Const */ 17);
var _BaseInfoModel = __webpack_require__(/*! ../model/BaseInfoModel */ 45);
var _Notify = __webpack_require__(/*! ./Notify */ 19);
var _Notification = __webpack_require__(/*! ./Notification */ 20);
var _SetNet = __webpack_require__(/*! ../net/SetNet */ 41);
var _UserInfoModel = __webpack_require__(/*! ../model/UserInfoModel */ 12);
var _LoginSuccessModel = __webpack_require__(/*! ../model/LoginSuccessModel */ 18);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}var


InitBaseInfo = /*#__PURE__*/function () {function InitBaseInfo() {_classCallCheck(this, InitBaseInfo);}_createClass(InitBaseInfo, [{ key: "init", value: function init()
    {
      this.dealRegSection();
      this.dealDicInfo();
      this.initPersonalInfo();
    } }, { key: "dealRegSection", value: function dealRegSection()

    {
      var cityInfo = new _GpsInfoModel.GpsInfoModel().getModel("cityInfo") || {};
      cityInfo.cityId = cityInfo.cityId || "1";
      return new _CommonNet.GetRegSection({ cityId: cityInfo.cityId }).send().
      then(function (res) {
        if (res.errCode !== _Const.Const.success || !res.data) return;

        var regList = res.data.regList || [];
        var sectionList = res.data.sectionList || [];
        var city = res.data.city || {};
        var sectionMap = {};var _iteratorNormalCompletion = true;var _didIteratorError = false;var _iteratorError = undefined;try {
          for (var _iterator = sectionList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {var info = _step.value;
            if (!sectionMap[info.regId]) {
              sectionMap[info.regId] = [];
            }
            sectionMap[info.regId].push(info);
          }} catch (err) {_didIteratorError = true;_iteratorError = err;} finally {try {if (!_iteratorNormalCompletion && _iterator.return != null) {_iterator.return();}} finally {if (_didIteratorError) {throw _iteratorError;}}}
        _BaseInfoModel.SetBaseInfoModel.regList(regList);
        _BaseInfoModel.SetBaseInfoModel.sectionMap(sectionMap);
        new _Notification.Notification().postNotification(_Notify.Notify.RegSectionChange.Name);
      });
    } }, { key: "dealDicInfo", value: function dealDicInfo()

    {
      var cityInfo = new _GpsInfoModel.GpsInfoModel().getModel("cityInfo") || {};
      cityInfo.cityId = cityInfo.cityId || "1";
      return new _CommonNet.GetDicMessage({ cityId: cityInfo.cityId }).send().
      then(function (res) {
        if (res.errCode !== _Const.Const.success || !res.data || !res.data.dicList) return;

        var dicList = res.data.dicList || [];
        var dicMap = {};
        var dicListMap = {};var _iteratorNormalCompletion2 = true;var _didIteratorError2 = false;var _iteratorError2 = undefined;try {
          for (var _iterator2 = dicList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {var info = _step2.value;
            if (!dicMap[info.dicType]) {
              dicMap[info.dicType] = {};
            }
            if (!dicListMap[info.dicType]) {
              dicListMap[info.dicType] = [];
            }
            dicListMap[info.dicType].push(info);
            dicMap[info.dicType][info.dicValue] = info;
            dicMap[info.dicType][info.dicCnMsg] = info;
          }

          // 住宅 HOUSING   别墅 VILLA   写字楼 OFFICE   厂房 MANUFACT  仓库 STORE  商铺 TRADE
          // 车库 GARAGE
          // 建筑类型字典 增加其他
        } catch (err) {_didIteratorError2 = true;_iteratorError2 = err;} finally {try {if (!_iteratorNormalCompletion2 && _iterator2.return != null) {_iterator2.return();}} finally {if (_didIteratorError2) {throw _iteratorError2;}}}dicListMap["HOUSE_TYPE"] = dicListMap["HOUSE_TYPE"] || [];
        dicListMap["HOUSE_TYPE"].push({
          cityId: 0,
          dicCnMsg: "其他",
          dicCnMsg2: "其他",
          dicEnMsg: "OTHER",
          dicType: "HOUSE_TYPE",
          dicValue: "25",
          dicValue1: "HOUSING",
          seqNo: 9999 });

        dicListMap["HOUSE_TYPE"].push({
          cityId: 0,
          dicCnMsg: "其他",
          dicCnMsg2: "其他",
          dicEnMsg: "OTHER",
          dicType: "HOUSE_TYPE",
          dicValue: "25",
          dicValue1: "VILLA",
          seqNo: 9999 });

        dicListMap["HOUSE_TYPE"].push({
          cityId: 0,
          dicCnMsg: "其他",
          dicCnMsg2: "其他",
          dicEnMsg: "OTHER",
          dicType: "HOUSE_TYPE",
          dicValue: "25",
          dicValue1: "OFFICE",
          seqNo: 9999 });

        dicListMap["HOUSE_TYPE"].push({
          cityId: 0,
          dicCnMsg: "其他",
          dicCnMsg2: "其他",
          dicEnMsg: "OTHER",
          dicType: "HOUSE_TYPE",
          dicValue: "25",
          dicValue1: "TRADE",
          seqNo: 9999 });


        dicMap["cityId"] = cityInfo.cityId;
        _BaseInfoModel.SetBaseInfoModel.dicDataMap(dicMap);
        _BaseInfoModel.SetBaseInfoModel.dicListMap(dicListMap);
        new _Notification.Notification().postNotification(_Notify.Notify.DicMessageChange.Name);
        return res;
      });
    }

    // 初始化个人信息
  }, { key: "initPersonalInfo", value: function initPersonalInfo() {
      if (!new _UserInfoModel.UserInfoModel().getModel("clientKey")) return;

      new _SetNet.PersonalCenter().send().
      then(function (res) {
        if (res.errCode === _Const.Const.success) {
          var data = res.data || {};
          _LoginSuccessModel.SetLoginModel.setCompAddress(data.compAddr || "");
          _LoginSuccessModel.SetLoginModel.setCompName(data.compName || "");
          _LoginSuccessModel.SetLoginModel.setCityName(data.cityName || "");
          _LoginSuccessModel.SetLoginModel.setTelephone(data.userMobile || "");
          _LoginSuccessModel.SetLoginModel.setUserPhoto(data.userPhoto || "");
          _LoginSuccessModel.SetLoginModel.setUserName(data.userName || "");
          new _Notification.Notification().postNotification(_Notify.Notify.PersonalInfoChange.Name);
        }
      });
    } }]);return InitBaseInfo;}();exports.InitBaseInfo = InitBaseInfo;

/***/ }),

/***/ 44:
/*!******************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/CommonNet.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.UpdateUserWxOpenId = exports.GetOpenIdByCode = exports.GetDicMessage = exports.GetRegSection = exports.CollectFormId = exports.GetCityInfoByGps = void 0;var _RequestApi7 = __webpack_require__(/*! ../utils/RequestApi */ 26);
var _config = __webpack_require__(/*! ../config/config */ 16);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

// 获取城市信息根据gps
var GetCityInfoByGps = /*#__PURE__*/function (_RequestApi) {_inherits(GetCityInfoByGps, _RequestApi);
  function GetCityInfoByGps(responseData) {_classCallCheck(this, GetCityInfoByGps);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "kdb";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCityInfoByGps).call(this,
    item));
  }_createClass(GetCityInfoByGps, [{ key: "getUrl", value: function getUrl()

    {
      return "/api/index/getCityIdByLocation";
    } }]);return GetCityInfoByGps;}(_RequestApi7.RequestApi);


// 收集formId {formId: formId,
//         userId: userId,
//         openId: openId,}
exports.GetCityInfoByGps = GetCityInfoByGps;var CollectFormId = /*#__PURE__*/function (_RequestApi2) {_inherits(CollectFormId, _RequestApi2);
  function CollectFormId(responseData) {_classCallCheck(this, CollectFormId);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "uuweb";
    item.method = "get";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CollectFormId).call(this,
    item));
  }_createClass(CollectFormId, [{ key: "getUrl", value: function getUrl()

    {
      return "/mini/app/collectFormIdNew";
    } }]);return CollectFormId;}(_RequestApi7.RequestApi);



// 获取行政区商圈列表
exports.CollectFormId = CollectFormId;var GetRegSection = /*#__PURE__*/function (_RequestApi3) {_inherits(GetRegSection, _RequestApi3);
  function GetRegSection(responseData) {_classCallCheck(this, GetRegSection);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "kdbJava";
    if (_config.Config.env === "dev") {
      item.domain = "http://dev.51vfang.cn";
    }
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetRegSection).call(this,
    item));
  }_createClass(GetRegSection, [{ key: "getUrl", value: function getUrl()

    {
      return "/kdbWeb/openApi/sys/getRegSection";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return false;
    } }]);return GetRegSection;}(_RequestApi7.RequestApi);


// 获取数据字典
exports.GetRegSection = GetRegSection;var GetDicMessage = /*#__PURE__*/function (_RequestApi4) {_inherits(GetDicMessage, _RequestApi4);
  function GetDicMessage(responseData) {_classCallCheck(this, GetDicMessage);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "kdbJava";
    if (_config.Config.env === "dev") {
      item.domain = "http://dev.51vfang.cn";
    }
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetDicMessage).call(this,
    item));
  }_createClass(GetDicMessage, [{ key: "getUrl", value: function getUrl()

    {
      return "/kdbWeb/openApi/sys/getDicMessage";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return false;
    } }]);return GetDicMessage;}(_RequestApi7.RequestApi);


// 通过code解析openId
exports.GetDicMessage = GetDicMessage;var GetOpenIdByCode = /*#__PURE__*/function (_RequestApi5) {_inherits(GetOpenIdByCode, _RequestApi5);
  function GetOpenIdByCode(responseData) {_classCallCheck(this, GetOpenIdByCode);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "publicWeb";
    item.data = responseData;
    item.method = "get";return _possibleConstructorReturn(this, _getPrototypeOf(GetOpenIdByCode).call(this,
    item));
  }_createClass(GetOpenIdByCode, [{ key: "getUrl", value: function getUrl()

    {
      return "/api/weixin/getOpenIdByCode";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return false;
    } }]);return GetOpenIdByCode;}(_RequestApi7.RequestApi);


// 更新微信openId
exports.GetOpenIdByCode = GetOpenIdByCode;var UpdateUserWxOpenId = /*#__PURE__*/function (_RequestApi6) {_inherits(UpdateUserWxOpenId, _RequestApi6);
  function UpdateUserWxOpenId(responseData) {_classCallCheck(this, UpdateUserWxOpenId);
    var item = new _RequestApi7.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(UpdateUserWxOpenId).call(this,
    item));
  }_createClass(UpdateUserWxOpenId, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/openApi/org/updateUserWxOpenId";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return UpdateUserWxOpenId;}(_RequestApi7.RequestApi);exports.UpdateUserWxOpenId = UpdateUserWxOpenId;

/***/ }),

/***/ 45:
/*!************************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/BaseInfoModel.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.GetBaseInfoModel = exports.SetBaseInfoModel = exports.BaseInfoModel = void 0;var _DefaultModel2 = __webpack_require__(/*! ./DefaultModel */ 13);
var _common = __webpack_require__(/*! ../utils/common */ 15);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}


// 基本信息参数
var BaseInfoModel = /*#__PURE__*/function (_DefaultModel) {_inherits(BaseInfoModel, _DefaultModel);
  function BaseInfoModel() {_classCallCheck(this, BaseInfoModel);return _possibleConstructorReturn(this, _getPrototypeOf(BaseInfoModel).call(this));

  }_createClass(BaseInfoModel, [{ key: "getKey", value: function getKey()

    {
      return "BaseInfoModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return true;
    } }]);return BaseInfoModel;}(_DefaultModel2.DefaultModel);exports.BaseInfoModel = BaseInfoModel;var


SetBaseInfoModel = /*#__PURE__*/function () {function SetBaseInfoModel() {_classCallCheck(this, SetBaseInfoModel);}_createClass(SetBaseInfoModel, null, [{ key: "regList",
    // 区域列表
    value: function regList(_regList) {
      var item = new BaseInfoModel().getModel() || {};
      item["regList"] = _regList;
      new BaseInfoModel().setModel(item);
    }

    // 商圈map
  }, { key: "sectionMap", value: function sectionMap(_sectionMap) {
      var item = new BaseInfoModel().getModel() || {};
      item["sectionMap"] = _sectionMap;
      new BaseInfoModel().setModel(item);
    }

    // 字典dicDataMap
  }, { key: "dicDataMap", value: function dicDataMap(_dicDataMap) {
      var item = new BaseInfoModel().getModel() || {};
      item["dicDataMap"] = _dicDataMap;
      new BaseInfoModel().setModel(item);
    }

    // 字典dicListMap
  }, { key: "dicListMap", value: function dicListMap(_dicListMap) {
      var item = new BaseInfoModel().getModel() || {};
      item["dicListMap"] = _dicListMap;
      new BaseInfoModel().setModel(item);
    } }]);return SetBaseInfoModel;}();exports.SetBaseInfoModel = SetBaseInfoModel;var


GetBaseInfoModel = /*#__PURE__*/function () {function GetBaseInfoModel() {_classCallCheck(this, GetBaseInfoModel);}_createClass(GetBaseInfoModel, null, [{ key: "regList",
    // 区域列表
    value: function regList() {
      var item = new BaseInfoModel().getModel() || {};
      return item["regList"] || [];
    }

    // 商圈map
  }, { key: "sectionMap", value: function sectionMap() {
      var item = new BaseInfoModel().getModel() || {};
      return item["sectionMap"] || {};
    }

    // 商圈列表
  }, { key: "sectionList", value: function sectionList(regId) {
      var item = new BaseInfoModel().getModel() || {};
      var sectionMap = item["sectionMap"] || {};
      return sectionMap[regId] || [];
    }

    // 获取数据字典 通过dicCnMsg获取list
  }, { key: "getDicListByType", value: function getDicListByType(dicType) {
      if (!dicType) return [];

      if (!new BaseInfoModel().getModel("dicListMap")) return [];

      var list = new BaseInfoModel().getModel("dicListMap")[dicType] || [];
      list = list.sort(new _common.compare("seqNo").minToMax());
      return list;
    } }]);return GetBaseInfoModel;}();exports.GetBaseInfoModel = GetBaseInfoModel;

/***/ }),

/***/ 46:
/*!********************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/CustomerNet.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.CancelConfirm = exports.CreateTrack = exports.RequestOrSign = exports.RequestOrConfirmBuy = exports.GetBrokerList = exports.ApplyNextStep = exports.DeleteSeeReadConfirmation = exports.UploadSeeReadConfirmation = exports.UpdateCustStatus = exports.AddDirectCustomer = exports.GetCustomerDetailInfo = exports.GetCustomerListByStatusNew = exports.GetCustomerListByStatus = void 0;var _RequestApi14 = __webpack_require__(/*! ../utils/RequestApi */ 26);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

// 根据状态获取客户列表
var GetCustomerListByStatus = /*#__PURE__*/function (_RequestApi) {_inherits(GetCustomerListByStatus, _RequestApi);
  function GetCustomerListByStatus(responseData) {_classCallCheck(this, GetCustomerListByStatus);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCustomerListByStatus).call(this,
    item));
  }_createClass(GetCustomerListByStatus, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getCustListByStatus";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetCustomerListByStatus;}(_RequestApi14.RequestApi);


// 获取客户列表
exports.GetCustomerListByStatus = GetCustomerListByStatus;var GetCustomerListByStatusNew = /*#__PURE__*/function (_RequestApi2) {_inherits(GetCustomerListByStatusNew, _RequestApi2);
  function GetCustomerListByStatusNew(responseData) {_classCallCheck(this, GetCustomerListByStatusNew);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCustomerListByStatusNew).call(this,
    item));
  }_createClass(GetCustomerListByStatusNew, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getCustListByStatusNew";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetCustomerListByStatusNew;}(_RequestApi14.RequestApi);


// 获取客户详情
exports.GetCustomerListByStatusNew = GetCustomerListByStatusNew;var GetCustomerDetailInfo = /*#__PURE__*/function (_RequestApi3) {_inherits(GetCustomerDetailInfo, _RequestApi3);
  function GetCustomerDetailInfo(responseData) {_classCallCheck(this, GetCustomerDetailInfo);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCustomerDetailInfo).call(this,
    item));
  }_createClass(GetCustomerDetailInfo, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/custBiz/getCustDetailInfo";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetCustomerDetailInfo;}(_RequestApi14.RequestApi);


// 直客登记
exports.GetCustomerDetailInfo = GetCustomerDetailInfo;var AddDirectCustomer = /*#__PURE__*/function (_RequestApi4) {_inherits(AddDirectCustomer, _RequestApi4);
  function AddDirectCustomer(responseData) {_classCallCheck(this, AddDirectCustomer);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(AddDirectCustomer).call(this,
    item));
  }_createClass(AddDirectCustomer, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/pad/cust/addDirectCustomer";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return AddDirectCustomer;}(_RequestApi14.RequestApi);


// 更改客户状态
exports.AddDirectCustomer = AddDirectCustomer;var UpdateCustStatus = /*#__PURE__*/function (_RequestApi5) {_inherits(UpdateCustStatus, _RequestApi5);
  function UpdateCustStatus(responseData) {_classCallCheck(this, UpdateCustStatus);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(UpdateCustStatus).call(this,
    item));
  }_createClass(UpdateCustStatus, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/updateCustStatus";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return UpdateCustStatus;}(_RequestApi14.RequestApi);


// 上传带看确认书
exports.UpdateCustStatus = UpdateCustStatus;var UploadSeeReadConfirmation = /*#__PURE__*/function (_RequestApi6) {_inherits(UploadSeeReadConfirmation, _RequestApi6);
  function UploadSeeReadConfirmation(responseData) {_classCallCheck(this, UploadSeeReadConfirmation);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(UploadSeeReadConfirmation).call(this,
    item));
  }_createClass(UploadSeeReadConfirmation, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/custBiz/uploadSeeReadConfirmation";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return UploadSeeReadConfirmation;}(_RequestApi14.RequestApi);


// 删除带看确认书
exports.UploadSeeReadConfirmation = UploadSeeReadConfirmation;var DeleteSeeReadConfirmation = /*#__PURE__*/function (_RequestApi7) {_inherits(DeleteSeeReadConfirmation, _RequestApi7);
  function DeleteSeeReadConfirmation(responseData) {_classCallCheck(this, DeleteSeeReadConfirmation);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(DeleteSeeReadConfirmation).call(this,
    item));
  }_createClass(DeleteSeeReadConfirmation, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/custBiz/deleteSeeReadConfirmation";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return DeleteSeeReadConfirmation;}(_RequestApi14.RequestApi);


// 申请权限
exports.DeleteSeeReadConfirmation = DeleteSeeReadConfirmation;var ApplyNextStep = /*#__PURE__*/function (_RequestApi8) {_inherits(ApplyNextStep, _RequestApi8);
  function ApplyNextStep(responseData) {_classCallCheck(this, ApplyNextStep);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(ApplyNextStep).call(this,
    item));
  }_createClass(ApplyNextStep, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/requestNextStep";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return ApplyNextStep;}(_RequestApi14.RequestApi);


// 获取经纪人管理列表
exports.ApplyNextStep = ApplyNextStep;var GetBrokerList = /*#__PURE__*/function (_RequestApi9) {_inherits(GetBrokerList, _RequestApi9);
  function GetBrokerList(responseData) {_classCallCheck(this, GetBrokerList);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetBrokerList).call(this,
    item));
  }_createClass(GetBrokerList, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getBrokerList";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetBrokerList;}(_RequestApi14.RequestApi);


// 确认认购接口
exports.GetBrokerList = GetBrokerList;var RequestOrConfirmBuy = /*#__PURE__*/function (_RequestApi10) {_inherits(RequestOrConfirmBuy, _RequestApi10);
  function RequestOrConfirmBuy(responseData) {_classCallCheck(this, RequestOrConfirmBuy);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(RequestOrConfirmBuy).call(this,
    item));
  }_createClass(RequestOrConfirmBuy, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/requestOrConfirmBuy";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return RequestOrConfirmBuy;}(_RequestApi14.RequestApi);


//确认签约
exports.RequestOrConfirmBuy = RequestOrConfirmBuy;var RequestOrSign = /*#__PURE__*/function (_RequestApi11) {_inherits(RequestOrSign, _RequestApi11);
  function RequestOrSign(responseData) {_classCallCheck(this, RequestOrSign);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(RequestOrSign).call(this,
    item));
  }_createClass(RequestOrSign, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/requestOrSign";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return RequestOrSign;}(_RequestApi14.RequestApi);


//添加跟进
exports.RequestOrSign = RequestOrSign;var CreateTrack = /*#__PURE__*/function (_RequestApi12) {_inherits(CreateTrack, _RequestApi12);
  function CreateTrack(responseData) {_classCallCheck(this, CreateTrack);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CreateTrack).call(this,
    item));
  }_createClass(CreateTrack, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/createTrack";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return CreateTrack;}(_RequestApi14.RequestApi);


//撤销认购 http://hft.myfun7.com/newBuildWeb/app/newBuild/requestOrSign
exports.CreateTrack = CreateTrack;var CancelConfirm = /*#__PURE__*/function (_RequestApi13) {_inherits(CancelConfirm, _RequestApi13);
  function CancelConfirm(responseData) {_classCallCheck(this, CancelConfirm);
    var item = new _RequestApi14.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CancelConfirm).call(this,
    item));
  }_createClass(CancelConfirm, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/cancelConfirm";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return CancelConfirm;}(_RequestApi14.RequestApi);exports.CancelConfirm = CancelConfirm;

/***/ }),

/***/ 47:
/*!*********************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/addressGps.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.getRegeo = getRegeo;exports.getAdcodeHere = getAdcodeHere;exports.getWalkingRoute = getWalkingRoute;var _GpsInfoModel = __webpack_require__(/*! ../model/GpsInfoModel */ 23);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _wrapNativeSuper(Class) {var _cache = typeof Map === "function" ? new Map() : undefined;_wrapNativeSuper = function _wrapNativeSuper(Class) {if (Class === null || !_isNativeFunction(Class)) return Class;if (typeof Class !== "function") {throw new TypeError("Super expression must either be null or a function");}if (typeof _cache !== "undefined") {if (_cache.has(Class)) return _cache.get(Class);_cache.set(Class, Wrapper);}function Wrapper() {return _construct(Class, arguments, _getPrototypeOf(this).constructor);}Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });return _setPrototypeOf(Wrapper, Class);};return _wrapNativeSuper(Class);}function isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}function _construct(Parent, args, Class) {if (isNativeReflectConstruct()) {_construct = Reflect.construct;} else {_construct = function _construct(Parent, args, Class) {var a = [null];a.push.apply(a, args);var Constructor = Function.bind.apply(Parent, a);var instance = new Constructor();if (Class) _setPrototypeOf(instance, Class.prototype);return instance;};}return _construct.apply(null, arguments);}function _isNativeFunction(fn) {return Function.toString.call(fn).indexOf("[native code]") !== -1;}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}


var invalidLng = -200;
var invalidLat = -100;
var gpsKey = 'lastUserGps';
var adcodeKey = 'lastAdcode';

var AMapWX = __webpack_require__(/*! ./amap-wx */ 48).AMapWX;

/**
                                           *
                                           * @param {function(float, float)} callback  (lng:-200, lat:-100) 表示失败
                                           * @param interval  ms  有效期， -1 表示无穷大
                                           */

function getLocalGps(callback) {var interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
  uni.getStorage({
    key: gpsKey,
    success: function success(res) {
      if (!res.data ||
      new Date().valueOf() - res.data.timestamp > interval &&
      interval != -1) {
        callback(invalidLng, invalidLat);
        return;
      }
      callback(res.data.lng, res.data.lat);
    },
    fail: function fail() {
      callback(invalidLng, invalidLat);
    } });

}

function setLocalGps(lng, lat) {
  uni.setStorage({
    key: gpsKey,
    data: { lng: lng, lat: lat, timestamp: new Date().valueOf() } });

}

function getLocalAdcode() {var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
  return new Promise(function (resolve, reject) {
    uni.getStorage({
      key: adcodeKey,
      success: function success(res) {
        if (!res.data ||
        new Date().valueOf() - res.data.timestamp > interval &&
        interval != -1) {
          reject(new AddError("get local adcode expired or no data"));
        }
        resolve(res.data);
      },
      fail: function fail() {
        reject(new AddError("getLocalAdcode error"));
      } });

  });
}

function setLocalAdcode(adcode, city, lat, lng) {var address = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "";
  var data = {
    lng: lng,
    lat: lat,
    adcode: adcode,
    city: city,
    timestamp: new Date().valueOf(),
    address: address };

  uni.setStorage({ key: adcodeKey, data: data });
  new _GpsInfoModel.GpsInfoModel().setModel(data, adcodeKey);
}

/**
   *
   * @param {function(float, float)} callback  (lng:-200, lat:-100) 表示失败
   */
function getGPS(callback) {
  var timer = setTimeout(function () {
    getLocalGps(function (lng, lat) {
      callback(lng, lat);
      callback = function callback() {};
    }, 45 * 1000);
  }, 10 * 1000);























  uni.getLocation({
    type: 'gcj02',
    success: function success(res) {
      var lat = res.latitude;
      var lng = res.longitude;
      setLocalGps(lng, lat);
      callback(lng, lat);
      callback = function callback(lng, lat) {
      };
    },
    fail: function fail(err) {
      getLocalGps(function (lng, lat) {
        callback(lng, lat);
        callback = function callback() {};
      }, 45 * 1000);
    },
    complete: function complete() {
      clearTimeout(timer);
    } });


}var

AddError = /*#__PURE__*/function (_Error) {_inherits(AddError, _Error);
  function AddError(err) {var _this;var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;_classCallCheck(this, AddError);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddError).call(this));
    _this.id = id;
    _this.err = err;return _this;
  }return AddError;}(_wrapNativeSuper(Error));


/**
                                                *
                                                * @return {Promise.<resolve({lng:lng, lat: lat}), reject(AddError)>}
                                                */
function wxLocation() {
  var normal = new Promise(function (resolve, reject) {














    uni.getLocation({
      type: 'gcj02',
      success: function success(res) {
        var lat = res.latitude;
        var lng = res.longitude;
        resolve({ lng: lng, lat: lat });
      },
      fail: function fail(err) {
        reject(err);
      } });


  });
  return Promise.race([
  normal,
  new Promise(function (resolve, reject) {
    setTimeout(function () {
      reject(new AddError("getLocation timeout"));
    }, 10 * 1000);
  })]);

}

/**
   *
   * @param {function(float, float)} callback  (lng:-200, lat:-100) 表示失败
   */
function getRealTimeGps(callback) {
  wxLocation().
  then(function (gps) {
    setLocalGps(gps.lng, gps.lat);
    try {
      callback(gps.lng, gps.lat);
    } catch (e) {
      console.error("callback error: " + e.message);
    }
  }).
  catch(function (error) {
    console.error(JSON.stringify(error));
    getLocalGps(function (lng, lat) {
      callback(lng, lat);
    }, 45 * 1000);
  });
}

/**
   *
   * @param lng
   * @param lat
   * @return {Promise.<resolve(regeocodeData), reject(AddError)>}
   */
function amapGetRegeo(lng, lat) {
  var amap = new AMapWX({ key: '924a344dd942f959aafba539c81e1b24' });
  var normal = new Promise(function (resolve, reject) {
    amap.getRegeo({
      location: lng.toString() + "," + lat.toString(),
      success: function success(data) {
        if (Object.prototype.toString.call(data) !== '[object Array]') {
          reject(new AddError("amap.getRegeo success data error"));
        }
        resolve(data[0].regeocodeData);
      },
      fail: function fail(error) {
        reject(new AddError(JSON.stringify(error)));
      } });

  });

  return Promise.race([
  normal,
  new Promise(function (resolve, reject) {
    setTimeout(function () {
      reject(new AddError("getRegeo timeout"));
    }, 10 * 1000);
  })]);

}

/**
   *
   * @param {float} lng
   * @param {float} lat
   * @param {function({string}address)} success
   * @param {function()} failed
   */
function getRegeo(lng, lat, success) {var failed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};
  amapGetRegeo(lng, lat).
  then(function (regeocodeData) {
    try {
      success(regeocodeData);
    } catch (e) {
      console.error("callback error: " + e.message);
    }
  }).
  catch(function (error) {
    console.error(JSON.stringify(error));
    failed();
  });
}

/**
   *
   * @param {function(lng, lat, adcode, city)} onSuccess
   * @param {function()} onFailed
   */
function getAdcodeHere(onSuccess) {var onFailed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
  var lng, lat;
  wxLocation().
  then(function (gps) {
    return gps;
  }).
  catch(function (error) {
    console.error(JSON.stringify(error));
    return new Promise(function (resolve, reject) {
      getLocalGps(function (lng, lat) {
        resolve({ lng: lng, lat: lat });
      }, 10 * 1000);
    });
  }).
  then(function (gps) {
    if (gps.lng == invalidLng) {
      throw new AddError("get location error");
    }
    lng = gps.lng;
    lat = gps.lat;
    return amapGetRegeo(gps.lng, gps.lat);
  }).
  then(function (regeocode) {
    var com = regeocode.addressComponent;
    var adcode = com.adcode;
    adcode = typeof adcode == 'string' ? adcode.substring(0, 4) : "";
    var city = com.province + (
    typeof com.city == 'string' ? com.city : "");

    setLocalAdcode(adcode, city, lat, lng, regeocode.formatted_address || "");
    return { adcode: adcode, city: city, lat: lat, lng: lng };
  }).
  catch(function (error) {
    console.error(JSON.stringify(error));
    return getLocalAdcode(30 * 60 * 1000);
  }).
  then(function (data) {
    try {
      onSuccess(lng, lat, data.adcode, data.city);
    } catch (e) {
      console.error("callback error: " + e.message);
    }
  }).
  catch(function (error) {
    console.error(JSON.stringify(error));
    onFailed();
  });
}

/**
   *
   * @param fromLng
   * @param fromLat
   * @param toLng
   * @param toLat
   * @param {function({distance:int, duration:int
   * , points:[{longitude:float, latitude:float}]})} onSuccess
   * @param {function()} onFailed
   */
function getWalkingRoute(fromLng, fromLat, toLng, toLat,
onSuccess) {var onFailed = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : function () {};
  var amap = new AMapWX({ key: '924a344dd942f959aafba539c81e1b24' });
  var normal = new Promise(function (resolve, reject) {
    amap.getWalkingRoute({
      origin: fromLng.toString() + "," + fromLat.toString(),
      destination: toLng.toString() + "," + toLat.toString(),
      success: function success(data) {
        if (data.paths && data.paths.length > 0) {
          resolve(data.paths[0]);
          return;
        }
        reject(new AddError("getWalkingRoute result error"));
      },
      fail: function fail(error) {
        reject(new AddError(JSON.stringify(error)));
      } });

  });
  Promise.race([
  normal,
  new Promise(function (resolve, reject) {
    setTimeout(function () {
      reject(new AddError("getWalkingRoute timeout"));
    }, 10 * 1000);
  })]).

  then(function (paths) {
    var points = [];
    var steps = paths.steps;
    for (var i = 0; i < steps.length; i++) {
      var poLen = steps[i].polyline.split(';');
      for (var j = 0; j < poLen.length; j++) {
        points.push({
          longitude: parseFloat(poLen[j].split(',')[0]),
          latitude: parseFloat(poLen[j].split(',')[1]) });

      }
    }
    try {
      onSuccess(parseInt(paths.distance),
      parseInt(paths.duration), points);
    } catch (e) {
      console.error("callback error: " + e.message);
    }
  }).
  catch(function (error) {
    console.error(JSON.stringify(error));
    onFailed();
  });
}

// module.exports = {
//   Const:{
//     invalidLng: invalidLng,
//     invalidLat: invalidLat
//   },
//   getGPS: getGPS, // 请使用getRealTimeGps， 此接口后期会去掉
//   getLocalGps: getLocalGps,
//   getRealTimeGps: getRealTimeGps,
//   getRegeo: getRegeo,
//   getAdcodeHere: getAdcodeHere,
//   getWalkingRoute: getWalkingRoute
// };
//
// getRealTimeGps((lng, lat)=>{
//   console.log("address:" + lng.toString() + ", " + lat.toString());
// });
//
// getAdcodeHere((lng, lat, adcode, city)=>{
//   console.log("address:" + lng.toString() + ", " + lat.toString()+ ", "  + adcode + ", " + city);
// });
//
// getRegeo(104.066541, 30.572269, (address)=>{
//   console.log(address);
// });
//
// getWalkingRoute(104.066541, 30.572269, 104.068541, 30.572269
//   , (distance, duration, points)=>{
//     console.log(distance);
//     console.log(duration);
//     console.log(points);
//   });
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 48:
/*!******************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/amap-wx.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {function AMapWX(a) {
  this.key = a.key, this.requestConfig = {
    key: a.key,
    s: "rsx",
    platform: "WXJS",
    appname: a.key,
    sdkversion: "1.2.0",
    logversion: "2.0" };

}
AMapWX.prototype.getWxLocation = function (a, b) {
  uni.getLocation({
    type: "gcj02", success: function success(a) {
      var c = a.longitude + "," + a.latitude;
      uni.setStorage({ key: "userLocation", data: c }), b(c);
    }, fail: function fail(c) {
      uni.getStorage({
        key: "userLocation", success: function success(a) {
          a.data && b(a.data);
        } }),
      a.fail({ errCode: "0", errMsg: c.errMsg || "" });
    } });

}, AMapWX.prototype.getRegeo = function (a) {
  function c(c) {
    var d = b.requestConfig;
    uni.request({
      url: "https://restapi.amap.com/v3/geocode/regeo",
      data: {
        key: b.key,
        location: c,
        extensions: "all",
        s: d.s,
        platform: d.platform,
        appname: b.key,
        sdkversion: d.sdkversion,
        logversion: d.logversion },

      method: "GET",
      header: { "content-type": "application/json" },
      success: function success(b) {
        var d, e, f, g, h, i, j, k;
        b.data.status && "1" == b.data.status ? (d = b.data.regeocode, e = d.addressComponent, f = [], g = d.roads[0].name + "附近", h = c.split(",")[0], i = c.split(",")[1], d.pois && d.pois[0] && (g = d.pois[0].name + "附近", j = d.pois[0].location, j && (h = parseFloat(j.split(",")[0]), i = parseFloat(j.split(",")[1]))), e.provice && f.push(e.provice), e.city && f.push(e.city), e.district && f.push(e.district), e.streetNumber && e.streetNumber.street && e.streetNumber.number ? (f.push(e.streetNumber.street), f.push(e.streetNumber.number)) : f.push(d.roads[0].name), f = f.join(""), k = [{
          iconPath: a.iconPath,
          width: a.iconWidth,
          height: a.iconHeight,
          name: f,
          desc: g,
          longitude: h,
          latitude: i,
          id: 0,
          regeocodeData: d }],
        a.success(k)) : a.fail({ errCode: b.data.infocode, errMsg: b.data.info });
      },
      fail: function fail(b) {
        a.fail({ errCode: "0", errMsg: b.errMsg || "" });
      } });

  }

  var b = this;
  a.location ? c(a.location) : b.getWxLocation(a, function (a) {
    c(a);
  });
}, AMapWX.prototype.getWeather = function (a) {
  function d(d) {
    var e = "base";
    a.type && "forecast" == a.type && (e = "all"), uni.request({
      url: "https://restapi.amap.com/v3/weather/weatherInfo",
      data: {
        key: b.key,
        city: d,
        extensions: e,
        s: c.s,
        platform: c.platform,
        appname: b.key,
        sdkversion: c.sdkversion,
        logversion: c.logversion },

      method: "GET",
      header: { "content-type": "application/json" },
      success: function success(b) {
        function c(a) {
          var b = {
            city: { text: "城市", data: a.city },
            weather: { text: "天气", data: a.weather },
            temperature: { text: "温度", data: a.temperature },
            winddirection: { text: "风向", data: a.winddirection + "风" },
            windpower: { text: "风力", data: a.windpower + "级" },
            humidity: { text: "湿度", data: a.humidity + "%" } };

          return b;
        }

        var d, e;
        b.data.status && "1" == b.data.status ? b.data.lives ? (d = b.data.lives, d && d.length > 0 && (d = d[0], e = c(d), e["liveData"] = d, a.success(e))) : b.data.forecasts && b.data.forecasts[0] && a.success({ forecast: b.data.forecasts[0] }) : a.fail({
          errCode: b.data.infocode,
          errMsg: b.data.info });

      },
      fail: function fail(b) {
        a.fail({ errCode: "0", errMsg: b.errMsg || "" });
      } });

  }

  function e(e) {
    uni.request({
      url: "https://restapi.amap.com/v3/geocode/regeo",
      data: {
        key: b.key,
        location: e,
        extensions: "all",
        s: c.s,
        platform: c.platform,
        appname: b.key,
        sdkversion: c.sdkversion,
        logversion: c.logversion },

      method: "GET",
      header: { "content-type": "application/json" },
      success: function success(b) {
        var c, e;
        b.data.status && "1" == b.data.status ? (e = b.data.regeocode, e.addressComponent ? c = e.addressComponent.adcode : e.aois && e.aois.length > 0 && (c = e.aois[0].adcode), d(c)) : a.fail({
          errCode: b.data.infocode,
          errMsg: b.data.info });

      },
      fail: function fail(b) {
        a.fail({ errCode: "0", errMsg: b.errMsg || "" });
      } });

  }

  var b = this,c = b.requestConfig;
  a.city ? d(a.city) : b.getWxLocation(a, function (a) {
    e(a);
  });
}, AMapWX.prototype.getPoiAround = function (a) {
  function d(d) {
    var e = {
      key: b.key,
      location: d,
      s: c.s,
      platform: c.platform,
      appname: b.key,
      sdkversion: c.sdkversion,
      logversion: c.logversion };

    a.querytypes && (e["types"] = a.querytypes), a.querykeywords && (e["keywords"] = a.querykeywords), uni.request({
      url: "https://restapi.amap.com/v3/place/around",
      data: e,
      method: "GET",
      header: { "content-type": "application/json" },
      success: function success(b) {
        var c, d, e, f;
        if (b.data.status && "1" == b.data.status) {
          if (b = b.data, b && b.pois) {
            for (c = [], d = 0; d < b.pois.length; d++) {e = 0 == d ? a.iconPathSelected : a.iconPath, c.push({
                latitude: parseFloat(b.pois[d].location.split(",")[1]),
                longitude: parseFloat(b.pois[d].location.split(",")[0]),
                iconPath: e,
                width: 22,
                height: 32,
                id: d,
                name: b.pois[d].name,
                address: b.pois[d].address });}

            f = { markers: c, poisData: b.pois }, a.success(f);
          }
        } else a.fail({ errCode: b.data.infocode, errMsg: b.data.info });
      },
      fail: function fail(b) {
        a.fail({ errCode: "0", errMsg: b.errMsg || "" });
      } });

  }

  var b = this,c = b.requestConfig;
  a.location ? d(a.location) : b.getWxLocation(a, function (a) {
    d(a);
  });
}, AMapWX.prototype.getStaticmap = function (a) {
  function f(b) {
    c.push("location=" + b), a.zoom && c.push("zoom=" + a.zoom), a.size && c.push("size=" + a.size), a.scale && c.push("scale=" + a.scale), a.markers && c.push("markers=" + a.markers), a.labels && c.push("labels=" + a.labels), a.paths && c.push("paths=" + a.paths), a.traffic && c.push("traffic=" + a.traffic);
    var e = d + c.join("&");
    a.success({ url: e });
  }

  var e,b = this,c = [],d = "https://restapi.amap.com/v3/staticmap?";
  c.push("key=" + b.key), e = b.requestConfig, c.push("s=" + e.s), c.push("platform=" + e.platform), c.push("appname=" + e.appname), c.push("sdkversion=" + e.sdkversion), c.push("logversion=" + e.logversion), a.location ? f(a.location) : b.getWxLocation(a, function (a) {
    f(a);
  });
}, AMapWX.prototype.getInputtips = function (a) {
  var b = this,c = b.requestConfig,d = {
    key: b.key,
    s: c.s,
    platform: c.platform,
    appname: b.key,
    sdkversion: c.sdkversion,
    logversion: c.logversion };

  a.location && (d["location"] = a.location), a.keywords && (d["keywords"] = a.keywords), a.type && (d["type"] = a.type), a.city && (d["city"] = a.city), a.citylimit && (d["citylimit"] = a.citylimit), uni.request({
    url: "https://restapi.amap.com/v3/assistant/inputtips",
    data: d,
    method: "GET",
    header: { "content-type": "application/json" },
    success: function success(b) {
      b && b.data && b.data.tips && a.success({ tips: b.data.tips });
    },
    fail: function fail(b) {
      a.fail({ errCode: "0", errMsg: b.errMsg || "" });
    } });

}, AMapWX.prototype.getDrivingRoute = function (a) {
  var b = this,c = b.requestConfig,d = {
    key: b.key,
    s: c.s,
    platform: c.platform,
    appname: b.key,
    sdkversion: c.sdkversion,
    logversion: c.logversion };

  a.origin && (d["origin"] = a.origin), a.destination && (d["destination"] = a.destination), a.strategy && (d["strategy"] = a.strategy), a.waypoints && (d["waypoints"] = a.waypoints), a.avoidpolygons && (d["avoidpolygons"] = a.avoidpolygons), a.avoidroad && (d["avoidroad"] = a.avoidroad), uni.request({
    url: "https://restapi.amap.com/v3/direction/driving",
    data: d,
    method: "GET",
    header: { "content-type": "application/json" },
    success: function success(b) {
      b && b.data && b.data.route && a.success({ paths: b.data.route.paths, taxi_cost: b.data.route.taxi_cost || "" });
    },
    fail: function fail(b) {
      a.fail({ errCode: "0", errMsg: b.errMsg || "" });
    } });

}, AMapWX.prototype.getWalkingRoute = function (a) {
  var b = this,c = b.requestConfig,d = {
    key: b.key,
    s: c.s,
    platform: c.platform,
    appname: b.key,
    sdkversion: c.sdkversion,
    logversion: c.logversion };

  a.origin && (d["origin"] = a.origin), a.destination && (d["destination"] = a.destination), uni.request({
    url: "https://restapi.amap.com/v3/direction/walking",
    data: d,
    method: "GET",
    header: { "content-type": "application/json" },
    success: function success(b) {
      b && b.data && b.data.route && a.success({ paths: b.data.route.paths });
    },
    fail: function fail(b) {
      a.fail({ errCode: "0", errMsg: b.errMsg || "" });
    } });

}, AMapWX.prototype.getTransitRoute = function (a) {
  var b = this,c = b.requestConfig,d = {
    key: b.key,
    s: c.s,
    platform: c.platform,
    appname: b.key,
    sdkversion: c.sdkversion,
    logversion: c.logversion };

  a.origin && (d["origin"] = a.origin), a.destination && (d["destination"] = a.destination), a.strategy && (d["strategy"] = a.strategy), a.city && (d["city"] = a.city), a.cityd && (d["cityd"] = a.cityd), uni.request({
    url: "https://restapi.amap.com/v3/direction/transit/integrated",
    data: d,
    method: "GET",
    header: { "content-type": "application/json" },
    success: function success(b) {
      if (b && b.data && b.data.route) {
        var c = b.data.route;
        a.success({ distance: c.distance || "", taxi_cost: c.taxi_cost || "", transits: c.transits });
      }
    },
    fail: function fail(b) {
      a.fail({ errCode: "0", errMsg: b.errMsg || "" });
    } });

}, AMapWX.prototype.getRidingRoute = function (a) {
  var b = this,c = b.requestConfig,d = {
    key: b.key,
    s: c.s,
    platform: c.platform,
    appname: b.key,
    sdkversion: c.sdkversion,
    logversion: c.logversion };

  a.origin && (d["origin"] = a.origin), a.destination && (d["destination"] = a.destination), uni.request({
    url: "https://restapi.amap.com/v3/direction/riding",
    data: d,
    method: "GET",
    header: { "content-type": "application/json" },
    success: function success(b) {
      b && b.data && b.data.route && a.success({ paths: b.data.route.paths });
    },
    fail: function fail(b) {
      a.fail({ errCode: "0", errMsg: b.errMsg || "" });
    } });

}, module.exports.AMapWX = AMapWX;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 49:
/*!***********************************************!*\
  !*** D:/小黑项目/yx_uniapp/model/AppUserModel.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.AppUserModel = void 0;

var _DefaultModel2 = __webpack_require__(/*! ./DefaultModel */ 13);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}var

AppUserModel = /*#__PURE__*/function (_DefaultModel) {_inherits(AppUserModel, _DefaultModel);
  function AppUserModel() {_classCallCheck(this, AppUserModel);return _possibleConstructorReturn(this, _getPrototypeOf(AppUserModel).call(this));

  }_createClass(AppUserModel, [{ key: "getKey", value: function getKey()

    {
      return "AppUserModel";
    } }, { key: "getIsLocal", value: function getIsLocal()

    {
      return false;
    } }]);return AppUserModel;}(_DefaultModel2.DefaultModel);exports.AppUserModel = AppUserModel;

/***/ }),

/***/ 5:
/*!*******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/dist/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {var _package = __webpack_require__(/*! ../package.json */ 6);function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}

var STAT_VERSION = _package.version;
var STAT_URL = 'https://tongji.dcloud.io/uni/stat';
var STAT_H5_URL = 'https://tongji.dcloud.io/uni/stat.gif';
var PAGE_PVER_TIME = 1800;
var APP_PVER_TIME = 300;
var OPERATING_TIME = 10;

var UUID_KEY = '__DC_STAT_UUID';
var UUID_VALUE = '__DC_UUID_VALUE';

function getUuid() {
  var uuid = '';
  if (getPlatformName() === 'n') {
    try {
      uuid = plus.runtime.getDCloudId();
    } catch (e) {
      uuid = '';
    }
    return uuid;
  }

  try {
    uuid = uni.getStorageSync(UUID_KEY);
  } catch (e) {
    uuid = UUID_VALUE;
  }

  if (!uuid) {
    uuid = Date.now() + '' + Math.floor(Math.random() * 1e7);
    try {
      uni.setStorageSync(UUID_KEY, uuid);
    } catch (e) {
      uni.setStorageSync(UUID_KEY, UUID_VALUE);
    }
  }
  return uuid;
}

var getSgin = function getSgin(statData) {
  var arr = Object.keys(statData);
  var sortArr = arr.sort();
  var sgin = {};
  var sginStr = '';
  for (var i in sortArr) {
    sgin[sortArr[i]] = statData[sortArr[i]];
    sginStr += sortArr[i] + '=' + statData[sortArr[i]] + '&';
  }
  // const options = sginStr.substr(0, sginStr.length - 1)
  // sginStr = sginStr.substr(0, sginStr.length - 1) + '&key=' + STAT_KEY;
  // const si = crypto.createHash('md5').update(sginStr).digest('hex');
  return {
    sign: '',
    options: sginStr.substr(0, sginStr.length - 1) };

};

var getSplicing = function getSplicing(data) {
  var str = '';
  for (var i in data) {
    str += i + '=' + data[i] + '&';
  }
  return str.substr(0, str.length - 1);
};

var getTime = function getTime() {
  return parseInt(new Date().getTime() / 1000);
};

var getPlatformName = function getPlatformName() {
  var platformList = {
    'app-plus': 'n',
    'h5': 'h5',
    'mp-weixin': 'wx',
    'mp-alipay': 'ali',
    'mp-baidu': 'bd',
    'mp-toutiao': 'tt',
    'mp-qq': 'qq' };

  return platformList["mp-weixin"];
};

var getPackName = function getPackName() {
  var packName = '';
  if (getPlatformName() === 'wx' || getPlatformName() === 'qq') {
    // 兼容微信小程序低版本基础库
    if (uni.canIUse('getAccountInfoSync')) {
      packName = uni.getAccountInfoSync().miniProgram.appId || '';
    }
  }
  return packName;
};

var getVersion = function getVersion() {
  return getPlatformName() === 'n' ? plus.runtime.version : '';
};

var getChannel = function getChannel() {
  var platformName = getPlatformName();
  var channel = '';
  if (platformName === 'n') {
    channel = plus.runtime.channel;
  }
  return channel;
};

var getScene = function getScene(options) {
  var platformName = getPlatformName();
  var scene = '';
  if (options) {
    return options;
  }
  if (platformName === 'wx') {
    scene = uni.getLaunchOptionsSync().scene;
  }
  return scene;
};
var First__Visit__Time__KEY = 'First__Visit__Time';
var Last__Visit__Time__KEY = 'Last__Visit__Time';

var getFirstVisitTime = function getFirstVisitTime() {
  var timeStorge = uni.getStorageSync(First__Visit__Time__KEY);
  var time = 0;
  if (timeStorge) {
    time = timeStorge;
  } else {
    time = getTime();
    uni.setStorageSync(First__Visit__Time__KEY, time);
    uni.removeStorageSync(Last__Visit__Time__KEY);
  }
  return time;
};

var getLastVisitTime = function getLastVisitTime() {
  var timeStorge = uni.getStorageSync(Last__Visit__Time__KEY);
  var time = 0;
  if (timeStorge) {
    time = timeStorge;
  } else {
    time = '';
  }
  uni.setStorageSync(Last__Visit__Time__KEY, getTime());
  return time;
};


var PAGE_RESIDENCE_TIME = '__page__residence__time';
var First_Page_residence_time = 0;
var Last_Page_residence_time = 0;


var setPageResidenceTime = function setPageResidenceTime() {
  First_Page_residence_time = getTime();
  if (getPlatformName() === 'n') {
    uni.setStorageSync(PAGE_RESIDENCE_TIME, getTime());
  }
  return First_Page_residence_time;
};

var getPageResidenceTime = function getPageResidenceTime() {
  Last_Page_residence_time = getTime();
  if (getPlatformName() === 'n') {
    First_Page_residence_time = uni.getStorageSync(PAGE_RESIDENCE_TIME);
  }
  return Last_Page_residence_time - First_Page_residence_time;
};
var TOTAL__VISIT__COUNT = 'Total__Visit__Count';
var getTotalVisitCount = function getTotalVisitCount() {
  var timeStorge = uni.getStorageSync(TOTAL__VISIT__COUNT);
  var count = 1;
  if (timeStorge) {
    count = timeStorge;
    count++;
  }
  uni.setStorageSync(TOTAL__VISIT__COUNT, count);
  return count;
};

var GetEncodeURIComponentOptions = function GetEncodeURIComponentOptions(statData) {
  var data = {};
  for (var prop in statData) {
    data[prop] = encodeURIComponent(statData[prop]);
  }
  return data;
};

var Set__First__Time = 0;
var Set__Last__Time = 0;

var getFirstTime = function getFirstTime() {
  var time = new Date().getTime();
  Set__First__Time = time;
  Set__Last__Time = 0;
  return time;
};


var getLastTime = function getLastTime() {
  var time = new Date().getTime();
  Set__Last__Time = time;
  return time;
};


var getResidenceTime = function getResidenceTime(type) {
  var residenceTime = 0;
  if (Set__First__Time !== 0) {
    residenceTime = Set__Last__Time - Set__First__Time;
  }

  residenceTime = parseInt(residenceTime / 1000);
  residenceTime = residenceTime < 1 ? 1 : residenceTime;
  if (type === 'app') {
    var overtime = residenceTime > APP_PVER_TIME ? true : false;
    return {
      residenceTime: residenceTime,
      overtime: overtime };

  }
  if (type === 'page') {
    var _overtime = residenceTime > PAGE_PVER_TIME ? true : false;
    return {
      residenceTime: residenceTime,
      overtime: _overtime };

  }

  return {
    residenceTime: residenceTime };


};

var getRoute = function getRoute() {
  var pages = getCurrentPages();
  var page = pages[pages.length - 1];
  var _self = page.$vm;

  if (getPlatformName() === 'bd') {
    return _self.$mp && _self.$mp.page.is;
  } else {
    return _self.$scope && _self.$scope.route || _self.$mp && _self.$mp.page.route;
  }
};

var getPageRoute = function getPageRoute(self) {
  var pages = getCurrentPages();
  var page = pages[pages.length - 1];
  var _self = page.$vm;
  var query = self._query;
  var str = query && JSON.stringify(query) !== '{}' ? '?' + JSON.stringify(query) : '';
  // clear
  self._query = '';
  if (getPlatformName() === 'bd') {
    return _self.$mp && _self.$mp.page.is + str;
  } else {
    return _self.$scope && _self.$scope.route + str || _self.$mp && _self.$mp.page.route + str;
  }
};

var getPageTypes = function getPageTypes(self) {
  if (self.mpType === 'page' || self.$mp && self.$mp.mpType === 'page' || self.$options.mpType === 'page') {
    return true;
  }
  return false;
};

var calibration = function calibration(eventName, options) {
  //  login 、 share 、pay_success 、pay_fail 、register 、title
  if (!eventName) {
    console.error("uni.report \u7F3A\u5C11 [eventName] \u53C2\u6570");
    return true;
  }
  if (typeof eventName !== 'string') {
    console.error("uni.report [eventName] \u53C2\u6570\u7C7B\u578B\u9519\u8BEF,\u53EA\u80FD\u4E3A String \u7C7B\u578B");
    return true;
  }
  if (eventName.length > 255) {
    console.error("uni.report [eventName] \u53C2\u6570\u957F\u5EA6\u4E0D\u80FD\u5927\u4E8E 255");
    return true;
  }

  if (typeof options !== 'string' && typeof options !== 'object') {
    console.error("uni.report [options] \u53C2\u6570\u7C7B\u578B\u9519\u8BEF,\u53EA\u80FD\u4E3A String \u6216 Object \u7C7B\u578B");
    return true;
  }

  if (typeof options === 'string' && options.length > 255) {
    console.error("uni.report [options] \u53C2\u6570\u957F\u5EA6\u4E0D\u80FD\u5927\u4E8E 255");
    return true;
  }

  if (eventName === 'title' && typeof options !== 'string') {
    console.error('uni.report [eventName] 参数为 title 时，[options] 参数只能为 String 类型');
    return true;
  }
};

var PagesJson = __webpack_require__(/*! uni-pages?{"type":"style"} */ 7).default;
var statConfig = __webpack_require__(/*! uni-stat-config */ 8).default || __webpack_require__(/*! uni-stat-config */ 8);

var resultOptions = uni.getSystemInfoSync();var

Util = /*#__PURE__*/function () {
  function Util() {_classCallCheck(this, Util);
    this.self = '';
    this._retry = 0;
    this._platform = '';
    this._query = {};
    this._navigationBarTitle = {
      config: '',
      page: '',
      report: '',
      lt: '' };

    this._operatingTime = 0;
    this._reportingRequestData = {
      '1': [],
      '11': [] };

    this.__prevent_triggering = false;

    this.__licationHide = false;
    this.__licationShow = false;
    this._lastPageRoute = '';
    this.statData = {
      uuid: getUuid(),
      ut: getPlatformName(),
      mpn: getPackName(),
      ak: statConfig.appid,
      usv: STAT_VERSION,
      v: getVersion(),
      ch: getChannel(),
      cn: '',
      pn: '',
      ct: '',
      t: getTime(),
      tt: '',
      p: resultOptions.platform === 'android' ? 'a' : 'i',
      brand: resultOptions.brand || '',
      md: resultOptions.model,
      sv: resultOptions.system.replace(/(Android|iOS)\s/, ''),
      mpsdk: resultOptions.SDKVersion || '',
      mpv: resultOptions.version || '',
      lang: resultOptions.language,
      pr: resultOptions.pixelRatio,
      ww: resultOptions.windowWidth,
      wh: resultOptions.windowHeight,
      sw: resultOptions.screenWidth,
      sh: resultOptions.screenHeight };


  }_createClass(Util, [{ key: "_applicationShow", value: function _applicationShow()

    {
      if (this.__licationHide) {
        getLastTime();
        var time = getResidenceTime('app');
        if (time.overtime) {
          var options = {
            path: this._lastPageRoute,
            scene: this.statData.sc };

          this._sendReportRequest(options);
        }
        this.__licationHide = false;
      }
    } }, { key: "_applicationHide", value: function _applicationHide(

    self, type) {

      this.__licationHide = true;
      getLastTime();
      var time = getResidenceTime();
      getFirstTime();
      var route = getPageRoute(this);
      this._sendHideRequest({
        urlref: route,
        urlref_ts: time.residenceTime },
      type);
    } }, { key: "_pageShow", value: function _pageShow()

    {
      var route = getPageRoute(this);
      var routepath = getRoute();
      this._navigationBarTitle.config = PagesJson &&
      PagesJson.pages[routepath] &&
      PagesJson.pages[routepath].titleNView &&
      PagesJson.pages[routepath].titleNView.titleText ||
      PagesJson &&
      PagesJson.pages[routepath] &&
      PagesJson.pages[routepath].navigationBarTitleText || '';

      if (this.__licationShow) {
        getFirstTime();
        this.__licationShow = false;
        // console.log('这是 onLauch 之后执行的第一次 pageShow ，为下次记录时间做准备');
        this._lastPageRoute = route;
        return;
      }

      getLastTime();
      this._lastPageRoute = route;
      var time = getResidenceTime('page');
      if (time.overtime) {
        var options = {
          path: this._lastPageRoute,
          scene: this.statData.sc };

        this._sendReportRequest(options);
      }
      getFirstTime();
    } }, { key: "_pageHide", value: function _pageHide()

    {
      if (!this.__licationHide) {
        getLastTime();
        var time = getResidenceTime('page');
        this._sendPageRequest({
          url: this._lastPageRoute,
          urlref: this._lastPageRoute,
          urlref_ts: time.residenceTime });

        this._navigationBarTitle = {
          config: '',
          page: '',
          report: '',
          lt: '' };

        return;
      }
    } }, { key: "_login", value: function _login()

    {
      this._sendEventRequest({
        key: 'login' },
      0);
    } }, { key: "_share", value: function _share()

    {
      this._sendEventRequest({
        key: 'share' },
      0);
    } }, { key: "_payment", value: function _payment(
    key) {
      this._sendEventRequest({
        key: key },
      0);
    } }, { key: "_sendReportRequest", value: function _sendReportRequest(
    options) {

      this._navigationBarTitle.lt = '1';
      var query = options.query && JSON.stringify(options.query) !== '{}' ? '?' + JSON.stringify(options.query) : '';
      this.statData.lt = '1';
      this.statData.url = options.path + query || '';
      this.statData.t = getTime();
      this.statData.sc = getScene(options.scene);
      this.statData.fvts = getFirstVisitTime();
      this.statData.lvts = getLastVisitTime();
      this.statData.tvc = getTotalVisitCount();
      if (getPlatformName() === 'n') {
        this.getProperty();
      } else {
        this.getNetworkInfo();
      }
    } }, { key: "_sendPageRequest", value: function _sendPageRequest(

    opt) {var

      url =


      opt.url,urlref = opt.urlref,urlref_ts = opt.urlref_ts;
      this._navigationBarTitle.lt = '11';
      var options = {
        ak: this.statData.ak,
        uuid: this.statData.uuid,
        lt: '11',
        ut: this.statData.ut,
        url: url,
        tt: this.statData.tt,
        urlref: urlref,
        urlref_ts: urlref_ts,
        ch: this.statData.ch,
        usv: this.statData.usv,
        t: getTime(),
        p: this.statData.p };

      this.request(options);
    } }, { key: "_sendHideRequest", value: function _sendHideRequest(

    opt, type) {var

      urlref =

      opt.urlref,urlref_ts = opt.urlref_ts;
      var options = {
        ak: this.statData.ak,
        uuid: this.statData.uuid,
        lt: '3',
        ut: this.statData.ut,
        urlref: urlref,
        urlref_ts: urlref_ts,
        ch: this.statData.ch,
        usv: this.statData.usv,
        t: getTime(),
        p: this.statData.p };

      this.request(options, type);
    } }, { key: "_sendEventRequest", value: function _sendEventRequest()



    {var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},_ref$key = _ref.key,key = _ref$key === void 0 ? '' : _ref$key,_ref$value = _ref.value,value = _ref$value === void 0 ? "" : _ref$value;
      var route = this._lastPageRoute;
      var options = {
        ak: this.statData.ak,
        uuid: this.statData.uuid,
        lt: '21',
        ut: this.statData.ut,
        url: route,
        ch: this.statData.ch,
        e_n: key,
        e_v: typeof value === 'object' ? JSON.stringify(value) : value.toString(),
        usv: this.statData.usv,
        t: getTime(),
        p: this.statData.p };

      this.request(options);
    } }, { key: "getNetworkInfo", value: function getNetworkInfo()

    {var _this = this;
      uni.getNetworkType({
        success: function success(result) {
          _this.statData.net = result.networkType;
          _this.getLocation();
        } });

    } }, { key: "getProperty", value: function getProperty()

    {var _this2 = this;
      plus.runtime.getProperty(plus.runtime.appid, function (wgtinfo) {
        _this2.statData.v = wgtinfo.version || '';
        _this2.getNetworkInfo();
      });
    } }, { key: "getLocation", value: function getLocation()

    {var _this3 = this;
      if (statConfig.getLocation) {
        uni.getLocation({
          type: 'wgs84',
          geocode: true,
          success: function success(result) {
            if (result.address) {
              _this3.statData.cn = result.address.country;
              _this3.statData.pn = result.address.province;
              _this3.statData.ct = result.address.city;
            }

            _this3.statData.lat = result.latitude;
            _this3.statData.lng = result.longitude;
            _this3.request(_this3.statData);
          } });

      } else {
        this.statData.lat = 0;
        this.statData.lng = 0;
        this.request(this.statData);
      }
    } }, { key: "request", value: function request(

    data, type) {var _this4 = this;
      var time = getTime();
      var title = this._navigationBarTitle;
      data.ttn = title.page;
      data.ttpj = title.config;
      data.ttc = title.report;

      var requestData = this._reportingRequestData;
      if (getPlatformName() === 'n') {
        requestData = uni.getStorageSync('__UNI__STAT__DATA') || {};
      }
      if (!requestData[data.lt]) {
        requestData[data.lt] = [];
      }
      requestData[data.lt].push(data);

      if (getPlatformName() === 'n') {
        uni.setStorageSync('__UNI__STAT__DATA', requestData);
      }
      if (getPageResidenceTime() < OPERATING_TIME && !type) {
        return;
      }
      var uniStatData = this._reportingRequestData;
      if (getPlatformName() === 'n') {
        uniStatData = uni.getStorageSync('__UNI__STAT__DATA');
      }
      // 时间超过，重新获取时间戳
      setPageResidenceTime();
      var firstArr = [];
      var contentArr = [];
      var lastArr = [];var _loop = function _loop(

      i) {
        var rd = uniStatData[i];
        rd.forEach(function (elm) {
          var newData = getSplicing(elm);
          if (i === 0) {
            firstArr.push(newData);
          } else if (i === 3) {
            lastArr.push(newData);
          } else {
            contentArr.push(newData);
          }
        });};for (var i in uniStatData) {_loop(i);
      }

      firstArr.push.apply(firstArr, contentArr.concat(lastArr));
      var optionsData = {
        usv: STAT_VERSION, //统计 SDK 版本号
        t: time, //发送请求时的时间戮
        requests: JSON.stringify(firstArr) };


      this._reportingRequestData = {};
      if (getPlatformName() === 'n') {
        uni.removeStorageSync('__UNI__STAT__DATA');
      }

      if (data.ut === 'h5') {
        this.imageRequest(optionsData);
        return;
      }

      if (getPlatformName() === 'n' && this.statData.p === 'a') {
        setTimeout(function () {
          _this4._sendRequest(optionsData);
        }, 200);
        return;
      }
      this._sendRequest(optionsData);
    } }, { key: "_sendRequest", value: function _sendRequest(
    optionsData) {var _this5 = this;
      uni.request({
        url: STAT_URL,
        method: 'POST',
        // header: {
        //   'content-type': 'application/json' // 默认值
        // },
        data: optionsData,
        success: function success() {
          // if (process.env.NODE_ENV === 'development') {
          //   console.log('stat request success');
          // }
        },
        fail: function fail(e) {
          if (++_this5._retry < 3) {
            setTimeout(function () {
              _this5._sendRequest(optionsData);
            }, 1000);
          }
        } });

    }
    /**
       * h5 请求
       */ }, { key: "imageRequest", value: function imageRequest(
    data) {
      var image = new Image();
      var options = getSgin(GetEncodeURIComponentOptions(data)).options;
      image.src = STAT_H5_URL + '?' + options;
    } }, { key: "sendEvent", value: function sendEvent(

    key, value) {
      // 校验 type 参数
      if (calibration(key, value)) return;

      if (key === 'title') {
        this._navigationBarTitle.report = value;
        return;
      }
      this._sendEventRequest({
        key: key,
        value: typeof value === 'object' ? JSON.stringify(value) : value },
      1);
    } }]);return Util;}();var



Stat = /*#__PURE__*/function (_Util) {_inherits(Stat, _Util);_createClass(Stat, null, [{ key: "getInstance", value: function getInstance()
    {
      if (!this.instance) {
        this.instance = new Stat();
      }
      return this.instance;
    } }]);
  function Stat() {var _this6;_classCallCheck(this, Stat);
    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(Stat).call(this));
    _this6.instance = null;
    // 注册拦截器
    if (typeof uni.addInterceptor === 'function' && "development" !== 'development') {
      _this6.addInterceptorInit();
      _this6.interceptLogin();
      _this6.interceptShare(true);
      _this6.interceptRequestPayment();
    }return _this6;
  }_createClass(Stat, [{ key: "addInterceptorInit", value: function addInterceptorInit()

    {
      var self = this;
      uni.addInterceptor('setNavigationBarTitle', {
        invoke: function invoke(args) {
          self._navigationBarTitle.page = args.title;
        } });

    } }, { key: "interceptLogin", value: function interceptLogin()

    {
      var self = this;
      uni.addInterceptor('login', {
        complete: function complete() {
          self._login();
        } });

    } }, { key: "interceptShare", value: function interceptShare(

    type) {
      var self = this;
      if (!type) {
        self._share();
        return;
      }
      uni.addInterceptor('share', {
        success: function success() {
          self._share();
        },
        fail: function fail() {
          self._share();
        } });

    } }, { key: "interceptRequestPayment", value: function interceptRequestPayment()

    {
      var self = this;
      uni.addInterceptor('requestPayment', {
        success: function success() {
          self._payment('pay_success');
        },
        fail: function fail() {
          self._payment('pay_fail');
        } });

    } }, { key: "report", value: function report(

    options, self) {
      this.self = self;
      // if (process.env.NODE_ENV === 'development') {
      //   console.log('report init');
      // }
      setPageResidenceTime();
      this.__licationShow = true;
      this._sendReportRequest(options, true);
    } }, { key: "load", value: function load(

    options, self) {
      if (!self.$scope && !self.$mp) {
        var page = getCurrentPages();
        self.$scope = page[page.length - 1];
      }
      this.self = self;
      this._query = options;
    } }, { key: "show", value: function show(

    self) {
      this.self = self;
      if (getPageTypes(self)) {
        this._pageShow(self);
      } else {
        this._applicationShow(self);
      }
    } }, { key: "ready", value: function ready(

    self) {
      // this.self = self;
      // if (getPageTypes(self)) {
      //   this._pageShow(self);
      // }
    } }, { key: "hide", value: function hide(
    self) {
      this.self = self;
      if (getPageTypes(self)) {
        this._pageHide(self);
      } else {
        this._applicationHide(self, true);
      }
    } }, { key: "error", value: function error(
    em) {
      if (this._platform === 'devtools') {
        if (true) {
          console.info('当前运行环境为开发者工具，不上报数据。');
        }
        // return;
      }
      var emVal = '';
      if (!em.message) {
        emVal = JSON.stringify(em);
      } else {
        emVal = em.stack;
      }
      var options = {
        ak: this.statData.ak,
        uuid: this.statData.uuid,
        lt: '31',
        ut: this.statData.ut,
        ch: this.statData.ch,
        mpsdk: this.statData.mpsdk,
        mpv: this.statData.mpv,
        v: this.statData.v,
        em: emVal,
        usv: this.statData.usv,
        t: getTime(),
        p: this.statData.p };

      this.request(options);
    } }]);return Stat;}(Util);


var stat = Stat.getInstance();
var isHide = false;
var lifecycle = {
  onLaunch: function onLaunch(options) {
    stat.report(options, this);
  },
  onReady: function onReady() {
    stat.ready(this);
  },
  onLoad: function onLoad(options) {
    stat.load(options, this);
    // 重写分享，获取分享上报事件
    if (this.$scope && this.$scope.onShareAppMessage) {
      var oldShareAppMessage = this.$scope.onShareAppMessage;
      this.$scope.onShareAppMessage = function (options) {
        stat.interceptShare(false);
        return oldShareAppMessage.call(this, options);
      };
    }
  },
  onShow: function onShow() {
    isHide = false;
    stat.show(this);
  },
  onHide: function onHide() {
    isHide = true;
    stat.hide(this);
  },
  onUnload: function onUnload() {
    if (isHide) {
      isHide = false;
      return;
    }
    stat.hide(this);
  },
  onError: function onError(e) {
    stat.error(e);
  } };


function main() {
  if (true) {
    uni.report = function (type, options) {};
  } else { var Vue; }
}

main();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 50:
/*!************************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/UpdateManager.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.UpWxApp = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}

// 小程序更新
var UpWxApp = /*#__PURE__*/function () {
  function UpWxApp() {_classCallCheck(this, UpWxApp);

    this.up();

  }_createClass(UpWxApp, [{ key: "up", value: function up()

    {
      if (!uni.getUpdateManager) return;

      var updateManager = uni.getUpdateManager();

      updateManager.onCheckForUpdate(function (res) {
        // 请求完新版本信息的回调
        console.log(res.hasUpdate);
      });

      updateManager.onUpdateReady(function (res) {
        uni.showModal({
          title: '更新提示',
          content: '新版本已经准备好，是否重启应用？',
          showCancel: false,
          confirmColor: "#0084ff",
          confirmText: "立即更新",
          success: function success(res) {
            if (res.confirm) {
              updateManager.applyUpdate();
            }
          } });

      });

      // 新的版本下载失败
      updateManager.onUpdateFailed(function (res) {
        uni.showModal({
          title: '温馨提示',
          content: '新版本更新失败！请联系客服。',
          showCancel: false,
          confirmColor: "#0084ff",
          confirmText: "我知道了" });

      });
    } }]);return UpWxApp;}();exports.UpWxApp = UpWxApp;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 53:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    options.components = Object.assign(components, options.components || {})
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 580:
/*!**********************************************************************************************!*\
  !*** D:/小黑项目/yx_uniapp/pagesStatistics/customer_analysis/content/change_data/change_data.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.change_data_tools = void 0;function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}var change_data_tools = {
  // 交易数据处理
  changeAllDealTrends: function changeAllDealTrends(obj) {
    //图表数据
    if (obj != undefined) {
      obj.result.sort(function (a, b) {
        return new Date(a.date).getTime() - new Date(b.date).getTime();
      });

      var series = [
      {
        name: '交易金额',
        data: obj.result.map(function (v) {return Math.floor(v.dealAmount || 0 / 1000 * 100) / 100;}),
        type: 'line',
        color: '#f95742',
        pointShape: 'circle',
        addPoint: true,
        legendShape: 'circle' },

      {
        name: '交易套数',
        data: obj.result.map(function (v) {return v.dealNum || 0;}),
        type: 'line',
        color: '#0586ff',
        pointShape: 'circle',
        addPoint: true,
        legendShape: 'circle' }];


      // 最大值
      var max = series.map(function (v) {return Math.ceil(Math.max.apply(Math, _toConsumableArray(v.data)) * 1.2);});
      // content数据
      var allDealTrends = {
        allDealAmount: obj.allDealTrends[0].allDealAmount || 0,
        allDealAvg: obj.allDealTrends[0].allDealAvg || 0,
        allDealNum: obj.allDealTrends[0].allDealNum || 0 };

      for (var k in allDealTrends) {
        allDealTrends[k] = Math.floor(allDealTrends[k] / 1000 * 100) / 100;
      }
      //日期
      var categories;
      if (obj.result[0].date.length > 7) {
        categories = obj.result.map(function (v) {
          return v.date.slice(5);
        });
      } else {
        categories = obj.result.map(function (v) {
          return "".concat(new Date(v.date).getFullYear(), "-").concat(new Date(v.date).getMonth() + 1);
        });
      }

      return {
        allDealTrends: allDealTrends, series: series, max: max, categories: categories };

    } else {
      return _defineProperty({
        allDealTrends: { allDealAmount: 0.00, allDealAvg: 0.00, allDealNum: 0.00 },
        categories: [],
        max: [10, 10],
        series: [{
          addPoint: true,
          color: "#f95742",
          data: [0, 0, 0, 0, 0],
          legendShape: "circle",
          name: "交易金额",
          pointShape: "circle",
          type: "line" },

        {
          addPoint: true,
          color: "#0586ff",
          data: [0, 0, 0, 0, 0],
          legendShape: "circle",
          name: "交易套数",
          pointShape: "circle",
          type: "line" }] }, "categories",

      ['周一', '周二', '周三', '周四', '周五', '周六', '周日']);

    }
  },

  //客户转化率
  custStatisticInfo: function custStatisticInfo(obj) {
    if (obj != undefined) {
      var bandRate = { series: [{ name: '带看率', data: obj.bandRate || 0, color: '#0084ff' }] };
      var commissionRate = { series: [{ name: '结佣率', data: obj.commissionRate || 0, color: '#0084ff' }] };
      var reportRate = { series: [{ name: '报备率', data: obj.reportRate || 0, color: '#0084ff' }] };
      var signRate = { series: [{ name: '签约率', data: obj.signRate || 0, color: '#0084ff' }] };
      var data_list = [
      { name: '报备数(组)', value: obj.reportCount || 0 },
      { name: '审核通过(组)', value: obj.auditCount || 0 },
      { name: '带看数(组)', value: obj.bandCount || 0 },
      { name: '成交数(组)', value: obj.signCount || 0 },
      { name: '退佣数(组)', value: obj.retCommissionCount || 0 },
      { name: '结佣数(组)', value: obj.commissionCount || 0 }];


      return {
        bandRate: bandRate, commissionRate: commissionRate, reportRate: reportRate, signRate: signRate, data_list: data_list };

    } else {
      return {
        data_list: [{ name: '报备数(组)', value: 0 }, { name: '审核通过(组)', value: 0 }, { name: '带看数(组)', value: 0 }, { name: '成交数(组)', value: 0 }, { name: '退佣数(组)', value: 0 }, { name: '结佣数(组)', value: 0 }],
        bandRate: { series: [{ name: '带看率', data: 0, color: '#0084ff' }] },
        commissionRate: { series: [{ name: '结佣率', data: 0, color: '#0084ff' }] },
        reportRate: { series: [{ name: '报备率', data: 0, color: '#0084ff' }] },
        signRate: {
          series: [
          { name: '签约率', data: 0, color: '#0084ff' }] } };



    }
  },
  // 户型销售对比
  changeSellProportionLayout: function changeSellProportionLayout(obj) {
    if (obj != undefined) {
      var color = ['#0084ff', '#13c2c2', '#ffb109', '#9083f8', '#ff625b'];
      var overArr = null;
      var legend = [];
      // 数据 
      var series = obj.slice(0, 4).map(function (v) {
        return {
          name: v.name,
          data: v.sellNum };

      });

      //title
      var title = 0;
      for (var i = 0; i < series.length; i++) {
        title += series[i].data;
      }
      title = "".concat(title);
      if (series[0] == undefined)
      title = '0';

      // 数据
      if (obj.length > 5) {
        var sum = 0;
        overArr = obj.slice(4);
        for (var _i = 0; _i < overArr.length; _i++) {
          sum += overArr[_i].sellNum;
        }
        series.push({ name: '其他', data: sum });
      }
      for (var _i2 = 0; _i2 < series.length; _i2++) {
        series[_i2].color = color[_i2];
      }
      if (series[0] == undefined)
      series = [{ name: '暂无数据', data: 1, color: '#0084ff' }];

      // 图例
      legend = obj.slice(0, 4);
      var allNum = 0;
      var allPer = 0;

      if (obj.length > 5) {
        var overLegend = obj.slice(4);
        for (var _i3 = 0; _i3 < overLegend.length; _i3++) {
          allNum += overLegend[_i3].sellNum;
          allPer += overLegend[_i3].percent;
        }
        legend.push({ name: '其他', sellNum: allNum, percent: allPer });
      }

      for (var _i4 = 0; _i4 < legend.length; _i4++) {
        legend[_i4].color = color[_i4];
        legend[_i4].percent = "".concat(legend[_i4].percent * 100) + '%';
      }

      return { series: series, legend: legend, title: title };
    } else {
      return {
        series: [{ name: '暂无数据', data: [1], color: "#0084ff" }],
        legend: [{ color: "#0084ff", name: "暂无数据", percent: "0%", sellNum: "0" }],
        title: '暂无数据' };

    }
  } };exports.change_data_tools = change_data_tools;

/***/ }),

/***/ 6:
/*!******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/package.json ***!
  \******************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, bugs, bundleDependencies, deprecated, description, devDependencies, files, gitHead, homepage, license, main, name, repository, scripts, version, default */
/***/ (function(module) {

module.exports = {"_from":"@dcloudio/uni-stat@alpha","_id":"@dcloudio/uni-stat@2.0.0-alpha-25120200103005","_inBundle":false,"_integrity":"sha512-nYoIrRV2e5o/vzr6foSdWi3Rl2p0GuO+LPY3JctyY6uTKgPnuH99d7aL/QQdJ1SacQjBWO+QGK1qankN7oyrWw==","_location":"/@dcloudio/uni-stat","_phantomChildren":{},"_requested":{"type":"tag","registry":true,"raw":"@dcloudio/uni-stat@alpha","name":"@dcloudio/uni-stat","escapedName":"@dcloudio%2funi-stat","scope":"@dcloudio","rawSpec":"alpha","saveSpec":null,"fetchSpec":"alpha"},"_requiredBy":["#USER","/","/@dcloudio/vue-cli-plugin-uni"],"_resolved":"https://registry.npmjs.org/@dcloudio/uni-stat/-/uni-stat-2.0.0-alpha-25120200103005.tgz","_shasum":"a77a63481f36474f3e86686868051219d1bb12df","_spec":"@dcloudio/uni-stat@alpha","_where":"/Users/guoshengqiang/Documents/dcloud-plugins/alpha/uniapp-cli","author":"","bugs":{"url":"https://github.com/dcloudio/uni-app/issues"},"bundleDependencies":false,"deprecated":false,"description":"","devDependencies":{"@babel/core":"^7.5.5","@babel/preset-env":"^7.5.5","eslint":"^6.1.0","rollup":"^1.19.3","rollup-plugin-babel":"^4.3.3","rollup-plugin-clear":"^2.0.7","rollup-plugin-commonjs":"^10.0.2","rollup-plugin-copy":"^3.1.0","rollup-plugin-eslint":"^7.0.0","rollup-plugin-json":"^4.0.0","rollup-plugin-node-resolve":"^5.2.0","rollup-plugin-replace":"^2.2.0","rollup-plugin-uglify":"^6.0.2"},"files":["dist","package.json","LICENSE"],"gitHead":"6be187a3dfe15f95dd6146d9fec08e1f81100987","homepage":"https://github.com/dcloudio/uni-app#readme","license":"Apache-2.0","main":"dist/index.js","name":"@dcloudio/uni-stat","repository":{"type":"git","url":"git+https://github.com/dcloudio/uni-app.git","directory":"packages/uni-stat"},"scripts":{"build":"NODE_ENV=production rollup -c rollup.config.js","dev":"NODE_ENV=development rollup -w -c rollup.config.js"},"version":"2.0.0-alpha-25120200103005"};

/***/ }),

/***/ 609:
/*!*******************************************!*\
  !*** D:/小黑项目/yx_uniapp/net/ConfirmNet.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.CheckCustInfoByQrCode = exports.GetCustInfoAfterScanQrcode = void 0;var _RequestApi3 = __webpack_require__(/*! ../utils/RequestApi */ 26);function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}

// 扫描二维码后获取对应的报备用户信息
var GetCustInfoAfterScanQrcode = /*#__PURE__*/function (_RequestApi) {_inherits(GetCustInfoAfterScanQrcode, _RequestApi);
  function GetCustInfoAfterScanQrcode(responseData) {_classCallCheck(this, GetCustInfoAfterScanQrcode);
    var item = new _RequestApi3.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(GetCustInfoAfterScanQrcode).call(this,
    item));
  }_createClass(GetCustInfoAfterScanQrcode, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/getCustInfoAfterScanQrcode";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return GetCustInfoAfterScanQrcode;}(_RequestApi3.RequestApi);


// 允许或者拒绝（status = 0）报备
exports.GetCustInfoAfterScanQrcode = GetCustInfoAfterScanQrcode;var CheckCustInfoByQrCode = /*#__PURE__*/function (_RequestApi2) {_inherits(CheckCustInfoByQrCode, _RequestApi2);
  function CheckCustInfoByQrCode(responseData) {_classCallCheck(this, CheckCustInfoByQrCode);
    var item = new _RequestApi3.RequestApiItem();
    item.domain = "java";
    item.data = responseData;return _possibleConstructorReturn(this, _getPrototypeOf(CheckCustInfoByQrCode).call(this,
    item));
  }_createClass(CheckCustInfoByQrCode, [{ key: "getUrl", value: function getUrl()

    {
      return "/newBuildWeb/app/newBuild/checkCustInfoByQrCode";
    } }, { key: "getNeedClientKey", value: function getNeedClientKey()

    {
      return true;
    } }]);return CheckCustInfoByQrCode;}(_RequestApi3.RequestApi);exports.CheckCustInfoByQrCode = CheckCustInfoByQrCode;

/***/ }),

/***/ 638:
/*!***************************************************************************************!*\
  !*** D:/小黑项目/yx_uniapp/pages/buildList/components/content/change_data/change_data.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.change_data_tools = void 0;function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}var change_data_tools = {
  // 交易数据处理
  changeAllDealTrends: function changeAllDealTrends(obj) {
    var ifData = obj.result.some(function (v) {
      return v.dealAmount != undefined && v.dealNum != undefined;
    });
    //图表数据
    if (ifData) {
      obj.result.sort(function (a, b) {
        return new Date(a.date).getTime() - new Date(b.date).getTime();
      });

      var series = [
      {
        name: '带看数',
        data: obj.result.map(function (v) {return v.bandNum || 0;}),
        type: 'line',
        color: '#0586ff',
        pointShape: 'circle',
        addPoint: true,
        legendShape: 'circle',
        index: 0 },

      {
        name: '成交数',
        data: obj.result.map(function (v) {return v.dealNum || 0;}),
        type: 'line',
        color: '#f95742',
        pointShape: 'circle',
        addPoint: true,
        legendShape: 'circle',
        index: 1 }];


      // 最大值
      var max = series.map(function (v) {
        return Math.ceil(Math.max.apply(Math, _toConsumableArray(v.data)) / 5) * 5;
      });

      // content数据
      var allDealTrends = {
        allBandNum: obj.allDealTrends[0].allBandNum || 0,
        allDealNum: obj.allDealTrends[0].allDealNum || 0,
        allCommissionNum: obj.allDealTrends[0].allCommissionNum || 0

        //日期
      };var categories;
      if (obj.result[0].date.length > 7) {
        categories = obj.result.map(function (v) {
          return v.date.slice(5);
        });
      } else {
        categories = obj.result.map(function (v) {
          return "".concat(new Date(v.date).getFullYear(), "-").concat(new Date(v.date).getMonth() + 1);
        });
      }

      return {
        allDealTrends: allDealTrends, series: series, max: max, categories: categories };

    } else {
      return _defineProperty({
        allDealTrends: { allDealAmount: 0.00, allDealAvg: 0.00, allDealNum: 0.00 },
        categories: [],
        max: [10, 10],
        series: [{
          addPoint: true,
          color: "#f95742",
          data: [],
          legendShape: "circle",
          name: "交易金额",
          pointShape: "circle",
          type: "line",
          index: 0 },

        {
          addPoint: true,
          color: "#0586ff",
          data: [],
          legendShape: "circle",
          name: "交易套数",
          pointShape: "circle",
          type: "line",
          index: 1 }] }, "categories",

      ['']);

    }
  },

  //客户转化率
  custStatisticInfo: function custStatisticInfo(obj) {
    if (obj != undefined) {
      var bandRate = {
        series: [{ name: '带看率', data: obj.bandRate || 0, color: '#0084ff' }],
        title: {
          name: '带看数(组)',
          value: obj.bandCount || 0 } };



      var signRate = {
        series: [{ name: '签约率', data: obj.signRate || 0, color: '#0084ff' }],
        title: {
          name: '成交数(组)',
          value: obj.signCount || 0 } };



      if (bandRate.series[0].data === 0) {
        bandRate.series[0].color = '#e9e9e9';
      }
      if (signRate.series[0].data === 0) {
        signRate.series[0].color = '#e9e9e9';
      }
      return {
        bandRate: bandRate, signRate: signRate };

    } else {
      return {
        bandRate: { series: [{ name: '带看率', data: 0, color: '#e9e9e9' }], title: { name: '带看数(组)', value: 0 } },
        signRate: { series: [{ name: '签约率', data: 0, color: '#e9e9e9' }], title: { name: '成交数(组)', value: 0 } } };

    }
  },

  // 户型销售对比
  changeSellProportionLayout: function changeSellProportionLayout(obj) {
    if (obj != undefined) {
      var color = ['#0084ff', '#13c2c2', '#ffb109', '#9083f8', '#ff625b'];
      var overArr = null;
      var legend = [];
      // 数据 
      var series = obj.slice(0, 4).map(function (v) {
        return {
          name: v.name,
          data: v.sellNum };

      });

      // 数据
      if (obj.length > 5) {
        var sum = 0;
        overArr = obj.slice(4);
        for (var i = 0; i < overArr.length; i++) {
          sum += overArr[i].sellNum;
        }
        series.push({ name: '其他', data: sum });
      }
      for (var _i = 0; _i < series.length; _i++) {
        series[_i].color = color[_i];
      }
      if (series[0] == undefined)
      series = [{ name: '暂无数据', data: 1, color: '#e9e9e9' }];

      //title
      var title = 0;
      for (var _i2 = 0; _i2 < series.length; _i2++) {
        title += series[_i2].data;
      }
      title = "".concat(title);
      if (series[0].name == '暂无数据') {
        title = '0';
      }
      // 图例
      legend = obj.slice(0, 4);
      var allNum = 0;
      var allPer = 0;

      if (obj.length > 5) {
        var overLegend = obj.slice(4);
        for (var _i3 = 0; _i3 < overLegend.length; _i3++) {
          allNum += overLegend[_i3].sellNum;
          allPer += overLegend[_i3].percent;
        }
        legend.push({ name: '其他', sellNum: allNum, percent: allPer });
      }

      for (var _i4 = 0; _i4 < legend.length; _i4++) {
        legend[_i4].color = color[_i4];
        legend[_i4].percent = "".concat(Math.round(legend[_i4].percent * 100 * 1000) / 1000) + '%';
      }
      return { series: series, legend: legend, title: title };
    } else {
      return {
        series: [{ name: '暂无数据', data: [1], color: "#e9e9e9" }],
        legend: [{ color: "#0084ff", name: "暂无数据", percent: "0%", sellNum: "0" }],
        title: '暂无数据' };

    }
  } };exports.change_data_tools = change_data_tools;

/***/ }),

/***/ 7:
/*!*****************************************************!*\
  !*** D:/小黑项目/yx_uniapp/pages.json?{"type":"style"} ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = { "pages": { "pages/index/index": { "navigationBarTitleText": "", "navigationStyle": "custom" }, "pages/customIndex/customIndex": { "navigationBarTitleText": "", "navigationStyle": "custom" }, "pages/msgList/msgList": { "navigationBarTitleText": "", "navigationStyle": "custom" }, "pages/buildList/buildList": { "navigationBarTitleText": "", "navigationStyle": "custom" }, "pages/mine/mine": { "navigationBarTitleText": "", "navigationStyle": "custom" }, "pagesMsg/contacts/contacts": { "navigationBarTitleText": "通讯录", "bounce": "none" }, "pagesMsg/msgDetail/msgDetail": { "navigationBarTitleText": "", "navigationStyle": "custom", "backgroundColor": "#f8f8f8" }, "pagesMsg/remindMsg/remindMsg": { "navigationBarTitleText": "动态提醒", "bounce": "none" }, "pagesMsg/systemMsg/systemMsg": { "navigationBarTitleText": "系统消息", "bounce": "none" }, "pagesSet/aboutUs/aboutUs": { "navigationBarTitleText": "关于我们" }, "pagesSet/forgetPassword/forgetPassword": { "navigationBarTitleText": "", "navigationBarBackgroundColor": "#ffffff" }, "pagesSet/resetPassword/resetPassword": { "navigationBarTitleText": "", "navigationBarBackgroundColor": "#ffffff" }, "pagesSet/changePassword/changePassword": { "navigationBarTitleText": "修改密码" }, "pagesSet/login/login": { "navigationBarTitleText": "", "navigationStyle": "custom", "bounce": "none" }, "pagesSet/personalCenter/personalCenter": { "navigationBarTitleText": "个人中心" }, "pagesSet/setPage/setPage": { "navigationBarTitleText": "设置" }, "pagesSet/setPage/setPageAdviser": { "navigationBarTitleText": "设置" }, "pagesSet/changePayPassword/changePayPassword": { "navigationBarTitleText": "" }, "pagesTool/map/nearInfoMap": { "navigationBarTitleText": "位置及周边" }, "pagesTool/chooseDate/chooseWeek": { "navigationBarTitleText": "选择时间" }, "pagesTool/chooseDate/chooseYear": { "navigationBarTitleText": "选择时间" }, "pagesTool/chooseDate/chooseDay": { "navigationBarTitleText": "选择时间" }, "pagesTool/livePlayer/livePlayer": { "navigationBarTitleText": "直播拉流" }, "pagesStatistics/analysis/analysis": { "navigationBarTitleText": "" }, "pagesStaff/staffList/staffList": { "navigationBarTitleText": "员工管理", "backgroundColor": "#f8f8f8", "backgroundTextStyle": "light" }, "pagesStaff/addStaff/addStaff": { "navigationBarTitleText": "添加员工" }, "pagesStaff/staffCustomerList/staffCustomerList": { "navigationBarTitleText": "" }, "pagesStaff/customerTransfer/chooseCustomer": { "navigationBarTitleText": "选择客户" }, "pagesStaff/customerTransfer/chooseStaff": { "navigationBarTitleText": "选择员工" }, "pagesCustomer/customerList/customerList": { "navigationBarTitleText": "", "enablePullDownRefresh": true }, "pagesCustomer/newCustomer/newCustomer": { "enablePullDownRefresh": true, "navigationBarTitleText": "新客户" }, "pagesCustomer/arriveVisit/arriveVisit": { "navigationBarTitleText": "已到访", "enablePullDownRefresh": true }, "pagesCustomer/waitCommission/waitCommission": { "enablePullDownRefresh": true, "navigationBarTitleText": "待结佣" }, "pagesCustomer/customerDetail/customerDetail": { "navigationBarBackgroundColor": "#FFFFFF", "navigationBarTitleText": "" }, "pagesCustomer/archiveManage/archiveManage": { "navigationBarBackgroundColor": "#ffffff", "navigationBarTitleText": "经纪人管理", "enablePullDownRefresh": true }, "pagesCustomer/writeFollow/writeFollow": { "navigationBarTitleText": "添加跟进" }, "pagesCustomer/customerRegistration/customerRegistration": { "navigationBarTitleText": "直客登记" }, "pagesCustomer/upDaiKanQueRenShu/upDaiKanQueRenShu": { "navigationBarTitleText": "带看确认书" }, "pagesCustomer/archiveCustomerList/archiveCustomerList": { "enablePullDownRefresh": true, "navigationBarTitleText": "" }, "pagesCustomer/subscriptionInfo/subscriptionInfo": { "navigationBarTitleText": "认购信息" }, "pagesCustomer/signInfo/signInfo": { "navigationBarTitleText": "签约信息" }, "pagesCustomer/applyRenGou/applyRenGou": { "navigationBarTitleText": "认购信息" }, "pagesBuild/addEditBuilding/addEditBuildingFirst": { "navigationBarTitleText": "" }, "pagesBuild/addEditBuilding/addEditBuildingSecond": { "navigationBarTitleText": "", "disableScroll": true }, "pagesBuild/buildDetail/buildDetail": { "navigationBarTitleText": "" }, "pagesBuild/buildDetail/information": { "navigationBarTitleText": "楼盘详情" }, "pagesBuild/buildDetail/pageRules": { "navigationBarTitleText": "佣金方案" }, "pagesBuild/buildDetail/vrPage": { "navigationBarTitleText": "全景展示" }, "pagesBuild/buildDetail/photoList": { "navigationBarTitleText": "楼盘相册" }, "pagesBuild/buildDetail/photoListSwiper": { "navigationBarTitleText": "", "navigationStyle": "custom" }, "pagesBuild/buildDetail/distributionDynamic": { "navigationBarTitleText": "楼盘动态" }, "pagesBuild/buildDetail/distributionDynamicDetail": { "navigationBarTitleText": "楼盘动态详情" }, "pagesBuild/buildDetail/releaseTheStory": { "navigationBarTitleText": "发布动态", "disableScroll": true }, "pagesBuild/buildDetail/skillPointList": { "navigationBarTitleText": "" }, "pagesBuild/buildDetail/skillPointDetail": { "navigationBarTitleText": "" }, "pagesBuild/buildDetail/distributionType": { "navigationBarTitleText": "分销户型" }, "pagesBuild/buildDetail/addEditDistributionType": { "navigationBarTitleText": "", "disableScroll": true }, "pagesBuild/buildDetail/rulesCooperationEdit": { "navigationBarTitleText": "编辑合作规则" }, "pagesBuild/buildDetail/commissionRuleEdit": { "navigationBarTitleText": "编辑佣金规则", "disableScroll": true }, "pagesBuild/buildDetail/precautionEdit": { "navigationBarTitleText": "编辑注意事项" }, "pagesStatistics/customer_analysis/customer_analysis": { "navigationBarTitleText": "" } }, "globalStyle": { "navigationBarTextStyle": "black", "navigationBarTitleText": "", "navigationBarBackgroundColor": "#FFFFFF", "backgroundColor": "#FFFFFF" } };exports.default = _default;

/***/ }),

/***/ 746:
/*!*********************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/Permission.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.Permission = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var

Permission = /*#__PURE__*/function () {

  function Permission() {_classCallCheck(this, Permission);_defineProperty(this, "isIos", false);
    if (uni.getSystemInfoSync().platform === "ios") {
      this.isIos = true;
    }
  }

  // 开启设置权限页面
  _createClass(Permission, [{ key: "openSet", value: function openSet() {
      if (this.isIos) {
        var UIApplication = plus.ios.import("UIApplication");
        var application2 = UIApplication.sharedApplication();
        var NSURL2 = plus.ios.import("NSURL");
        var setting2 = NSURL2.URLWithString("app-settings:");
        application2.openURL(setting2);
        plus.ios.deleteObject(setting2);
        plus.ios.deleteObject(NSURL2);
        plus.ios.deleteObject(application2);
        return;
      }

      var Intent = plus.android.importClass("android.content.Intent");
      var Settings = plus.android.importClass("android.provider.Settings");
      var Uri = plus.android.importClass("android.net.Uri");
      var mainActivity = plus.android.runtimeMainActivity();
      var intent = new Intent();
      intent.setAction(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
      var uri = Uri.fromParts("package", mainActivity.getPackageName(), null);
      intent.setData(uri);
      mainActivity.startActivity(intent);
    }

    // 判断是否开启相机权限 1: 永久拒绝 2：临时拒绝 3：同意
  }, { key: "photoPermission", value: function photoPermission() {var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

      callback(3);






































    }

    // 判断是否开启语音权限 1: 永久拒绝 2：临时拒绝 3：同意
  }, { key: "voicePermission", value: function voicePermission() {var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

      callback(3);







































    }

    // 判断是否开启地理位置权限  1: 永久拒绝 2：临时拒绝 3：同意
  }, { key: "locationPermission", value: function locationPermission() {var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};
      if (this.isIos) {
        var cllocationManger = plus.ios.import("CLLocationManager");
        var _result = cllocationManger.locationServicesEnabled();
        console.log("系统定位开启:" + _result);
        plus.ios.deleteObject(cllocationManger);
        callback(_result ? 3 : 1);
        return;
      }

      var context = plus.android.importClass("android.content.Context");
      var locationManager = plus.android.importClass("android.location.LocationManager");
      var main = plus.android.runtimeMainActivity();
      var mainSvr = main.getSystemService(context.LOCATION_SERVICE);
      var result = mainSvr.isProviderEnabled(locationManager.GPS_PROVIDER);
      console.log("系统定位开启:" + result);
      callback(result ? 3 : 1);
    } }]);return Permission;}();exports.Permission = Permission;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 8:
/*!****************************************************!*\
  !*** D:/小黑项目/yx_uniapp/pages.json?{"type":"stat"} ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = { "appid": "__UNI__E7AD8A0" };exports.default = _default;

/***/ }),

/***/ 824:
/*!*********************************************************!*\
  !*** D:/小黑项目/yx_uniapp/components/ei-calendar/EDate.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _wrapNativeSuper(Class) {var _cache = typeof Map === "function" ? new Map() : undefined;_wrapNativeSuper = function _wrapNativeSuper(Class) {if (Class === null || !_isNativeFunction(Class)) return Class;if (typeof Class !== "function") {throw new TypeError("Super expression must either be null or a function");}if (typeof _cache !== "undefined") {if (_cache.has(Class)) return _cache.get(Class);_cache.set(Class, Wrapper);}function Wrapper() {return _construct(Class, arguments, _getPrototypeOf(this).constructor);}Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });return _setPrototypeOf(Wrapper, Class);};return _wrapNativeSuper(Class);}function isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}function _construct(Parent, args, Class) {if (isNativeReflectConstruct()) {_construct = Reflect.construct;} else {_construct = function _construct(Parent, args, Class) {var a = [null];a.push.apply(a, args);var Constructor = Function.bind.apply(Parent, a);var instance = new Constructor();if (Class) _setPrototypeOf(instance, Class.prototype);return instance;};}return _construct.apply(null, arguments);}function _isNativeFunction(fn) {return Function.toString.call(fn).indexOf("[native code]") !== -1;}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function replaceFormat(format) {
  if (!format) return format;
  if (format.match(/T/)) return format;
  return format.replace(/-/g, '/');
}

function Format(date) {var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY/MM/DD';
  if (!date) return null;

  if (typeof date !== 'object') {
    date = new EDate([date]);
  }
  var formatObj = {
    YYYY: date.getFullYear(),
    MM: date.getMonth() + 1,
    DD: date.getDate(),
    hh: date.getHours(),
    mm: date.getMinutes(),
    ss: date.getSeconds(),
    a: date.getDay() };

  return format.replace(/(YYYY|MM|DD|hh|mm|ss|a)+/g, function (result, key) {
    var value = formatObj[key];
    if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1];
    if (result.length > 0 && value < 10) {
      value = '0' + value;
    }
    return value || 0;
  });
}

// status 1 : 按钮切换 2 默认
function Modify(date, _ref) {var y = _ref.y,m = _ref.m,d = _ref.d;var status = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;
  if (!date) return;
  if (typeof date !== 'object') {
    // ios 时间转化的时候 2019/11 不得行 需要2019/11/01, 安卓会默认1号
    if (status === 1) {
      date = date + "/01";
    }
    date = new EDate([date]);
  }
  if (d) {
    date.setDate(date.getDate() + d);
  }
  if (m) {
    var _d = date.getDate();
    date.setMonth(date.getMonth() + m);
    if (date.getDate() < _d) date.setDate(0);
    console.log("--date-2-", date);

  }
  if (y) {
    var _m = date.getMonth();
    date.setFullYear(date.getFullYear() + y);
    if (_m < date.getMonth()) date.setDate(0);
    console.log("--date-3-", date);

  }
  return date;
}var

EDate = /*#__PURE__*/function (_Date) {_inherits(EDate, _Date);
  function EDate() {var _this;var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];var format = arguments.length > 1 ? arguments[1] : undefined;_classCallCheck(this, EDate); // 只保留一个参数
    format && (format = replaceFormat(format));
    if (params.length > 1) {
      if (format) {
        _this = _possibleConstructorReturn(this, _getPrototypeOf(EDate).call(this, Format(_construct(Date, _toConsumableArray(params)), format)));
      } else {var _getPrototypeOf2;
        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EDate)).call.apply(_getPrototypeOf2, [this].concat(_toConsumableArray(params))));
      }
      return _possibleConstructorReturn(_this);
    }
    var param = params[0];
    if (typeof param === 'string') {
      param = replaceFormat(param);
    }
    if (!format) {
      if (!param) {// 对undefined和null、0进行过滤
        _this = _possibleConstructorReturn(this, _getPrototypeOf(EDate).call(this));
      } else {
        _this = _possibleConstructorReturn(this, _getPrototypeOf(EDate).call(this, param));
      }
    } else {
      if (!param) {// 对undefined和null、0进行过滤
        param = Format(new Date(), format);
      } else {
        param = Format(new Date(param), format);
      }
      console.log("--super-param--", param);
      _this = _possibleConstructorReturn(this, _getPrototypeOf(EDate).call(this, param));
    }return _possibleConstructorReturn(_this);
  }_createClass(EDate, [{ key: "format", value: function format(

    formatStr) {
      return Format(this, formatStr);
    } }, { key: "modify", value: function modify(

    param) {
      return Modify(this, param);
    } }]);return EDate;}(_wrapNativeSuper(Date));exports.default = EDate;_defineProperty(EDate, "format",

Format);_defineProperty(EDate, "modify",

Modify);

/***/ }),

/***/ 839:
/*!*******************************************!*\
  !*** D:/小黑项目/yx_uniapp/utils/u-charts.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {/*
 * uCharts v1.9.3.20190922
 * uni-app平台高性能跨全端图表，支持H5、APP、小程序（微信/支付宝/百度/头条/QQ/360）
 * Copyright (c) 2019 QIUN秋云 https://www.ucharts.cn All rights reserved.
 * Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
 *
 * uCharts官方网站
 * https://www.uCharts.cn
 *
 * 开源地址:
 * https://gitee.com/uCharts/uCharts
 *
 * uni-app插件市场地址：
 * http://ext.dcloud.net.cn/plugin?id=271
 *
 */



var config = {
  yAxisWidth: 15,
  yAxisSplit: 5,
  xAxisHeight: 15,
  xAxisLineHeight: 15,
  legendHeight: 15,
  yAxisTitleWidth: 15,
  padding: [10, 10, 10, 10],
  pixelRatio: 1,
  rotate: false,
  columePadding: 3,
  fontSize: 13,
  //dataPointShape: ['diamond', 'circle', 'triangle', 'rect'],
  dataPointShape: ['circle', 'circle', 'circle', 'circle'],
  colors: ['#1890ff', '#2fc25b', '#facc14', '#f04864', '#8543e0', '#90ed7d'],
  pieChartLinePadding: 15,
  pieChartTextPadding: 5,
  xAxisTextPadding: 3,
  titleColor: '#333333',
  titleFontSize: 20,
  subtitleColor: '#999999',
  subtitleFontSize: 15,
  toolTipPadding: 3,
  toolTipBackground: '#000000',
  toolTipOpacity: 0.7,
  toolTipLineHeight: 20,
  radarLabelTextMargin: 15,
  gaugeLabelTextMargin: 15 };


var assign = function assign(target) {for (var _len2 = arguments.length, varArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {varArgs[_key2 - 1] = arguments[_key2];}
  if (target == null) {
    throw new TypeError('Cannot convert undefined or null to object');
  }
  if (!varArgs || varArgs.length <= 0) {
    return target;
  }
  // 深度合并对象
  function deepAssign(obj1, obj2) {
    for (var key in obj2) {
      obj1[key] = obj1[key] && obj1[key].toString() === "[object Object]" ?
      deepAssign(obj1[key], obj2[key]) : obj1[key] = obj2[key];
    }
    return obj1;
  }

  varArgs.forEach(function (val) {
    target = deepAssign(target, val);
  });
  return target;
};

var util = {
  toFixed: function toFixed(num, limit) {
    limit = limit || 2;
    if (this.isFloat(num)) {
      num = num.toFixed(limit);
    }
    return num;
  },
  isFloat: function isFloat(num) {
    return num % 1 !== 0;
  },
  approximatelyEqual: function approximatelyEqual(num1, num2) {
    return Math.abs(num1 - num2) < 1e-10;
  },
  isSameSign: function isSameSign(num1, num2) {
    return Math.abs(num1) === num1 && Math.abs(num2) === num2 || Math.abs(num1) !== num1 && Math.abs(num2) !== num2;
  },
  isSameXCoordinateArea: function isSameXCoordinateArea(p1, p2) {
    return this.isSameSign(p1.x, p2.x);
  },
  isCollision: function isCollision(obj1, obj2) {
    obj1.end = {};
    obj1.end.x = obj1.start.x + obj1.width;
    obj1.end.y = obj1.start.y - obj1.height;
    obj2.end = {};
    obj2.end.x = obj2.start.x + obj2.width;
    obj2.end.y = obj2.start.y - obj2.height;
    var flag = obj2.start.x > obj1.end.x || obj2.end.x < obj1.start.x || obj2.end.y > obj1.start.y || obj2.start.y < obj1.end.y;
    return !flag;
  } };


//兼容H5点击事件
function getH5Offset(e) {
  e.mp = {
    changedTouches: [] };

  e.mp.changedTouches.push({
    x: e.offsetX,
    y: e.offsetY });

  return e;
}

// hex 转 rgba
function hexToRgb(hexValue, opc) {
  var rgx = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
  var hex = hexValue.replace(rgx, function (m, r, g, b) {
    return r + r + g + g + b + b;
  });
  var rgb = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  var r = parseInt(rgb[1], 16);
  var g = parseInt(rgb[2], 16);
  var b = parseInt(rgb[3], 16);
  return 'rgba(' + r + ',' + g + ',' + b + ',' + opc + ')';
}

function findRange(num, type, limit) {
  if (isNaN(num)) {
    throw new Error('[uCharts] unvalid series data!');
  }
  limit = limit || 10;
  type = type ? type : 'upper';
  var multiple = 1;
  while (limit < 1) {
    limit *= 10;
    multiple *= 10;
  }
  if (type === 'upper') {
    num = Math.ceil(num * multiple);
  } else {
    num = Math.floor(num * multiple);
  }
  while (num % limit !== 0) {
    if (type === 'upper') {
      num++;
    } else {
      num--;
    }
  }
  return num / multiple;
}

function calCandleMA(dayArr, nameArr, colorArr, kdata) {
  var seriesTemp = [];
  for (var k = 0; k < dayArr.length; k++) {
    var seriesItem = {
      data: [],
      name: nameArr[k],
      color: colorArr[k] };

    for (var i = 0, len = kdata.length; i < len; i++) {
      if (i < dayArr[k]) {
        seriesItem.data.push(null);
        continue;
      }
      var sum = 0;
      for (var j = 0; j < dayArr[k]; j++) {
        sum += kdata[i - j][1];
      }
      seriesItem.data.push(+(sum / dayArr[k]).toFixed(3));
    }
    seriesTemp.push(seriesItem);
  }
  return seriesTemp;
}

function calValidDistance(self, distance, chartData, config, opts) {
  var dataChartAreaWidth = opts.width - opts.area[1] - opts.area[3];
  var dataChartWidth = chartData.eachSpacing * (opts.chartData.xAxisData.xAxisPoints.length - 1);
  var validDistance = distance;
  if (distance >= 0) {
    validDistance = 0;
    self.event.trigger('scrollLeft');
  } else if (Math.abs(distance) >= dataChartWidth - dataChartAreaWidth) {
    validDistance = dataChartAreaWidth - dataChartWidth;
    self.event.trigger('scrollRight');
  }
  return validDistance;
}

function isInAngleRange(angle, startAngle, endAngle) {
  function adjust(angle) {
    while (angle < 0) {
      angle += 2 * Math.PI;
    }
    while (angle > 2 * Math.PI) {
      angle -= 2 * Math.PI;
    }
    return angle;
  }
  angle = adjust(angle);
  startAngle = adjust(startAngle);
  endAngle = adjust(endAngle);
  if (startAngle > endAngle) {
    endAngle += 2 * Math.PI;
    if (angle < startAngle) {
      angle += 2 * Math.PI;
    }
  }
  return angle >= startAngle && angle <= endAngle;
}

function calRotateTranslate(x, y, h) {
  var xv = x;
  var yv = h - y;
  var transX = xv + (h - yv - xv) / Math.sqrt(2);
  transX *= -1;
  var transY = (h - yv) * (Math.sqrt(2) - 1) - (h - yv - xv) / Math.sqrt(2);
  return {
    transX: transX,
    transY: transY };

}

function createCurveControlPoints(points, i) {

  function isNotMiddlePoint(points, i) {
    if (points[i - 1] && points[i + 1]) {
      return points[i].y >= Math.max(points[i - 1].y, points[i + 1].y) || points[i].y <= Math.min(points[i - 1].y, points[i + 1].y);
    } else {
      return false;
    }
  }
  function isNotMiddlePointX(points, i) {
    if (points[i - 1] && points[i + 1]) {
      return points[i].x >= Math.max(points[i - 1].x, points[i + 1].x) || points[i].x <= Math.min(points[i - 1].x, points[i + 1].x);
    } else {
      return false;
    }
  }
  var a = 0.2;
  var b = 0.2;
  var pAx = null;
  var pAy = null;
  var pBx = null;
  var pBy = null;
  if (i < 1) {
    pAx = points[0].x + (points[1].x - points[0].x) * a;
    pAy = points[0].y + (points[1].y - points[0].y) * a;
  } else {
    pAx = points[i].x + (points[i + 1].x - points[i - 1].x) * a;
    pAy = points[i].y + (points[i + 1].y - points[i - 1].y) * a;
  }

  if (i > points.length - 3) {
    var last = points.length - 1;
    pBx = points[last].x - (points[last].x - points[last - 1].x) * b;
    pBy = points[last].y - (points[last].y - points[last - 1].y) * b;
  } else {
    pBx = points[i + 1].x - (points[i + 2].x - points[i].x) * b;
    pBy = points[i + 1].y - (points[i + 2].y - points[i].y) * b;
  }
  if (isNotMiddlePoint(points, i + 1)) {
    pBy = points[i + 1].y;
  }
  if (isNotMiddlePoint(points, i)) {
    pAy = points[i].y;
  }
  if (isNotMiddlePointX(points, i + 1)) {
    pBx = points[i + 1].x;
  }
  if (isNotMiddlePointX(points, i)) {
    pAx = points[i].x;
  }
  if (pAy >= Math.max(points[i].y, points[i + 1].y) || pAy <= Math.min(points[i].y, points[i + 1].y)) {
    pAy = points[i].y;
  }
  if (pBy >= Math.max(points[i].y, points[i + 1].y) || pBy <= Math.min(points[i].y, points[i + 1].y)) {
    pBy = points[i + 1].y;
  }
  if (pAx >= Math.max(points[i].x, points[i + 1].x) || pAx <= Math.min(points[i].x, points[i + 1].x)) {
    pAx = points[i].x;
  }
  if (pBx >= Math.max(points[i].x, points[i + 1].x) || pBx <= Math.min(points[i].x, points[i + 1].x)) {
    pBx = points[i + 1].x;
  }
  return {
    ctrA: {
      x: pAx,
      y: pAy },

    ctrB: {
      x: pBx,
      y: pBy } };


}

function convertCoordinateOrigin(x, y, center) {
  return {
    x: center.x + x,
    y: center.y - y };

}

function avoidCollision(obj, target) {
  if (target) {
    // is collision test
    while (util.isCollision(obj, target)) {
      if (obj.start.x > 0) {
        obj.start.y--;
      } else if (obj.start.x < 0) {
        obj.start.y++;
      } else {
        if (obj.start.y > 0) {
          obj.start.y++;
        } else {
          obj.start.y--;
        }
      }
    }
  }
  return obj;
}

function fillSeries(series, opts, config) {
  var index = 0;
  return series.map(function (item) {
    if (!item.color) {
      item.color = config.colors[index];
      index = (index + 1) % config.colors.length;
    }
    if (!item.index) {
      item.index = 0;
    }
    if (!item.type) {
      item.type = opts.type;
    }
    if (typeof item.show == "undefined") {
      item.show = true;
    }
    if (!item.type) {
      item.type = opts.type;
    }
    if (!item.pointShape) {
      item.pointShape = "circle";
    }
    if (!item.legendShape) {
      switch (item.type) {
        case 'line':
          item.legendShape = "line";
          break;
        case 'column':
          item.legendShape = "rect";
          break;
        case 'area':
          item.legendShape = "triangle";
          break;
        default:
          item.legendShape = "circle";}

    }
    return item;
  });
}

function getDataRange(minData, maxData) {
  var limit = 0;
  var range = maxData - minData;
  if (range >= 10000) {
    limit = 1000;
  } else if (range >= 1000) {
    limit = 100;
  } else if (range >= 100) {
    limit = 10;
  } else if (range >= 10) {
    limit = 5;
  } else if (range >= 1) {
    limit = 1;
  } else if (range >= 0.1) {
    limit = 0.1;
  } else if (range >= 0.01) {
    limit = 0.01;
  } else if (range >= 0.001) {
    limit = 0.001;
  } else if (range >= 0.0001) {
    limit = 0.0001;
  } else if (range >= 0.00001) {
    limit = 0.00001;
  } else {
    limit = 0.000001;
  }
  return {
    minRange: findRange(minData, 'lower', limit),
    maxRange: findRange(maxData, 'upper', limit) };

}

function measureText(text) {
  var fontSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.fontSize;
  text = String(text);
  var text = text.split('');
  var width = 0;
  for (var i = 0; i < text.length; i++) {
    var item = text[i];
    if (/[a-zA-Z]/.test(item)) {
      width += 7;
    } else if (/[0-9]/.test(item)) {
      width += 5.5;
    } else if (/\./.test(item)) {
      width += 2.7;
    } else if (/-/.test(item)) {
      width += 3.25;
    } else if (/[\u4e00-\u9fa5]/.test(item)) {
      width += 10;
    } else if (/\(|\)/.test(item)) {
      width += 3.73;
    } else if (/\s/.test(item)) {
      width += 2.5;
    } else if (/%/.test(item)) {
      width += 8;
    } else {
      width += 10;
    }
  }
  return width * fontSize / 10;
}

function dataCombine(series) {
  return series.reduce(function (a, b) {
    return (a.data ? a.data : a).concat(b.data);
  }, []);
}

function dataCombineStack(series, len) {
  var sum = new Array(len);
  for (var j = 0; j < sum.length; j++) {
    sum[j] = 0;
  }
  for (var i = 0; i < series.length; i++) {
    for (var j = 0; j < sum.length; j++) {
      sum[j] += series[i].data[j];
    }
  }
  return series.reduce(function (a, b) {
    return (a.data ? a.data : a).concat(b.data).concat(sum);
  }, []);
}

function getTouches(touches, opts, e) {
  var x, y;
  if (touches.clientX) {
    if (opts.rotate) {
      y = opts.height - touches.clientX * opts.pixelRatio;
      x = (touches.pageY - e.currentTarget.offsetTop - opts.height / opts.pixelRatio / 2 * (opts.pixelRatio - 1)) *
      opts.pixelRatio;
    } else {
      x = touches.clientX * opts.pixelRatio;
      y = (touches.pageY - e.currentTarget.offsetTop - opts.height / opts.pixelRatio / 2 * (opts.pixelRatio - 1)) *
      opts.pixelRatio;
    }
  } else {
    if (opts.rotate) {
      y = opts.height - touches.x * opts.pixelRatio;
      x = touches.y * opts.pixelRatio;
    } else {
      x = touches.x * opts.pixelRatio;
      y = touches.y * opts.pixelRatio;
    }
  }
  return {
    x: x,
    y: y };

}

function getSeriesDataItem(series, index) {
  var data = [];
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    if (item.data[index] !== null && typeof item.data[index] !== 'undefined' && item.show) {
      var seriesItem = {};
      seriesItem.color = item.color;
      seriesItem.type = item.type;
      seriesItem.style = item.style;
      seriesItem.pointShape = item.pointShape;
      seriesItem.disableLegend = item.disableLegend;
      seriesItem.name = item.name;
      seriesItem.show = item.show;
      seriesItem.data = item.format ? item.format(item.data[index]) : item.data[index];
      data.push(seriesItem);
    }
  }
  return data;
}

function getMaxTextListLength(list) {
  var lengthList = list.map(function (item) {
    return measureText(item);
  });
  return Math.max.apply(null, lengthList);
}

function getRadarCoordinateSeries(length) {
  var eachAngle = 2 * Math.PI / length;
  var CoordinateSeries = [];
  for (var i = 0; i < length; i++) {
    CoordinateSeries.push(eachAngle * i);
  }

  return CoordinateSeries.map(function (item) {
    return -1 * item + Math.PI / 2;
  });
}

function getToolTipData(seriesData, calPoints, index, categories) {
  var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

  var textList = seriesData.map(function (item) {
    var titleText = [];
    if (categories) {
      titleText = categories;
    } else {
      titleText = item.data;
    }
    return {
      text: option.format ? option.format(item, titleText[index]) : item.name + ': ' + item.data,
      color: item.color };

  });
  var validCalPoints = [];
  var offset = {
    x: 0,
    y: 0 };

  for (var i = 0; i < calPoints.length; i++) {
    var points = calPoints[i];
    if (typeof points[index] !== 'undefined' && points[index] !== null) {
      validCalPoints.push(points[index]);
    }
  }
  for (var _i = 0; _i < validCalPoints.length; _i++) {
    var item = validCalPoints[_i];
    offset.x = Math.round(item.x);
    offset.y += item.y;
  }
  offset.y /= validCalPoints.length;
  return {
    textList: textList,
    offset: offset };

}

function getMixToolTipData(seriesData, calPoints, index, categories) {
  var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  var textList = seriesData.map(function (item) {
    return {
      text: option.format ? option.format(item, categories[index]) : item.name + ': ' + item.data,
      color: item.color,
      disableLegend: item.disableLegend ? true : false };

  });
  textList = textList.filter(function (item) {
    if (item.disableLegend !== true) {
      return item;
    }
  });
  var validCalPoints = [];
  var offset = {
    x: 0,
    y: 0 };

  for (var i = 0; i < calPoints.length; i++) {
    var points = calPoints[i];
    if (typeof points[index] !== 'undefined' && points[index] !== null) {
      validCalPoints.push(points[index]);
    }
  }
  for (var _i2 = 0; _i2 < validCalPoints.length; _i2++) {
    var item = validCalPoints[_i2];
    offset.x = Math.round(item.x);
    offset.y += item.y;
  }
  offset.y /= validCalPoints.length;
  return {
    textList: textList,
    offset: offset };

}

function getCandleToolTipData(series, seriesData, calPoints, index, categories, extra) {
  var option = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};
  var upColor = extra.color.upFill;
  var downColor = extra.color.downFill;
  //颜色顺序为开盘，收盘，最低，最高
  var color = [upColor, upColor, downColor, upColor];
  var textList = [];
  var text0 = {
    text: categories[index],
    color: null };

  textList.push(text0);
  seriesData.map(function (item) {
    if (index == 0 && item.data[1] - item.data[0] < 0) {
      color[1] = downColor;
    } else {
      if (item.data[0] < series[index - 1][1]) {
        color[0] = downColor;
      }
      if (item.data[1] < item.data[0]) {
        color[1] = downColor;
      }
      if (item.data[2] > series[index - 1][1]) {
        color[2] = upColor;
      }
      if (item.data[3] < series[index - 1][1]) {
        color[3] = downColor;
      }
    }
    var text1 = {
      text: '开盘：' + item.data[0],
      color: color[0] };

    var text2 = {
      text: '收盘：' + item.data[1],
      color: color[1] };

    var text3 = {
      text: '最低：' + item.data[2],
      color: color[2] };

    var text4 = {
      text: '最高：' + item.data[3],
      color: color[3] };

    textList.push(text1, text2, text3, text4);
  });
  var validCalPoints = [];
  var offset = {
    x: 0,
    y: 0 };

  for (var i = 0; i < calPoints.length; i++) {
    var points = calPoints[i];
    if (typeof points[index] !== 'undefined' && points[index] !== null) {
      validCalPoints.push(points[index]);
    }
  }
  offset.x = Math.round(validCalPoints[0][0].x);
  return {
    textList: textList,
    offset: offset };

}

function filterSeries(series) {
  var tempSeries = [];
  for (var i = 0; i < series.length; i++) {
    if (series[i].show == true) {
      tempSeries.push(series[i]);
    }
  }
  return tempSeries;
}

function findCurrentIndex(currentPoints, calPoints, opts, config) {
  var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
  var currentIndex = -1;
  var spacing = opts.chartData.eachSpacing / 2;
  var xAxisPoints = [];
  if (calPoints.length > 0) {
    for (var i = 0; i < calPoints[0].length; i++) {
      xAxisPoints.push(calPoints[0][i].x);
    }
    if ((opts.type == 'line' || opts.type == 'area') && opts.xAxis.boundaryGap == 'justify') {
      spacing = opts.chartData.eachSpacing / 2;
    }
    if (!opts.categories) {
      spacing = 0;
    }
    if (isInExactChartArea(currentPoints, opts, config)) {
      xAxisPoints.forEach(function (item, index) {
        if (currentPoints.x + offset + spacing > item) {
          currentIndex = index;
        }
      });
    }
  }
  return currentIndex;
}

function findLegendIndex(currentPoints, legendData, opts) {
  var currentIndex = -1;
  if (isInExactLegendArea(currentPoints, legendData.area)) {
    var points = legendData.points;
    var index = -1;
    for (var i = 0, len = points.length; i < len; i++) {
      var item = points[i];
      for (var j = 0; j < item.length; j++) {
        index += 1;
        var area = item[j]['area'];
        if (currentPoints.x > area[0] && currentPoints.x < area[2] && currentPoints.y > area[1] && currentPoints.y < area[3]) {
          currentIndex = index;
          break;
        }
      }
    }
    return currentIndex;
  }
  return currentIndex;
}

function isInExactLegendArea(currentPoints, area) {
  return currentPoints.x > area.start.x && currentPoints.x < area.end.x && currentPoints.y > area.start.y &&
  currentPoints.y < area.end.y;
}

function isInExactChartArea(currentPoints, opts, config) {
  return currentPoints.x <= opts.width - opts.area[1] + 10 && currentPoints.x >= opts.area[3] - 10 && currentPoints.y >= opts.area[0] && currentPoints.y <= opts.height - opts.area[2];
}

function findRadarChartCurrentIndex(currentPoints, radarData, count) {
  var eachAngleArea = 2 * Math.PI / count;
  var currentIndex = -1;
  if (isInExactPieChartArea(currentPoints, radarData.center, radarData.radius)) {
    var fixAngle = function fixAngle(angle) {
      if (angle < 0) {
        angle += 2 * Math.PI;
      }
      if (angle > 2 * Math.PI) {
        angle -= 2 * Math.PI;
      }
      return angle;
    };

    var angle = Math.atan2(radarData.center.y - currentPoints.y, currentPoints.x - radarData.center.x);
    angle = -1 * angle;
    if (angle < 0) {
      angle += 2 * Math.PI;
    }

    var angleList = radarData.angleList.map(function (item) {
      item = fixAngle(-1 * item);

      return item;
    });

    angleList.forEach(function (item, index) {
      var rangeStart = fixAngle(item - eachAngleArea / 2);
      var rangeEnd = fixAngle(item + eachAngleArea / 2);
      if (rangeEnd < rangeStart) {
        rangeEnd += 2 * Math.PI;
      }
      if (angle >= rangeStart && angle <= rangeEnd || angle + 2 * Math.PI >= rangeStart && angle + 2 * Math.PI <=
      rangeEnd) {
        currentIndex = index;
      }
    });
  }

  return currentIndex;
}

function findFunnelChartCurrentIndex(currentPoints, funnelData) {
  var currentIndex = -1;
  for (var i = 0, len = funnelData.series.length; i < len; i++) {
    var item = funnelData.series[i];
    if (currentPoints.x > item.funnelArea[0] && currentPoints.x < item.funnelArea[2] && currentPoints.y > item.funnelArea[1] && currentPoints.y < item.funnelArea[3]) {
      currentIndex = i;
      break;
    }
  }
  return currentIndex;
}

function findWordChartCurrentIndex(currentPoints, wordData) {
  var currentIndex = -1;
  for (var i = 0, len = wordData.length; i < len; i++) {
    var item = wordData[i];
    if (currentPoints.x > item.area[0] && currentPoints.x < item.area[2] && currentPoints.y > item.area[1] && currentPoints.y < item.area[3]) {
      currentIndex = i;
      break;
    }
  }
  return currentIndex;
}

function findMapChartCurrentIndex(currentPoints, opts) {
  var currentIndex = -1;
  var cData = opts.chartData.mapData;
  var data = opts.series;
  var tmp = pointToCoordinate(currentPoints.y, currentPoints.x, cData.bounds, cData.scale, cData.xoffset, cData.yoffset);
  var poi = [tmp.x, tmp.y];
  for (var i = 0, len = data.length; i < len; i++) {
    var item = data[i].geometry.coordinates;
    if (isPoiWithinPoly(poi, item)) {
      currentIndex = i;
      break;
    }
  }
  return currentIndex;
}

function findPieChartCurrentIndex(currentPoints, pieData) {
  var currentIndex = -1;
  if (isInExactPieChartArea(currentPoints, pieData.center, pieData.radius)) {
    var angle = Math.atan2(pieData.center.y - currentPoints.y, currentPoints.x - pieData.center.x);
    angle = -angle;
    for (var i = 0, len = pieData.series.length; i < len; i++) {
      var item = pieData.series[i];
      if (isInAngleRange(angle, item._start_, item._start_ + item._proportion_ * 2 * Math.PI)) {
        currentIndex = i;
        break;
      }
    }
  }

  return currentIndex;
}

function isInExactPieChartArea(currentPoints, center, radius) {
  return Math.pow(currentPoints.x - center.x, 2) + Math.pow(currentPoints.y - center.y, 2) <= Math.pow(radius, 2);
}

function splitPoints(points) {
  var newPoints = [];
  var items = [];
  points.forEach(function (item, index) {
    if (item !== null) {
      items.push(item);
    } else {
      if (items.length) {
        newPoints.push(items);
      }
      items = [];
    }
  });
  if (items.length) {
    newPoints.push(items);
  }

  return newPoints;
}

function calLegendData(series, opts, config, chartData) {
  var legendData = {
    area: {
      start: {
        x: 0,
        y: 0 },

      end: {
        x: 0,
        y: 0 },

      width: 0,
      height: 0,
      wholeWidth: 0,
      wholeHeight: 0 },

    points: [],
    widthArr: [],
    heightArr: [] };

  if (opts.legend.show === false) {
    chartData.legendData = legendData;
    return legendData;
  }

  var padding = opts.legend.padding;
  var margin = opts.legend.margin;
  var fontSize = opts.legend.fontSize;
  var shapeWidth = 15 * opts.pixelRatio;
  var shapeRight = 5 * opts.pixelRatio;
  var lineHeight = Math.max(opts.legend.lineHeight * opts.pixelRatio, fontSize);
  if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {
    var legendList = [];
    var widthCount = 0;
    var widthCountArr = [];
    var currentRow = [];
    for (var i = 0; i < series.length; i++) {
      var item = series[i];
      var itemWidth = shapeWidth + shapeRight + measureText(item.name || 'undefined', fontSize) + opts.legend.itemGap;
      if (widthCount + itemWidth > opts.width - opts.padding[1] - opts.padding[3]) {
        legendList.push(currentRow);
        widthCountArr.push(widthCount - opts.legend.itemGap);
        widthCount = itemWidth;
        currentRow = [item];
      } else {
        widthCount += itemWidth;
        currentRow.push(item);
      }
    }
    if (currentRow.length) {
      legendList.push(currentRow);
      widthCountArr.push(widthCount - opts.legend.itemGap);
      legendData.widthArr = widthCountArr;
      var legendWidth = Math.max.apply(null, widthCountArr);
      switch (opts.legend.float) {
        case 'left':
          legendData.area.start.x = opts.padding[3];
          legendData.area.end.x = opts.padding[3] + 2 * padding;
          break;
        case 'right':
          legendData.area.start.x = opts.width - opts.padding[1] - legendWidth - 2 * padding;
          legendData.area.end.x = opts.width - opts.padding[1];
          break;
        default:
          legendData.area.start.x = (opts.width - legendWidth) / 2 - padding;
          legendData.area.end.x = (opts.width + legendWidth) / 2 + padding;}

      legendData.area.width = legendWidth + 2 * padding;
      legendData.area.wholeWidth = legendWidth + 2 * padding;
      legendData.area.height = legendList.length * lineHeight + 2 * padding;
      legendData.area.wholeHeight = legendList.length * lineHeight + 2 * padding + 2 * margin;
      legendData.points = legendList;
    }
  } else {
    var len = series.length;
    var maxHeight = opts.height - opts.padding[0] - opts.padding[2] - 2 * margin - 2 * padding;
    var maxLength = Math.min(Math.floor(maxHeight / lineHeight), len);
    legendData.area.height = maxLength * lineHeight + padding * 2;
    legendData.area.wholeHeight = maxLength * lineHeight + padding * 2;
    switch (opts.legend.float) {
      case 'top':
        legendData.area.start.y = opts.padding[0] + margin;
        legendData.area.end.y = opts.padding[0] + margin + legendData.area.height;
        break;
      case 'bottom':
        legendData.area.start.y = opts.height - opts.padding[2] - margin - legendData.area.height;
        legendData.area.end.y = opts.height - opts.padding[2] - margin;
        break;
      default:
        legendData.area.start.y = (opts.height - legendData.area.height) / 2;
        legendData.area.end.y = (opts.height + legendData.area.height) / 2;}

    var lineNum = len % maxLength === 0 ? len / maxLength : Math.floor(len / maxLength + 1);
    var _currentRow = [];
    for (var _i3 = 0; _i3 < lineNum; _i3++) {
      var temp = series.slice(_i3 * maxLength, _i3 * maxLength + maxLength);
      _currentRow.push(temp);
    }

    legendData.points = _currentRow;

    if (_currentRow.length) {
      for (var _i4 = 0; _i4 < _currentRow.length; _i4++) {
        var _item = _currentRow[_i4];
        var maxWidth = 0;
        for (var j = 0; j < _item.length; j++) {
          var _itemWidth = shapeWidth + shapeRight + measureText(_item[j].name || 'undefined', fontSize) + opts.legend.itemGap;
          if (_itemWidth > maxWidth) {
            maxWidth = _itemWidth;
          }
        }
        legendData.widthArr.push(maxWidth);
        legendData.heightArr.push(_item.length * lineHeight + padding * 2);
      }
      var _legendWidth = 0;
      for (var _i5 = 0; _i5 < legendData.widthArr.length; _i5++) {
        _legendWidth += legendData.widthArr[_i5];
      }
      legendData.area.width = _legendWidth - opts.legend.itemGap + 2 * padding;
      legendData.area.wholeWidth = legendData.area.width + padding;
    }
  }

  switch (opts.legend.position) {
    case 'top':
      legendData.area.start.y = opts.padding[0] + margin;
      legendData.area.end.y = opts.padding[0] + margin + legendData.area.height;
      break;
    case 'bottom':
      legendData.area.start.y = opts.height - opts.padding[2] - legendData.area.height - margin;
      legendData.area.end.y = opts.height - opts.padding[2] - margin;
      break;
    case 'left':
      legendData.area.start.x = opts.padding[3];
      legendData.area.end.x = opts.padding[3] + legendData.area.width;
      break;
    case 'right':
      legendData.area.start.x = opts.width - opts.padding[1] - legendData.area.width;
      legendData.area.end.x = opts.width - opts.padding[1];
      break;}

  chartData.legendData = legendData;
  return legendData;
}

function calCategoriesData(categories, opts, config, eachSpacing) {
  var result = {
    angle: 0,
    xAxisHeight: config.xAxisHeight };

  var categoriesTextLenth = categories.map(function (item) {
    return measureText(item, opts.xAxis.fontSize || config.fontSize);
  });
  var maxTextLength = Math.max.apply(this, categoriesTextLenth);

  if (opts.xAxis.rotateLabel == true && maxTextLength + 2 * config.xAxisTextPadding > eachSpacing) {
    result.angle = 45 * Math.PI / 180;
    result.xAxisHeight = 2 * config.xAxisTextPadding + maxTextLength * Math.sin(result.angle);
  }
  return result;
}

function getXAxisTextList(series, opts, config) {
  var index = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;
  var data = dataCombine(series);
  var sorted = [];
  // remove null from data
  data = data.filter(function (item) {
    //return item !== null;
    if (typeof item === 'object' && item !== null) {
      if (item.constructor == Array) {
        return item !== null;
      } else {
        return item.value !== null;
      }
    } else {
      return item !== null;
    }
  });
  data.map(function (item) {
    if (typeof item === 'object') {
      if (item.constructor == Array) {
        if (opts.type == 'candle') {
          item.map(function (subitem) {
            sorted.push(subitem);
          });
        } else {
          sorted.push(item[0]);
        }
      } else {
        sorted.push(item.value);
      }
    } else {
      sorted.push(item);
    }
  });

  var minData = 0;
  var maxData = 0;
  if (sorted.length > 0) {
    minData = Math.min.apply(this, sorted);
    maxData = Math.max.apply(this, sorted);
  }
  //为了兼容v1.9.0之前的项目
  if (index > -1) {
    if (typeof opts.xAxis.data[index].min === 'number') {
      minData = Math.min(opts.xAxis.data[index].min, minData);
    }
    if (typeof opts.xAxis.data[index].max === 'number') {
      maxData = Math.max(opts.xAxis.data[index].max, maxData);
    }
  } else {
    if (typeof opts.xAxis.min === 'number') {
      minData = Math.min(opts.xAxis.min, minData);
    }
    if (typeof opts.xAxis.max === 'number') {
      maxData = Math.max(opts.xAxis.max, maxData);
    }
  }


  if (minData === maxData) {
    var rangeSpan = maxData || 10;
    maxData += rangeSpan;
  }

  //var dataRange = getDataRange(minData, maxData);
  var minRange = minData;
  var maxRange = maxData;

  var range = [];
  var eachRange = (maxRange - minRange) / opts.xAxis.splitNumber;

  for (var i = 0; i <= opts.xAxis.splitNumber; i++) {
    range.push(minRange + eachRange * i);
  }
  return range;
}

function calXAxisData(series, opts, config) {
  var result = {
    angle: 0,
    xAxisHeight: config.xAxisHeight };


  result.ranges = getXAxisTextList(series, opts, config);
  result.rangesFormat = result.ranges.map(function (item) {
    item = opts.xAxis.format ? opts.xAxis.format(item) : util.toFixed(item, 2);
    return item;
  });

  var xAxisScaleValues = result.ranges.map(function (item) {
    // 如果刻度值是浮点数,则保留两位小数
    item = util.toFixed(item, 2);
    // 若有自定义格式则调用自定义的格式化函数
    item = opts.xAxis.format ? opts.xAxis.format(Number(item)) : item;
    return item;
  });

  result = Object.assign(result, getXAxisPoints(xAxisScaleValues, opts, config));
  // 计算X轴刻度的属性譬如每个刻度的间隔,刻度的起始点\结束点以及总长
  var eachSpacing = result.eachSpacing;

  var textLength = xAxisScaleValues.map(function (item) {
    return measureText(item);
  });

  // get max length of categories text
  var maxTextLength = Math.max.apply(this, textLength);

  // 如果刻度值文本内容过长,则将其逆时针旋转45°
  if (maxTextLength + 2 * config.xAxisTextPadding > eachSpacing) {
    result.angle = 45 * Math.PI / 180;
    result.xAxisHeight = 2 * config.xAxisTextPadding + maxTextLength * Math.sin(result.angle);
  }

  if (opts.xAxis.disabled === true) {
    result.xAxisHeight = 0;
  }

  return result;
}

function getRadarDataPoints(angleList, center, radius, series, opts) {
  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;

  var radarOption = opts.extra.radar || {};
  radarOption.max = radarOption.max || 0;
  var maxData = Math.max(radarOption.max, Math.max.apply(null, dataCombine(series)));

  var data = [];var _loop2 = function _loop2(
  i) {
    var each = series[i];
    var listItem = {};
    listItem.color = each.color;
    listItem.legendShape = each.legendShape;
    listItem.pointShape = each.pointShape;
    listItem.data = [];
    each.data.forEach(function (item, index) {
      var tmp = {};
      tmp.angle = angleList[index];

      tmp.proportion = item / maxData;
      tmp.position = convertCoordinateOrigin(radius * tmp.proportion * process * Math.cos(tmp.angle), radius * tmp.proportion *
      process * Math.sin(tmp.angle), center);
      listItem.data.push(tmp);
    });

    data.push(listItem);};for (var i = 0; i < series.length; i++) {_loop2(i);
  }

  return data;
}

function getPieDataPoints(series, radius) {
  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;

  var count = 0;
  var _start_ = 0;
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    item.data = item.data === null ? 0 : item.data;
    count += item.data;
  }
  for (var _i6 = 0; _i6 < series.length; _i6++) {
    var _item2 = series[_i6];
    _item2.data = _item2.data === null ? 0 : _item2.data;
    if (count === 0) {
      _item2._proportion_ = 1 / series.length * process;
    } else {
      _item2._proportion_ = _item2.data / count * process;
    }
    _item2._radius_ = radius;
  }
  for (var _i7 = 0; _i7 < series.length; _i7++) {
    var _item3 = series[_i7];
    _item3._start_ = _start_;
    _start_ += 2 * _item3._proportion_ * Math.PI;
  }

  return series;
}

function getFunnelDataPoints(series, radius) {
  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  series = series.sort(function (a, b) {return parseInt(b.data) - parseInt(a.data);});
  for (var i = 0; i < series.length; i++) {
    series[i].radius = series[i].data / series[0].data * radius * process;
    series[i]._proportion_ = series[i].data / series[0].data;
  }
  return series.reverse();
}

function getRoseDataPoints(series, type, minRadius, radius) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var count = 0;
  var _start_ = 0;

  var dataArr = [];
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    item.data = item.data === null ? 0 : item.data;
    count += item.data;
    dataArr.push(item.data);
  }

  var minData = Math.min.apply(null, dataArr);
  var maxData = Math.max.apply(null, dataArr);
  var radiusLength = radius - minRadius;

  for (var _i8 = 0; _i8 < series.length; _i8++) {
    var _item4 = series[_i8];
    _item4.data = _item4.data === null ? 0 : _item4.data;
    if (count === 0 || type == 'area') {
      _item4._proportion_ = _item4.data / count * process;
      _item4._rose_proportion_ = 1 / series.length * process;
    } else {
      _item4._proportion_ = _item4.data / count * process;
      _item4._rose_proportion_ = _item4.data / count * process;
    }
    _item4._radius_ = minRadius + radiusLength * ((_item4.data - minData) / (maxData - minData));
  }
  for (var _i9 = 0; _i9 < series.length; _i9++) {
    var _item5 = series[_i9];
    _item5._start_ = _start_;
    _start_ += 2 * _item5._rose_proportion_ * Math.PI;
  }

  return series;
}

function getArcbarDataPoints(series, arcbarOption) {
  var process = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  if (process == 1) {
    process = 0.999999;
  }
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    item.data = item.data === null ? 0 : item.data;
    var totalAngle = void 0;
    if (arcbarOption.type == 'circle') {
      totalAngle = 2;
    } else {
      if (arcbarOption.endAngle < arcbarOption.startAngle) {
        totalAngle = 2 + arcbarOption.endAngle - arcbarOption.startAngle;
      } else {
        totalAngle = arcbarOption.startAngle - arcbarOption.endAngle;
      }
    }
    item._proportion_ = totalAngle * item.data * process + arcbarOption.startAngle;
    if (item._proportion_ >= 2) {
      item._proportion_ = item._proportion_ % 2;
    }
  }
  return series;
}

function getGaugeAxisPoints(categories, startAngle, endAngle) {
  var totalAngle = startAngle - endAngle + 1;
  var tempStartAngle = startAngle;
  for (var i = 0; i < categories.length; i++) {
    categories[i].value = categories[i].value === null ? 0 : categories[i].value;
    categories[i]._startAngle_ = tempStartAngle;
    categories[i]._endAngle_ = totalAngle * categories[i].value + startAngle;
    if (categories[i]._endAngle_ >= 2) {
      categories[i]._endAngle_ = categories[i]._endAngle_ % 2;
    }
    tempStartAngle = categories[i]._endAngle_;
  }
  return categories;
}

function getGaugeDataPoints(series, categories, gaugeOption) {
  var process = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    item.data = item.data === null ? 0 : item.data;
    if (gaugeOption.pointer.color == 'auto') {
      for (var _i10 = 0; _i10 < categories.length; _i10++) {
        if (item.data <= categories[_i10].value) {
          item.color = categories[_i10].color;
          break;
        }
      }
    } else {
      item.color = gaugeOption.pointer.color;
    }
    var totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;
    item._endAngle_ = totalAngle * item.data + gaugeOption.startAngle;
    item._oldAngle_ = gaugeOption.oldAngle;
    if (gaugeOption.oldAngle < gaugeOption.endAngle) {
      item._oldAngle_ += 2;
    }
    if (item.data >= gaugeOption.oldData) {
      item._proportion_ = (item._endAngle_ - item._oldAngle_) * process + gaugeOption.oldAngle;
    } else {
      item._proportion_ = item._oldAngle_ - (item._oldAngle_ - item._endAngle_) * process;
    }
    if (item._proportion_ >= 2) {
      item._proportion_ = item._proportion_ % 2;
    }
  }
  return series;
}

function getPieTextMaxLength(series) {
  series = getPieDataPoints(series);
  var maxLength = 0;
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_ * 100) + '%';
    maxLength = Math.max(maxLength, measureText(text));
  }

  return maxLength;
}

function fixColumeData(points, eachSpacing, columnLen, index, config, opts) {
  return points.map(function (item) {
    if (item === null) {
      return null;
    }
    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / columnLen);

    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {
      item.width = Math.min(item.width, +opts.extra.column.width);
    }
    if (item.width <= 0) {
      item.width = 1;
    }
    item.x += (index + 0.5 - columnLen / 2) * item.width;
    return item;
  });
}

function fixColumeMeterData(points, eachSpacing, columnLen, index, config, opts, border) {
  return points.map(function (item) {
    if (item === null) {
      return null;
    }
    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / 2);

    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {
      item.width = Math.min(item.width, +opts.extra.column.width);
    }

    if (index > 0) {
      item.width -= 2 * border;
    }
    return item;
  });
}

function fixColumeStackData(points, eachSpacing, columnLen, index, config, opts, series) {

  return points.map(function (item, indexn) {

    if (item === null) {
      return null;
    }
    item.width = Math.ceil((eachSpacing - 2 * config.columePadding) / 2);

    if (opts.extra.column && opts.extra.column.width && +opts.extra.column.width > 0) {
      item.width = Math.min(item.width, +opts.extra.column.width);
    }
    return item;
  });
}

function getXAxisPoints(categories, opts, config) {
  var spacingValid = opts.width - opts.area[1] - opts.area[3];
  var dataCount = opts.enableScroll ? Math.min(opts.xAxis.itemCount, categories.length) : categories.length;
  if ((opts.type == 'line' || opts.type == 'area') && dataCount > 1 && opts.xAxis.boundaryGap == 'justify') {
    dataCount -= 1;
  }
  var eachSpacing = spacingValid / dataCount;

  var xAxisPoints = [];
  var startX = opts.area[3];
  var endX = opts.width - opts.area[1];
  categories.forEach(function (item, index) {
    xAxisPoints.push(startX + index * eachSpacing);
  });
  if (opts.xAxis.boundaryGap !== 'justify') {
    if (opts.enableScroll === true) {
      xAxisPoints.push(startX + categories.length * eachSpacing);
    } else {
      xAxisPoints.push(endX);
    }
  }
  return {
    xAxisPoints: xAxisPoints,
    startX: startX,
    endX: endX,
    eachSpacing: eachSpacing };

}

function getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {
  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;
  var points = [];
  var validHeight = opts.height - opts.area[0] - opts.area[2];
  data.forEach(function (item, index) {
    if (item === null) {
      points.push(null);
    } else {
      var cPoints = [];
      item.forEach(function (items, indexs) {
        var point = {};
        point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);
        var value = items.value || items;
        var height = validHeight * (value - minRange) / (maxRange - minRange);
        height *= process;
        point.y = opts.height - Math.round(height) - opts.area[2];
        cPoints.push(point);
      });
      points.push(cPoints);
    }
  });

  return points;
}

function getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config) {
  var process = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 1;
  var boundaryGap = 'center';
  if (opts.type == 'line' || opts.type == 'area') {
    boundaryGap = opts.xAxis.boundaryGap;
  }
  var points = [];
  var validHeight = opts.height - opts.area[0] - opts.area[2];
  var validWidth = opts.width - opts.area[1] - opts.area[3];
  data.forEach(function (item, index) {
    if (item === null) {
      points.push(null);
    } else {
      var point = {};
      point.color = item.color;
      point.x = xAxisPoints[index];
      var value = item;
      if (typeof item === 'object' && item !== null) {
        if (item.constructor == Array) {
          var xranges, xminRange, xmaxRange;
          xranges = [].concat(opts.chartData.xAxisData.ranges);
          xminRange = xranges.shift();
          xmaxRange = xranges.pop();
          value = item[1];
          point.x = opts.area[3] + validWidth * (item[0] - xminRange) / (xmaxRange - xminRange);
        } else {
          value = item.value;
        }
      }
      if (boundaryGap == 'center') {
        point.x += Math.round(eachSpacing / 2);
      }
      var height = validHeight * (value - minRange) / (maxRange - minRange);
      height *= process;
      point.y = opts.height - Math.round(height) - opts.area[2];
      points.push(point);
    }
  });

  return points;
}

function getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, stackSeries) {
  var process = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 1;
  var points = [];
  var validHeight = opts.height - opts.area[0] - opts.area[2];

  data.forEach(function (item, index) {
    if (item === null) {
      points.push(null);
    } else {
      var point = {};
      point.color = item.color;
      point.x = xAxisPoints[index] + Math.round(eachSpacing / 2);

      if (seriesIndex > 0) {
        var value = 0;
        for (var i = 0; i <= seriesIndex; i++) {
          value += stackSeries[i].data[index];
        }
        var value0 = value - item;
        var height = validHeight * (value - minRange) / (maxRange - minRange);
        var height0 = validHeight * (value0 - minRange) / (maxRange - minRange);
      } else {
        var value = item;
        var height = validHeight * (value - minRange) / (maxRange - minRange);
        var height0 = 0;
      }
      var heightc = height0;
      height *= process;
      heightc *= process;
      point.y = opts.height - Math.round(height) - opts.area[2];
      point.y0 = opts.height - Math.round(heightc) - opts.area[2];
      points.push(point);
    }
  });

  return points;
}

function getYAxisTextList(series, opts, config, stack) {
  var index = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;
  var data;
  if (stack == 'stack') {
    data = dataCombineStack(series, opts.categories.length);
  } else {
    data = dataCombine(series);
  }

  var sorted = [];
  // remove null from data
  data = data.filter(function (item) {
    //return item !== null;
    if (typeof item === 'object' && item !== null) {
      if (item.constructor == Array) {
        return item !== null;
      } else {
        return item.value !== null;
      }
    } else {
      return item !== null;
    }
  });

  data.map(function (item) {
    if (typeof item === 'object') {
      if (item.constructor == Array) {
        if (opts.type == 'candle') {
          item.map(function (subitem) {
            sorted.push(subitem);
          });
        } else {
          sorted.push(item[1]);
        }
      } else {
        sorted.push(item.value);
      }
    } else {
      sorted.push(item);
    }
  });

  var minData = 0;
  var maxData = 0;
  if (sorted.length > 0) {
    minData = Math.min.apply(this, sorted);
    maxData = Math.max.apply(this, sorted);
  }
  //为了兼容v1.9.0之前的项目
  if (index > -1) {
    if (typeof opts.yAxis.data[index].min === 'number') {
      minData = Math.min(opts.yAxis.data[index].min, minData);
    }
    if (typeof opts.yAxis.data[index].max === 'number') {
      maxData = Math.max(opts.yAxis.data[index].max, maxData);
    }
  } else {
    if (typeof opts.yAxis.min === 'number') {
      minData = Math.min(opts.yAxis.min, minData);
    }
    if (typeof opts.yAxis.max === 'number') {
      maxData = Math.max(opts.yAxis.max, maxData);
    }
  }


  if (minData === maxData) {
    var rangeSpan = maxData || 10;
    maxData += rangeSpan;
  }

  var dataRange = getDataRange(minData, maxData);
  var minRange = dataRange.minRange;
  var maxRange = dataRange.maxRange;

  var range = [];
  var optsyAxissplitNumber = opts.yAxis.splitNumber;
  if (!opts.yAxis.isMiddle && opts.yAxis.isAddBottomLine) {
    optsyAxissplitNumber--;
  }
  var eachRange = (maxRange - minRange) / optsyAxissplitNumber;

  for (var i = 0; i <= optsyAxissplitNumber; i++) {
    range.push(minRange + eachRange * i);
  }
  return range.reverse();
}

function calYAxisData(series, opts, config) {
  //堆叠图重算Y轴
  var columnstyle = assign({}, {
    type: "" },
  opts.extra.column);
  //如果是多Y轴，重新计算
  var YLength = opts.yAxis.data.length;
  var newSeries = new Array(YLength);
  if (YLength > 0) {
    for (var i = 0; i < YLength; i++) {
      newSeries[i] = [];
      for (var j = 0; j < series.length; j++) {
        if (series[j].index == i) {
          newSeries[i].push(series[j]);
        }
      }
    }
    var rangesArr = new Array(YLength);
    var rangesFormatArr = new Array(YLength);
    var yAxisWidthArr = new Array(YLength);var _loop3 = function _loop3(


    _i11) {
      var yData = opts.yAxis.data[_i11];
      //如果总开关不显示，强制每个Y轴为不显示
      if (opts.yAxis.disabled == true) {
        yData.disabled = true;
      }
      rangesArr[_i11] = getYAxisTextList(newSeries[_i11], opts, config, columnstyle.type, _i11);
      var yAxisFontSizes = yData.fontSize || config.fontSize;
      yAxisWidthArr[_i11] = { position: yData.position ? yData.position : 'left', width: 0 };
      rangesFormatArr[_i11] = rangesArr[_i11].map(function (items) {
        items = util.toFixed(items, 6);
        items = yData.format ? yData.format(Number(items)) : items;
        yAxisWidthArr[_i11].width = Math.max(yAxisWidthArr[_i11].width, measureText(items, yAxisFontSizes) + 5);
        return items;
      });
      var calibration = yData.calibration ? 4 * opts.pixelRatio : 0;
      yAxisWidthArr[_i11].width += calibration + 3 * opts.pixelRatio;
      if (yData.disabled === true) {
        yAxisWidthArr[_i11].width = 0;
      }};for (var _i11 = 0; _i11 < YLength; _i11++) {_loop3(_i11);
    }

  } else {
    var rangesArr = new Array(1);
    var rangesFormatArr = new Array(1);
    var yAxisWidthArr = new Array(1);
    rangesArr[0] = getYAxisTextList(series, opts, config, columnstyle.type);
    yAxisWidthArr[0] = { position: 'left', width: 0 };
    var yAxisFontSize = opts.yAxis.fontSize || config.fontSize;
    rangesFormatArr[0] = rangesArr[0].map(function (item) {
      item = util.toFixed(item, 6);
      item = opts.yAxis.format ? opts.yAxis.format(Number(item)) : item;
      yAxisWidthArr[0].width = Math.max(yAxisWidthArr[0].width, measureText(item, yAxisFontSize) + 5);
      return item;
    });
    yAxisWidthArr[0].width += 3 * opts.pixelRatio;
    if (opts.yAxis.disabled === true) {
      yAxisWidthArr[0] = { position: 'left', width: 0 };
      opts.yAxis.data[0] = { disabled: true };
    } else {
      opts.yAxis.data[0] = { disabled: false, position: 'left', max: opts.yAxis.max, min: opts.yAxis.min, format: opts.yAxis.format };
    }

  }


  // let rangesArrNum = (rangesArr[0].length / 2).toFixed(0)
  // let rangesArr_ = []
  // let rangesFormatArr_ = []
  // rangesArr_[0] = []
  // rangesFormatArr_[0] = []
  // if (opts.yAxis.isMiddle) {
  //   for (let i = 0; i < rangesArr[0].length - 1; i++) {
  //     rangesArr_[0][i] = 0
  //     rangesFormatArr_[0][i] = 0
  //   }
  //   for (let i = 0; i < rangesArrNum - 1; i++) {
  //     rangesArr_[0][i] = rangesArr[0][i]
  //     rangesArr_[0][rangesArrNum * 2 - 2] = rangesArr[0][i] * (-1)
  //     rangesFormatArr_[0][i] = rangesFormatArr[0][i]
  //     rangesFormatArr_[0][rangesArrNum * 2 - 2] = ''
  //   }

  //   rangesArr[0] = rangesArr_[0]
  //   rangesFormatArr[0] = rangesFormatArr_[0]
  // }


  //console.log(opts.yAxis.isAddBottomLine, '(opts.yAxis.isAddBottomLine)')
  if (opts.yAxis.isAddBottomLine) {
    if (opts.yAxis.isMiddle) {
      rangesArr = [[10, 0, -10]];
      rangesFormatArr = [[10, 0, '']];
    } else {
      var rangesArrNum = rangesArr[0].length;
      rangesArr[0].push(rangesArr[0][rangesArrNum - 2] * -1);
      rangesFormatArr[0].push('');
    }
  }

  //console.log("--rangesArr--", rangesArr);
  //console.log("--rangesFormatArr--", rangesFormatArr);

  return {
    rangesFormat: rangesFormatArr,
    ranges: rangesArr,
    yAxisWidth: yAxisWidthArr };


}

function calTooltipYAxisData(point, series, opts, config, eachSpacing) {
  var ranges = [].concat(opts.chartData.yAxisData.ranges);
  var spacingValid = opts.height - opts.area[0] - opts.area[2];
  var minAxis = opts.area[0];
  var items = [];
  for (var i = 0; i < ranges.length; i++) {
    var maxVal = ranges[i].shift();
    var minVal = ranges[i].pop();
    var item = maxVal - (maxVal - minVal) * (point - minAxis) / spacingValid;
    item = opts.yAxis.data[i].format ? opts.yAxis.data[i].format(Number(item)) : item.toFixed(0);
    items.push(String(item));
  }
  return items;
}

function calMarkLineData(points, opts) {
  var minRange, maxRange;
  var spacingValid = opts.height - opts.area[0] - opts.area[2];
  for (var i = 0; i < points.length; i++) {
    points[i].yAxisIndex = points[i].yAxisIndex ? points[i].yAxisIndex : 0;
    var range = [].concat(opts.chartData.yAxisData.ranges[points[i].yAxisIndex]);
    minRange = range.pop();
    maxRange = range.shift();
    var height = spacingValid * (points[i].value - minRange) / (maxRange - minRange);
    points[i].y = opts.height - Math.round(height) - opts.area[2];
  }
  return points;
}

function contextRotate(context, opts) {
  if (opts.rotateLock !== true) {
    context.translate(opts.height, 0);
    context.rotate(90 * Math.PI / 180);
  } else if (opts._rotate_ !== true) {
    context.translate(opts.height, 0);
    context.rotate(90 * Math.PI / 180);
    opts._rotate_ = true;
  }
}

function drawPointShape(points, color, shape, context, opts) {
  context.beginPath();
  if (opts.dataPointShapeType == 'hollow') {
    context.setStrokeStyle(color);
    context.setFillStyle(opts.background);
    context.setLineWidth(2 * opts.pixelRatio);
  } else {
    context.setStrokeStyle("#ffffff");
    context.setFillStyle(color);
    context.setLineWidth(1 * opts.pixelRatio);
  }
  if (shape === 'diamond') {
    points.forEach(function (item, index) {
      if (item !== null) {
        context.moveTo(item.x, item.y - 4.5);
        context.lineTo(item.x - 4.5, item.y);
        context.lineTo(item.x, item.y + 4.5);
        context.lineTo(item.x + 4.5, item.y);
        context.lineTo(item.x, item.y - 4.5);
      }
    });
  } else if (shape === 'circle') {
    points.forEach(function (item, index) {
      if (item !== null) {
        context.moveTo(item.x + 2.5 * opts.pixelRatio, item.y);
        context.arc(item.x, item.y, 3 * opts.pixelRatio, 0, 2 * Math.PI, false);
      }
    });
  } else if (shape === 'rect') {
    points.forEach(function (item, index) {
      if (item !== null) {
        context.moveTo(item.x - 3.5, item.y - 3.5);
        context.rect(item.x - 3.5, item.y - 3.5, 7, 7);
      }
    });
  } else if (shape === 'triangle') {
    points.forEach(function (item, index) {
      if (item !== null) {
        context.moveTo(item.x, item.y - 4.5);
        context.lineTo(item.x - 4.5, item.y + 4.5);
        context.lineTo(item.x + 4.5, item.y + 4.5);
        context.lineTo(item.x, item.y - 4.5);
      }
    });
  }
  context.closePath();
  context.fill();
  context.stroke();
}

function drawRingTitle(opts, config, context, center) {
  var titlefontSize = opts.title.fontSize || config.titleFontSize;
  var subtitlefontSize = opts.subtitle.fontSize || config.subtitleFontSize;
  var title = opts.title.name || '';
  var subtitle = opts.subtitle.name || '';
  var titleFontColor = opts.title.color || config.titleColor;
  var subtitleFontColor = opts.subtitle.color || config.subtitleColor;
  var titleHeight = title ? titlefontSize : 0;
  var subtitleHeight = subtitle ? subtitlefontSize : 0;
  var margin = 5;

  if (subtitle) {
    var textWidth = measureText(subtitle, subtitlefontSize);
    var startX = center.x - textWidth / 2 + (opts.subtitle.offsetX || 0);
    var startY = center.y + subtitlefontSize / 2 + (opts.subtitle.offsetY || 0);
    if (title) {
      startY += (titleHeight + margin) / 2;
    }
    context.beginPath();
    context.setFontSize(subtitlefontSize);
    context.setFillStyle(subtitleFontColor);
    context.fillText(subtitle, startX, startY);
    context.closePath();
    context.stroke();
  }
  if (title) {
    var _textWidth = measureText(title, titlefontSize);
    var _startX = center.x - _textWidth / 2 + (opts.title.offsetX || 0);
    var _startY = center.y + titlefontSize / 2 + (opts.title.offsetY || 0);
    if (subtitle) {
      _startY -= (subtitleHeight + margin) / 2;
    }
    context.beginPath();
    context.setFontSize(titlefontSize);
    context.setFillStyle(titleFontColor);
    context.fillText(title, _startX, _startY);
    context.closePath();
    context.stroke();
  }
}

function drawPointText(points, series, config, context) {
  // 绘制数据文案
  var data = series.data;
  points.forEach(function (item, index) {
    if (item !== null) {
      //var formatVal = series.format ? series.format(data[index]) : data[index];
      context.beginPath();
      context.setFontSize(series.textSize || config.fontSize);
      context.setFillStyle(series.textColor || '#666666');
      var value = data[index];
      if (typeof data[index] === 'object' && data[index] !== null) {
        if (data[index].constructor == Array) {
          value = data[index][1];
        } else {
          value = data[index].value;
        }
      }
      var formatVal = series.format ? series.format(value) : value;
      context.fillText(String(formatVal), item.x - measureText(formatVal, series.textSize || config.fontSize) / 2, item.y - 4);
      context.closePath();
      context.stroke();
    }
  });

}

function drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context) {
  radius -= gaugeOption.width / 2 + config.gaugeLabelTextMargin;

  var totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;
  var splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;
  var totalNumber = gaugeOption.endNumber - gaugeOption.startNumber;
  var splitNumber = totalNumber / gaugeOption.splitLine.splitNumber;
  var nowAngle = gaugeOption.startAngle;
  var nowNumber = gaugeOption.startNumber;
  for (var i = 0; i < gaugeOption.splitLine.splitNumber + 1; i++) {
    var pos = {
      x: radius * Math.cos(nowAngle * Math.PI),
      y: radius * Math.sin(nowAngle * Math.PI) };

    var labelText = gaugeOption.labelFormat ? gaugeOption.labelFormat(nowNumber) : nowNumber;
    pos.x += centerPosition.x - measureText(labelText) / 2;
    pos.y += centerPosition.y;
    var startX = pos.x;
    var startY = pos.y;
    context.beginPath();
    context.setFontSize(config.fontSize);
    context.setFillStyle(gaugeOption.labelColor || '#666666');
    context.fillText(labelText, startX, startY + config.fontSize / 2);
    context.closePath();
    context.stroke();

    nowAngle += splitAngle;
    if (nowAngle >= 2) {
      nowAngle = nowAngle % 2;
    }
    nowNumber += splitNumber;
  }

}

function drawRadarLabel(angleList, radius, centerPosition, opts, config, context) {
  var radarOption = opts.extra.radar || {};
  radius += config.radarLabelTextMargin;

  angleList.forEach(function (angle, index) {
    var pos = {
      x: radius * Math.cos(angle),
      y: radius * Math.sin(angle) };

    var posRelativeCanvas = convertCoordinateOrigin(pos.x, pos.y, centerPosition);
    var startX = posRelativeCanvas.x;
    var startY = posRelativeCanvas.y;
    if (util.approximatelyEqual(pos.x, 0)) {
      startX -= measureText(opts.categories[index] || '') / 2;
    } else if (pos.x < 0) {
      startX -= measureText(opts.categories[index] || '');
    }
    context.beginPath();
    context.setFontSize(config.fontSize);
    context.setFillStyle(radarOption.labelColor || '#666666');
    context.fillText(opts.categories[index] || '', startX, startY + config.fontSize / 2);
    context.closePath();
    context.stroke();
  });

}

function drawPieText(series, opts, config, context, radius, center) {
  var lineRadius = config.pieChartLinePadding;
  var textObjectCollection = [];
  var lastTextObject = null;

  var seriesConvert = series.map(function (item) {
    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_.toFixed(4) * 100) + '%';
    if (item._rose_proportion_) item._proportion_ = item._rose_proportion_;
    var arc = 2 * Math.PI - (item._start_ + 2 * Math.PI * item._proportion_ / 2);
    var color = item.color;
    var radius = item._radius_;
    return {
      arc: arc,
      text: text,
      color: color,
      radius: radius,
      textColor: item.textColor,
      textSize: item.textSize };

  });
  for (var i = 0; i < seriesConvert.length; i++) {
    var item = seriesConvert[i];
    // line end
    var orginX1 = Math.cos(item.arc) * (item.radius + lineRadius);
    var orginY1 = Math.sin(item.arc) * (item.radius + lineRadius);

    // line start
    var orginX2 = Math.cos(item.arc) * item.radius;
    var orginY2 = Math.sin(item.arc) * item.radius;

    // text start
    var orginX3 = orginX1 >= 0 ? orginX1 + config.pieChartTextPadding : orginX1 - config.pieChartTextPadding;
    var orginY3 = orginY1;
    var textWidth = measureText(item.text, item.textSize || config.fontSize);
    var startY = orginY3;

    if (lastTextObject && util.isSameXCoordinateArea(lastTextObject.start, {
      x: orginX3 }))
    {
      if (orginX3 > 0) {
        startY = Math.min(orginY3, lastTextObject.start.y);
      } else if (orginX1 < 0) {
        startY = Math.max(orginY3, lastTextObject.start.y);
      } else {
        if (orginY3 > 0) {
          startY = Math.max(orginY3, lastTextObject.start.y);
        } else {
          startY = Math.min(orginY3, lastTextObject.start.y);
        }
      }
    }
    if (orginX3 < 0) {
      orginX3 -= textWidth;
    }

    var textObject = {
      lineStart: {
        x: orginX2,
        y: orginY2 },

      lineEnd: {
        x: orginX1,
        y: orginY1 },

      start: {
        x: orginX3,
        y: startY },

      width: textWidth,
      height: config.fontSize,
      text: item.text,
      color: item.color,
      textColor: item.textColor,
      textSize: item.textSize };

    lastTextObject = avoidCollision(textObject, lastTextObject);
    textObjectCollection.push(lastTextObject);
  }

  for (var _i12 = 0; _i12 < textObjectCollection.length; _i12++) {
    var _item6 = textObjectCollection[_i12];
    var lineStartPoistion = convertCoordinateOrigin(_item6.lineStart.x, _item6.lineStart.y, center);
    var lineEndPoistion = convertCoordinateOrigin(_item6.lineEnd.x, _item6.lineEnd.y, center);
    var textPosition = convertCoordinateOrigin(_item6.start.x, _item6.start.y, center);
    context.setLineWidth(1 * opts.pixelRatio);
    context.setFontSize(config.fontSize);
    context.beginPath();
    context.setStrokeStyle(_item6.color);
    context.setFillStyle(_item6.color);
    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);
    var curveStartX = _item6.start.x < 0 ? textPosition.x + _item6.width : textPosition.x;
    var textStartX = _item6.start.x < 0 ? textPosition.x - 5 : textPosition.x + 5;
    context.quadraticCurveTo(lineEndPoistion.x, lineEndPoistion.y, curveStartX, textPosition.y);
    context.moveTo(lineStartPoistion.x, lineStartPoistion.y);
    context.stroke();
    context.closePath();
    context.beginPath();
    context.moveTo(textPosition.x + _item6.width, textPosition.y);
    context.arc(curveStartX, textPosition.y, 2, 0, 2 * Math.PI);
    context.closePath();
    context.fill();
    context.beginPath();
    context.setFontSize(_item6.textSize || config.fontSize);
    context.setFillStyle(_item6.textColor || '#666666');
    context.fillText(_item6.text, textStartX, textPosition.y + 3);
    context.closePath();
    context.stroke();
    context.closePath();
  }
}

function drawToolTipSplitLine(offsetX, opts, config, context) {
  var toolTipOption = opts.extra.tooltip || {};
  toolTipOption.gridType = toolTipOption.gridType == undefined ? 'solid' : toolTipOption.gridType;
  toolTipOption.dashLength = toolTipOption.dashLength == undefined ? 4 : toolTipOption.dashLength;
  var startY = opts.area[0];
  var endY = opts.height - opts.area[2];

  if (toolTipOption.gridType == 'dash') {
    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);
  }
  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');
  context.setLineWidth(1 * opts.pixelRatio);
  context.beginPath();
  context.moveTo(offsetX, startY);
  context.lineTo(offsetX, endY);
  context.stroke();
  context.setLineDash([]);

  if (toolTipOption.xAxisLabel) {
    var labelText = opts.categories[opts.tooltip.index];
    context.setFontSize(config.fontSize);
    var textWidth = measureText(labelText, config.fontSize);

    var textX = offsetX - 0.5 * textWidth;
    var textY = endY;
    context.beginPath();
    context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));
    context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);
    context.setLineWidth(1 * opts.pixelRatio);
    context.rect(textX - config.toolTipPadding, textY, textWidth + 2 * config.toolTipPadding, config.fontSize + 2 * config.toolTipPadding);
    context.closePath();
    context.stroke();
    context.fill();

    context.beginPath();
    context.setFontSize(config.fontSize);
    context.setFillStyle(toolTipOption.labelFontColor || config.fontColor);
    context.fillText(String(labelText), textX, textY + config.toolTipPadding + config.fontSize);
    context.closePath();
    context.stroke();
  }
}

function drawMarkLine(opts, config, context) {
  var markLineOption = assign({}, {
    type: 'solid',
    dashLength: 4,
    data: [] },
  opts.extra.markLine);
  var startX = opts.area[3];
  var endX = opts.width - opts.area[1];
  var points = calMarkLineData(markLineOption.data, opts);

  for (var i = 0; i < points.length; i++) {
    var item = assign({}, {
      lineColor: '#DE4A42',
      showLabel: false,
      labelFontColor: '#666666',
      labelBgColor: '#DFE8FF',
      labelBgOpacity: 0.8,
      yAxisIndex: 0 },
    points[i]);

    if (markLineOption.type == 'dash') {
      context.setLineDash([markLineOption.dashLength, markLineOption.dashLength]);
    }
    context.setStrokeStyle(item.lineColor);
    context.setLineWidth(1 * opts.pixelRatio);
    context.beginPath();
    context.moveTo(startX, item.y);
    context.lineTo(endX, item.y);
    context.stroke();
    context.setLineDash([]);
    if (item.showLabel) {
      var labelText = opts.yAxis.format ? opts.yAxis.format(Number(item.value)) : item.value;
      context.setFontSize(config.fontSize);
      var textWidth = measureText(labelText, config.fontSize);
      var bgStartX = opts.padding[3] + config.yAxisTitleWidth - config.toolTipPadding;
      var bgEndX = Math.max(opts.area[3], textWidth + config.toolTipPadding * 2);
      var bgWidth = bgEndX - bgStartX;

      var textX = bgStartX + (bgWidth - textWidth) / 2;
      var textY = item.y;
      context.setFillStyle(hexToRgb(item.labelBgColor, item.labelBgOpacity));
      context.setStrokeStyle(item.labelBgColor);
      context.setLineWidth(1 * opts.pixelRatio);
      context.beginPath();
      context.rect(bgStartX, textY - 0.5 * config.fontSize - config.toolTipPadding, bgWidth, config.fontSize + 2 * config.toolTipPadding);
      context.closePath();
      context.stroke();
      context.fill();

      context.beginPath();
      context.setFontSize(config.fontSize);
      context.setFillStyle(item.labelFontColor);
      context.fillText(String(labelText), textX, textY + 0.5 * config.fontSize);
      context.stroke();
    }
  }
}

function drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints) {
  var toolTipOption = assign({}, {
    gridType: 'solid',
    dashLength: 4 },
  opts.extra.tooltip);

  var startX = opts.area[3];
  var endX = opts.width - opts.area[1];

  if (toolTipOption.gridType == 'dash') {
    context.setLineDash([toolTipOption.dashLength, toolTipOption.dashLength]);
  }
  context.setStrokeStyle(toolTipOption.gridColor || '#cccccc');
  context.setLineWidth(1 * opts.pixelRatio);
  context.beginPath();
  context.moveTo(startX, opts.tooltip.offset.y);
  context.lineTo(endX, opts.tooltip.offset.y);
  context.stroke();
  context.setLineDash([]);

  if (toolTipOption.yAxisLabel) {
    var labelText = calTooltipYAxisData(opts.tooltip.offset.y, opts.series, opts, config, eachSpacing);
    var widthArr = opts.chartData.yAxisData.yAxisWidth;
    var tStartLeft = opts.area[3];
    var tStartRight = opts.width - opts.area[1];
    for (var i = 0; i < labelText.length; i++) {
      context.setFontSize(config.fontSize);
      var textWidth = measureText(labelText[i], config.fontSize);
      var bgStartX = void 0,bgEndX = void 0,bgWidth = void 0;
      if (widthArr[i].position == 'left') {
        bgStartX = tStartLeft - widthArr[i].width;
        bgEndX = Math.max(bgStartX, bgStartX + textWidth + config.toolTipPadding * 2);
      } else {
        bgStartX = tStartRight;
        bgEndX = Math.max(bgStartX + widthArr[i].width, bgStartX + textWidth + config.toolTipPadding * 2);
      }
      bgWidth = bgEndX - bgStartX;

      var textX = bgStartX + (bgWidth - textWidth) / 2;
      var textY = opts.tooltip.offset.y;
      context.beginPath();
      context.setFillStyle(hexToRgb(toolTipOption.labelBgColor || config.toolTipBackground, toolTipOption.labelBgOpacity || config.toolTipOpacity));
      context.setStrokeStyle(toolTipOption.labelBgColor || config.toolTipBackground);
      context.setLineWidth(1 * opts.pixelRatio);
      context.rect(bgStartX, textY - 0.5 * config.fontSize - config.toolTipPadding, bgWidth, config.fontSize + 2 * config.toolTipPadding);
      context.closePath();
      context.stroke();
      context.fill();

      context.beginPath();
      context.setFontSize(config.fontSize);
      context.setFillStyle(toolTipOption.labelFontColor || config.fontColor);
      context.fillText(labelText[i], textX, textY + 0.5 * config.fontSize);
      context.closePath();
      context.stroke();
      if (widthArr[i].position == 'left') {
        tStartLeft -= widthArr[i].width + opts.yAxis.padding;
      } else {
        tStartRight += widthArr[i].width + opts.yAxis.padding;
      }
    }
  }
}

function drawToolTipSplitArea(offsetX, opts, config, context, eachSpacing) {
  var toolTipOption = assign({}, {
    activeBgColor: '#000000',
    activeBgOpacity: 0.08 },
  opts.extra.tooltip);
  var startY = opts.area[0];
  var endY = opts.height - opts.area[2];
  context.beginPath();
  context.setFillStyle(hexToRgb(toolTipOption.activeBgColor, toolTipOption.activeBgOpacity));
  context.rect(offsetX - eachSpacing / 2, startY, eachSpacing, endY - startY);
  context.closePath();
  context.fill();
}

function drawToolTip(textList, offset, opts, config, context, eachSpacing, xAxisPoints) {
  var toolTipOption = assign({}, {
    showBox: true,
    bgColor: '#000000',
    bgOpacity: 0.7,
    fontColor: '#FFFFFF' },
  opts.extra.tooltip);
  var legendWidth = 4 * opts.pixelRatio;
  var legendMarginRight = 5 * opts.pixelRatio;
  var arrowWidth = 8 * opts.pixelRatio;
  var isOverRightBorder = false;
  if (opts.type == 'line' || opts.type == 'area' || opts.type == 'candle' || opts.type == 'mix') {
    drawToolTipSplitLine(opts.tooltip.offset.x, opts, config, context);
  }

  offset = assign({
    x: 0,
    y: 0 },
  offset);
  offset.y -= 8 * opts.pixelRatio;
  var textWidth = textList.map(function (item) {
    return measureText(item.text, config.fontSize);
  });
  var toolTipWidth = legendWidth + legendMarginRight + 4 * config.toolTipPadding + Math.max.apply(null, textWidth);
  var toolTipHeight = 2 * config.toolTipPadding + textList.length * config.toolTipLineHeight;

  if (toolTipOption.showBox == false) {return;}
  // if beyond the right border
  if (offset.x - Math.abs(opts._scrollDistance_) + arrowWidth + toolTipWidth > opts.width) {
    isOverRightBorder = true;
  }
  if (toolTipHeight + offset.y > opts.height) {
    offset.y = opts.height - toolTipHeight;
  }
  // draw background rect
  context.beginPath();
  context.setFillStyle(hexToRgb(toolTipOption.bgColor || config.toolTipBackground, toolTipOption.bgOpacity || config.toolTipOpacity));
  if (isOverRightBorder) {
    context.moveTo(offset.x, offset.y + 10 * opts.pixelRatio);
    context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pixelRatio - 5 * opts.pixelRatio);
    context.lineTo(offset.x - arrowWidth, offset.y);
    context.lineTo(offset.x - arrowWidth - Math.round(toolTipWidth), offset.y);
    context.lineTo(offset.x - arrowWidth - Math.round(toolTipWidth), offset.y + toolTipHeight);
    context.lineTo(offset.x - arrowWidth, offset.y + toolTipHeight);
    context.lineTo(offset.x - arrowWidth, offset.y + 10 * opts.pixelRatio + 5 * opts.pixelRatio);
    context.lineTo(offset.x, offset.y + 10 * opts.pixelRatio);
  } else {
    context.moveTo(offset.x, offset.y + 10 * opts.pixelRatio);
    context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pixelRatio - 5 * opts.pixelRatio);
    context.lineTo(offset.x + arrowWidth, offset.y);
    context.lineTo(offset.x + arrowWidth + Math.round(toolTipWidth), offset.y);
    context.lineTo(offset.x + arrowWidth + Math.round(toolTipWidth), offset.y + toolTipHeight);
    context.lineTo(offset.x + arrowWidth, offset.y + toolTipHeight);
    context.lineTo(offset.x + arrowWidth, offset.y + 10 * opts.pixelRatio + 5 * opts.pixelRatio);
    context.lineTo(offset.x, offset.y + 10 * opts.pixelRatio);
  }

  context.closePath();
  context.fill();

  // draw legend
  textList.forEach(function (item, index) {
    if (item.color !== null) {
      context.beginPath();
      context.setFillStyle(item.color);
      var startX = offset.x + arrowWidth + 2 * config.toolTipPadding;
      var startY = offset.y + (config.toolTipLineHeight - config.fontSize) / 2 + config.toolTipLineHeight * index +
      config.toolTipPadding + 1;
      if (isOverRightBorder) {
        startX = offset.x - toolTipWidth - arrowWidth + 2 * config.toolTipPadding;
      }
      context.fillRect(startX, startY, legendWidth, config.fontSize);
      context.closePath();
    }
  });

  // draw text list

  textList.forEach(function (item, index) {
    var startX = offset.x + arrowWidth + 2 * config.toolTipPadding + legendWidth + legendMarginRight;
    if (isOverRightBorder) {
      startX = offset.x - toolTipWidth - arrowWidth + 2 * config.toolTipPadding + +legendWidth + legendMarginRight;
    }
    var startY = offset.y + (config.toolTipLineHeight - config.fontSize) / 2 + config.toolTipLineHeight * index +
    config.toolTipPadding;
    context.beginPath();
    context.setFontSize(config.fontSize);
    context.setFillStyle(toolTipOption.fontColor);
    context.fillText(item.text, startX, startY + config.fontSize);
    context.closePath();
    context.stroke();
  });
}

function drawYAxisTitle(title, opts, config, context) {
  var startX = config.xAxisHeight + (opts.height - config.xAxisHeight - measureText(title)) / 2;
  context.save();
  context.beginPath();
  context.setFontSize(config.fontSize);
  context.setFillStyle(opts.yAxis.titleFontColor || '#333333');
  context.translate(0, opts.height);
  context.rotate(-90 * Math.PI / 180);
  context.fillText(title, startX, opts.padding[3] + 0.5 * config.fontSize);
  context.closePath();
  context.stroke();
  context.restore();
}

function drawColumnDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  eachSpacing = xAxisData.eachSpacing;
  var columnOption = assign({}, {
    type: 'group',
    width: eachSpacing / 2,
    meter: {
      border: 4,
      fillColor: '#FFFFFF' } },

  opts.extra.column);

  var calPoints = [];
  context.save();

  var leftNum = -2;
  var rightNum = xAxisPoints.length + 2;

  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;
    rightNum = leftNum + opts.xAxis.itemCount + 4;
  }
  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {
    drawToolTipSplitArea(opts.tooltip.offset.x, opts, config, context, eachSpacing);
  }

  series.forEach(function (eachSeries, seriesIndex) {
    var ranges, minRange, maxRange;
    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
    minRange = ranges.pop();
    maxRange = ranges.shift();

    var data = eachSeries.data;
    switch (columnOption.type) {
      case 'group':
        var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
        var tooltipPoints = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);
        calPoints.push(tooltipPoints);
        points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);
        for (var i = 0; i < points.length; i++) {
          var item = points[i];
          if (item !== null && i > leftNum && i < rightNum) {
            context.beginPath();
            context.setStrokeStyle(item.color || eachSeries.color);
            context.setLineWidth(1);
            context.setFillStyle(item.color || eachSeries.color);
            var startX = item.x - item.width / 2;
            var height = opts.height - item.y - opts.area[2];
            context.moveTo(startX - 1, item.y);
            context.lineTo(startX + item.width - 2, item.y);
            context.lineTo(startX + item.width - 2, opts.height - opts.area[2]);
            context.lineTo(startX, opts.height - opts.area[2]);
            context.lineTo(startX, item.y);
            context.closePath();
            context.stroke();
            context.fill();
          }
        };
        break;
      case 'stack':
        // 绘制堆叠数据图
        var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);
        calPoints.push(points);
        points = fixColumeStackData(points, eachSpacing, series.length, seriesIndex, config, opts, series);

        for (var _i13 = 0; _i13 < points.length; _i13++) {
          var _item7 = points[_i13];
          if (_item7 !== null && _i13 > leftNum && _i13 < rightNum) {
            context.beginPath();
            context.setFillStyle(_item7.color || eachSeries.color);
            var startX = _item7.x - _item7.width / 2 + 1;
            var height = opts.height - _item7.y - opts.area[2];
            var height0 = opts.height - _item7.y0 - opts.area[2];
            if (seriesIndex > 0) {
              height -= height0;
            }
            context.moveTo(startX, _item7.y);
            context.fillRect(startX, _item7.y, _item7.width - 2, height);
            context.closePath();
            context.fill();
          }
        };
        break;
      case 'meter':
        // 绘制温度计数据图
        var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
        calPoints.push(points);
        points = fixColumeMeterData(points, eachSpacing, series.length, seriesIndex, config, opts, columnOption.meter.border);
        if (seriesIndex == 0) {
          for (var _i14 = 0; _i14 < points.length; _i14++) {
            var _item8 = points[_i14];
            if (_item8 !== null && _i14 > leftNum && _i14 < rightNum) {
              //画背景颜色
              context.beginPath();
              context.setFillStyle(columnOption.meter.fillColor);
              var startX = _item8.x - _item8.width / 2;
              var height = opts.height - _item8.y - opts.area[2];
              context.moveTo(startX, _item8.y);
              context.fillRect(startX, _item8.y, _item8.width, height);
              context.closePath();
              context.fill();
              //画边框线
              if (columnOption.meter.border > 0) {
                context.beginPath();
                context.setStrokeStyle(eachSeries.color);
                context.setLineWidth(columnOption.meter.border * opts.pixelRatio);
                context.moveTo(startX + columnOption.meter.border * 0.5, _item8.y + height);
                context.lineTo(startX + columnOption.meter.border * 0.5, _item8.y + columnOption.meter.border * 0.5);
                context.lineTo(startX + _item8.width - columnOption.meter.border * 0.5, _item8.y + columnOption.meter.border * 0.5);
                context.lineTo(startX + _item8.width - columnOption.meter.border * 0.5, _item8.y + height);
                context.stroke();
              }
            }
          };
        } else {
          for (var _i15 = 0; _i15 < points.length; _i15++) {
            var _item9 = points[_i15];
            if (_item9 !== null && _i15 > leftNum && _i15 < rightNum) {
              context.beginPath();
              context.setFillStyle(_item9.color || eachSeries.color);
              var startX = _item9.x - _item9.width / 2;
              var height = opts.height - _item9.y - opts.area[2];
              context.moveTo(startX, _item9.y);
              context.fillRect(startX, _item9.y, _item9.width, height);
              context.closePath();
              context.fill();
            }
          };
        }
        break;}

  });

  if (opts.dataLabel !== false && process === 1) {
    series.forEach(function (eachSeries, seriesIndex) {
      var ranges, minRange, maxRange;
      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
      minRange = ranges.pop();
      maxRange = ranges.shift();
      var data = eachSeries.data;
      switch (columnOption.type) {
        case 'group':
          var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
          points = fixColumeData(points, eachSpacing, series.length, seriesIndex, config, opts);
          drawPointText(points, eachSeries, config, context);
          break;
        case 'stack':
          var points = getStackDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, seriesIndex, series, process);
          drawPointText(points, eachSeries, config, context);
          break;
        case 'meter':
          var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
          drawPointText(points, eachSeries, config, context);
          break;}

    });
  }

  context.restore();

  return {
    xAxisPoints: xAxisPoints,
    calPoints: calPoints,
    eachSpacing: eachSpacing };

}

function drawCandleDataPoints(series, seriesMA, opts, config, context) {
  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;
  var candleOption = assign({}, {
    color: {},
    average: {} },
  opts.extra.candle);
  candleOption.color = assign({}, {
    upLine: '#f04864',
    upFill: '#f04864',
    downLine: '#2fc25b',
    downFill: '#2fc25b' },
  candleOption.color);
  candleOption.average = assign({}, {
    show: false,
    name: [],
    day: [],
    color: config.colors },
  candleOption.average);
  opts.extra.candle = candleOption;

  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  eachSpacing = xAxisData.eachSpacing;

  var calPoints = [];

  context.save();

  var leftNum = -2;
  var rightNum = xAxisPoints.length + 2;
  var leftSpace = 0;
  var rightSpace = opts.width + eachSpacing;

  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;
    rightNum = leftNum + opts.xAxis.itemCount + 4;
    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];
    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;
  }

  //画均线
  if (candleOption.average.show) {
    seriesMA.forEach(function (eachSeries, seriesIndex) {
      var ranges, minRange, maxRange;
      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
      minRange = ranges.pop();
      maxRange = ranges.shift();

      var data = eachSeries.data;
      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
      var splitPointList = splitPoints(points);

      for (var i = 0; i < splitPointList.length; i++) {
        var _points = splitPointList[i];
        context.beginPath();
        context.setStrokeStyle(eachSeries.color);
        context.setLineWidth(1);
        if (_points.length === 1) {
          context.moveTo(_points[0].x, _points[0].y);
          context.arc(_points[0].x, _points[0].y, 1, 0, 2 * Math.PI);
        } else {
          context.moveTo(_points[0].x, _points[0].y);
          var startPoint = 0;
          for (var j = 0; j < _points.length; j++) {
            var item = _points[j];
            if (startPoint == 0 && item.x > leftSpace) {
              context.moveTo(item.x, item.y);
              startPoint = 1;
            }
            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {
              var ctrlPoint = createCurveControlPoints(_points, j - 1);
              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);
            }
          }
          context.moveTo(_points[0].x, _points[0].y);
        }
        context.closePath();
        context.stroke();
      }
    });
  }
  //画K线
  series.forEach(function (eachSeries, seriesIndex) {
    var ranges, minRange, maxRange;
    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
    minRange = ranges.pop();
    maxRange = ranges.shift();
    var data = eachSeries.data;
    var points = getCandleDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
    calPoints.push(points);
    var splitPointList = splitPoints(points);

    for (var i = 0; i < splitPointList[0].length; i++) {
      if (i > leftNum && i < rightNum) {
        var item = splitPointList[0][i];
        context.beginPath();
        //如果上涨
        if (data[i][1] - data[i][0] > 0) {
          context.setStrokeStyle(candleOption.color.upLine);
          context.setFillStyle(candleOption.color.upFill);
          context.setLineWidth(1 * opts.pixelRatio);
          context.moveTo(item[3].x, item[3].y); //顶点
          context.lineTo(item[1].x, item[1].y); //收盘中间点
          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点
          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点
          context.lineTo(item[0].x, item[0].y); //开盘中间点
          context.lineTo(item[2].x, item[2].y); //底点
          context.lineTo(item[0].x, item[0].y); //开盘中间点
          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点
          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点
          context.lineTo(item[1].x, item[1].y); //收盘中间点
          context.moveTo(item[3].x, item[3].y); //顶点
        } else {
          context.setStrokeStyle(candleOption.color.downLine);
          context.setFillStyle(candleOption.color.downFill);
          context.setLineWidth(1 * opts.pixelRatio);
          context.moveTo(item[3].x, item[3].y); //顶点
          context.lineTo(item[0].x, item[0].y); //开盘中间点
          context.lineTo(item[0].x - eachSpacing / 4, item[0].y); //开盘左侧点
          context.lineTo(item[1].x - eachSpacing / 4, item[1].y); //收盘左侧点
          context.lineTo(item[1].x, item[1].y); //收盘中间点
          context.lineTo(item[2].x, item[2].y); //底点
          context.lineTo(item[1].x, item[1].y); //收盘中间点
          context.lineTo(item[1].x + eachSpacing / 4, item[1].y); //收盘右侧点
          context.lineTo(item[0].x + eachSpacing / 4, item[0].y); //开盘右侧点
          context.lineTo(item[0].x, item[0].y); //开盘中间点
          context.moveTo(item[3].x, item[3].y); //顶点
        }
        context.closePath();
        context.fill();
        context.stroke();
      }
    }
  });

  context.restore();

  return {
    xAxisPoints: xAxisPoints,
    calPoints: calPoints,
    eachSpacing: eachSpacing };

}

function drawAreaDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var areaOption = assign({}, {
    type: 'straight',
    opacity: 0.2,
    addLine: false,
    width: 2,
    gradient: false },
  opts.extra.area);

  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  eachSpacing = xAxisData.eachSpacing;

  var endY = opts.height - opts.area[2];
  var calPoints = [];

  context.save();
  var leftSpace = 0;
  var rightSpace = opts.width + eachSpacing;
  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];
    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;
  }

  series.forEach(function (eachSeries, seriesIndex) {
    var ranges, minRange, maxRange;
    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
    minRange = ranges.pop();
    maxRange = ranges.shift();
    var data = eachSeries.data;
    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
    calPoints.push(points);

    var splitPointList = splitPoints(points);
    for (var i = 0; i < splitPointList.length; i++) {
      var _points2 = splitPointList[i];
      // 绘制区域数
      context.beginPath();
      context.setStrokeStyle(hexToRgb(eachSeries.color, areaOption.opacity));
      if (areaOption.gradient) {
        var gradient = context.createLinearGradient(0, opts.area[0], 0, opts.height - opts.area[2]);
        gradient.addColorStop('0', hexToRgb(eachSeries.color, areaOption.opacity));
        gradient.addColorStop('1.0', hexToRgb("#FFFFFF", 0.1));
        context.setFillStyle(gradient);
      } else {
        context.setFillStyle(hexToRgb(eachSeries.color, areaOption.opacity));
      }
      context.setLineWidth(areaOption.width * opts.pixelRatio);
      if (_points2.length > 1) {
        var firstPoint = _points2[0];
        var lastPoint = _points2[_points2.length - 1];
        context.moveTo(firstPoint.x, firstPoint.y);
        var startPoint = 0;
        if (areaOption.type === 'curve') {
          for (var j = 0; j < _points2.length; j++) {
            var item = _points2[j];
            if (startPoint == 0 && item.x > leftSpace) {
              context.moveTo(item.x, item.y);
              startPoint = 1;
            }
            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {
              var ctrlPoint = createCurveControlPoints(_points2, j - 1);
              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);
            }
          };
        } else {
          for (var _j = 0; _j < _points2.length; _j++) {
            var _item10 = _points2[_j];
            if (startPoint == 0 && _item10.x > leftSpace) {
              context.moveTo(_item10.x, _item10.y);
              startPoint = 1;
            }
            if (_j > 0 && _item10.x > leftSpace && _item10.x < rightSpace) {
              context.lineTo(_item10.x, _item10.y);
            }
          };
        }

        context.lineTo(lastPoint.x, endY);
        context.lineTo(firstPoint.x, endY);
        context.lineTo(firstPoint.x, firstPoint.y);
      } else {
        var _item11 = _points2[0];
        context.moveTo(_item11.x - eachSpacing / 2, _item11.y);
        context.lineTo(_item11.x + eachSpacing / 2, _item11.y);
        context.lineTo(_item11.x + eachSpacing / 2, endY);
        context.lineTo(_item11.x - eachSpacing / 2, endY);
        context.moveTo(_item11.x - eachSpacing / 2, _item11.y);
      }
      context.closePath();
      context.fill();

      //画连线
      if (areaOption.addLine) {
        if (eachSeries.lineType == 'dash') {
          var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;
          dashLength *= opts.pixelRatio;
          context.setLineDash([dashLength, dashLength]);
        }
        context.beginPath();
        context.setStrokeStyle(eachSeries.color);
        context.setLineWidth(areaOption.width * opts.pixelRatio);
        if (_points2.length === 1) {
          context.moveTo(_points2[0].x, _points2[0].y);
          context.arc(_points2[0].x, _points2[0].y, 1, 0, 2 * Math.PI);
        } else {
          context.moveTo(_points2[0].x, _points2[0].y);
          var _startPoint = 0;
          if (areaOption.type === 'curve') {
            for (var _j2 = 0; _j2 < _points2.length; _j2++) {
              var _item12 = _points2[_j2];
              if (_startPoint == 0 && _item12.x > leftSpace) {
                context.moveTo(_item12.x, _item12.y);
                _startPoint = 1;
              }
              if (_j2 > 0 && _item12.x > leftSpace && _item12.x < rightSpace) {
                var _ctrlPoint = createCurveControlPoints(_points2, _j2 - 1);
                context.bezierCurveTo(_ctrlPoint.ctrA.x, _ctrlPoint.ctrA.y, _ctrlPoint.ctrB.x, _ctrlPoint.ctrB.y, _item12.x, _item12.y);
              }
            };
          } else {
            for (var _j3 = 0; _j3 < _points2.length; _j3++) {
              var _item13 = _points2[_j3];
              if (_startPoint == 0 && _item13.x > leftSpace) {
                context.moveTo(_item13.x, _item13.y);
                _startPoint = 1;
              }
              if (_j3 > 0 && _item13.x > leftSpace && _item13.x < rightSpace) {
                context.lineTo(_item13.x, _item13.y);
              }
            };
          }
          context.moveTo(_points2[0].x, _points2[0].y);
        }
        context.stroke();
        context.setLineDash([]);
      }
    }

    //画点
    if (opts.dataPointShape !== false) {
      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);
    }

  });

  if (opts.dataLabel !== false && process === 1) {
    series.forEach(function (eachSeries, seriesIndex) {
      var ranges, minRange, maxRange;
      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
      minRange = ranges.pop();
      maxRange = ranges.shift();
      var data = eachSeries.data;
      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
      drawPointText(points, eachSeries, config, context);
    });
  }

  context.restore();

  return {
    xAxisPoints: xAxisPoints,
    calPoints: calPoints,
    eachSpacing: eachSpacing };

}

function drawLineDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var lineOption = assign({}, {
    type: 'straight',
    width: 2 },
  opts.extra.line);
  lineOption.width *= opts.pixelRatio;

  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  eachSpacing = xAxisData.eachSpacing;
  var calPoints = [];

  context.save();
  var leftSpace = 0;
  var rightSpace = opts.width + eachSpacing;
  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];
    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;
  }

  series.forEach(function (eachSeries, seriesIndex) {
    var ranges, minRange, maxRange;
    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
    minRange = ranges.pop();
    maxRange = ranges.shift();
    var data = eachSeries.data;
    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
    calPoints.push(points);
    var splitPointList = splitPoints(points);

    if (eachSeries.lineType == 'dash') {
      var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;
      dashLength *= opts.pixelRatio;
      context.setLineDash([dashLength, dashLength]);
    }
    context.beginPath();
    context.setStrokeStyle(eachSeries.color);
    context.setLineWidth(lineOption.width);

    splitPointList.forEach(function (points, index) {

      if (points.length === 1) {
        context.moveTo(points[0].x, points[0].y);
        context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);
      } else {
        context.moveTo(points[0].x, points[0].y);
        var startPoint = 0;
        if (lineOption.type === 'curve') {
          for (var j = 0; j < points.length; j++) {
            var item = points[j];
            if (startPoint == 0 && item.x > leftSpace) {
              context.moveTo(item.x, item.y);
              startPoint = 1;
            }
            if (j > 0 && item.x > leftSpace && item.x < rightSpace) {
              var ctrlPoint = createCurveControlPoints(points, j - 1);
              context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, item.x, item.y);
            }
          };
        } else {
          for (var _j4 = 0; _j4 < points.length; _j4++) {
            var _item14 = points[_j4];
            if (startPoint == 0 && _item14.x > leftSpace) {
              context.moveTo(_item14.x, _item14.y);
              startPoint = 1;
            }
            if (_j4 > 0 && _item14.x > leftSpace && _item14.x < rightSpace) {
              context.lineTo(_item14.x, _item14.y);
            }
          };
        }
        context.moveTo(points[0].x, points[0].y);
      }

    });

    context.stroke();
    context.setLineDash([]);

    if (opts.dataPointShape !== false) {
      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);
    }
  });

  if (opts.dataLabel !== false && process === 1) {
    series.forEach(function (eachSeries, seriesIndex) {
      var ranges, minRange, maxRange;
      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
      minRange = ranges.pop();
      maxRange = ranges.shift();
      var data = eachSeries.data;
      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
      drawPointText(points, eachSeries, config, context);
    });
  }

  context.restore();

  return {
    xAxisPoints: xAxisPoints,
    calPoints: calPoints,
    eachSpacing: eachSpacing };

}

function drawMixDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;

  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  eachSpacing = xAxisData.eachSpacing;

  var endY = opts.height - opts.area[2];
  var calPoints = [];

  var columnIndex = 0;
  var columnLength = 0;
  series.forEach(function (eachSeries, seriesIndex) {
    if (eachSeries.type == 'column') {
      columnLength += 1;
    }
  });
  context.save();
  var leftNum = -2;
  var rightNum = xAxisPoints.length + 2;
  var leftSpace = 0;
  var rightSpace = opts.width + eachSpacing;
  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
    leftNum = Math.floor(-opts._scrollDistance_ / eachSpacing) - 2;
    rightNum = leftNum + opts.xAxis.itemCount + 4;
    leftSpace = -opts._scrollDistance_ - eachSpacing + opts.area[3];
    rightSpace = leftSpace + (opts.xAxis.itemCount + 4) * eachSpacing;
  }

  series.forEach(function (eachSeries, seriesIndex) {
    var ranges, minRange, maxRange;

    ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
    minRange = ranges.pop();
    maxRange = ranges.shift();

    var data = eachSeries.data;
    var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
    calPoints.push(points);

    // 绘制柱状数据图
    if (eachSeries.type == 'column') {
      points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);
      for (var i = 0; i < points.length; i++) {
        var item = points[i];
        if (item !== null && i > leftNum && i < rightNum) {
          context.beginPath();
          context.setStrokeStyle(item.color || eachSeries.color);
          context.setLineWidth(1);
          context.setFillStyle(item.color || eachSeries.color);
          var startX = item.x - item.width / 2;
          var height = opts.height - item.y - opts.area[2];
          context.moveTo(startX, item.y);
          context.moveTo(startX - 1, item.y);
          context.lineTo(startX + item.width - 2, item.y);
          context.lineTo(startX + item.width - 2, opts.height - opts.area[2]);
          context.lineTo(startX, opts.height - opts.area[2]);
          context.lineTo(startX, item.y);
          context.closePath();
          context.stroke();
          context.fill();
          context.closePath();
          context.fill();
        }
      }
      columnIndex += 1;
    }

    //绘制区域图数据

    if (eachSeries.type == 'area') {
      var _splitPointList = splitPoints(points);
      for (var _i16 = 0; _i16 < _splitPointList.length; _i16++) {
        var _points3 = _splitPointList[_i16];
        // 绘制区域数据
        context.beginPath();
        context.setStrokeStyle(eachSeries.color);
        context.setFillStyle(hexToRgb(eachSeries.color, 0.2));
        context.setLineWidth(2 * opts.pixelRatio);
        if (_points3.length > 1) {
          var firstPoint = _points3[0];
          var lastPoint = _points3[_points3.length - 1];
          context.moveTo(firstPoint.x, firstPoint.y);
          var startPoint = 0;
          if (eachSeries.style === 'curve') {
            for (var j = 0; j < _points3.length; j++) {
              var _item15 = _points3[j];
              if (startPoint == 0 && _item15.x > leftSpace) {
                context.moveTo(_item15.x, _item15.y);
                startPoint = 1;
              }
              if (j > 0 && _item15.x > leftSpace && _item15.x < rightSpace) {
                var ctrlPoint = createCurveControlPoints(_points3, j - 1);
                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, _item15.x, _item15.y);
              }
            };
          } else {
            for (var _j5 = 0; _j5 < _points3.length; _j5++) {
              var _item16 = _points3[_j5];
              if (startPoint == 0 && _item16.x > leftSpace) {
                context.moveTo(_item16.x, _item16.y);
                startPoint = 1;
              }
              if (_j5 > 0 && _item16.x > leftSpace && _item16.x < rightSpace) {
                context.lineTo(_item16.x, _item16.y);
              }
            };
          }
          context.lineTo(lastPoint.x, endY);
          context.lineTo(firstPoint.x, endY);
          context.lineTo(firstPoint.x, firstPoint.y);
        } else {
          var _item17 = _points3[0];
          context.moveTo(_item17.x - eachSpacing / 2, _item17.y);
          context.lineTo(_item17.x + eachSpacing / 2, _item17.y);
          context.lineTo(_item17.x + eachSpacing / 2, endY);
          context.lineTo(_item17.x - eachSpacing / 2, endY);
          context.moveTo(_item17.x - eachSpacing / 2, _item17.y);
        }
        context.closePath();
        context.fill();
      }
    }

    // 绘制折线数据图
    if (eachSeries.type == 'line') {
      var splitPointList = splitPoints(points);
      splitPointList.forEach(function (points, index) {
        if (eachSeries.lineType == 'dash') {
          var dashLength = eachSeries.dashLength ? eachSeries.dashLength : 8;
          dashLength *= opts.pixelRatio;
          context.setLineDash([dashLength, dashLength]);
        }
        context.beginPath();
        context.setStrokeStyle(eachSeries.color);
        context.setLineWidth(2 * opts.pixelRatio);
        if (points.length === 1) {
          context.moveTo(points[0].x, points[0].y);
          context.arc(points[0].x, points[0].y, 1, 0, 2 * Math.PI);
        } else {
          context.moveTo(points[0].x, points[0].y);
          var _startPoint2 = 0;
          if (eachSeries.style == 'curve') {
            for (var _j6 = 0; _j6 < points.length; _j6++) {
              var _item18 = points[_j6];
              if (_startPoint2 == 0 && _item18.x > leftSpace) {
                context.moveTo(_item18.x, _item18.y);
                _startPoint2 = 1;
              }
              if (_j6 > 0 && _item18.x > leftSpace && _item18.x < rightSpace) {
                var ctrlPoint = createCurveControlPoints(points, _j6 - 1);
                context.bezierCurveTo(ctrlPoint.ctrA.x, ctrlPoint.ctrA.y, ctrlPoint.ctrB.x, ctrlPoint.ctrB.y, _item18.x, _item18.y);
              }
            }
          } else {
            for (var _j7 = 0; _j7 < points.length; _j7++) {
              var _item19 = points[_j7];
              if (_startPoint2 == 0 && _item19.x > leftSpace) {
                context.moveTo(_item19.x, _item19.y);
                _startPoint2 = 1;
              }
              if (_j7 > 0 && _item19.x > leftSpace && _item19.x < rightSpace) {
                context.lineTo(_item19.x, _item19.y);
              }
            }
          }
          context.moveTo(points[0].x, points[0].y);
        }
        context.stroke();
        context.setLineDash([]);
      });
    }

    // 绘制点数据图
    if (eachSeries.type == 'point') {
      eachSeries.addPoint = true;
    }

    if (eachSeries.addPoint == true && eachSeries.type !== 'column') {
      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);
    }
  });
  if (opts.dataLabel !== false && process === 1) {
    var columnIndex = 0;
    series.forEach(function (eachSeries, seriesIndex) {
      var ranges, minRange, maxRange;

      ranges = [].concat(opts.chartData.yAxisData.ranges[eachSeries.index]);
      minRange = ranges.pop();
      maxRange = ranges.shift();

      var data = eachSeries.data;
      var points = getDataPoints(data, minRange, maxRange, xAxisPoints, eachSpacing, opts, config, process);
      if (eachSeries.type !== 'column') {
        drawPointText(points, eachSeries, config, context);
      } else {
        points = fixColumeData(points, eachSpacing, columnLength, columnIndex, config, opts);
        drawPointText(points, eachSeries, config, context);
        columnIndex += 1;
      }

    });
  }

  context.restore();

  return {
    xAxisPoints: xAxisPoints,
    calPoints: calPoints,
    eachSpacing: eachSpacing };

}

function drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints) {
  var toolTipOption = opts.extra.tooltip || {};
  if (toolTipOption.horizentalLine && opts.tooltip && process === 1 && (opts.type == 'line' || opts.type == 'area' || opts.type == 'column' || opts.type == 'candle' || opts.type == 'mix')) {
    drawToolTipHorizentalLine(opts, config, context, eachSpacing, xAxisPoints);
  }
  context.save();
  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0 && opts.enableScroll === true) {
    context.translate(opts._scrollDistance_, 0);
  }
  if (opts.tooltip && opts.tooltip.textList && opts.tooltip.textList.length && process === 1) {
    drawToolTip(opts.tooltip.textList, opts.tooltip.offset, opts, config, context, eachSpacing, xAxisPoints);
  }
  context.restore();

}

function drawXAxis(categories, opts, config, context) {

  var xAxisData = opts.chartData.xAxisData,
  xAxisPoints = xAxisData.xAxisPoints,
  startX = xAxisData.startX,
  endX = xAxisData.endX,
  eachSpacing = xAxisData.eachSpacing;
  var boundaryGap = 'center';
  if (opts.type == 'line' || opts.type == 'area') {
    boundaryGap = opts.xAxis.boundaryGap;
  }
  var startY = opts.height - opts.area[2];
  var endY = opts.area[0];

  //绘制滚动条
  if (opts.enableScroll && opts.xAxis.scrollShow) {
    var scrollY = opts.height - opts.area[2] + config.xAxisHeight;
    var scrollScreenWidth = endX - startX;
    var scrollTotalWidth = eachSpacing * (xAxisPoints.length - 1);
    var scrollWidth = scrollScreenWidth * scrollScreenWidth / scrollTotalWidth;
    var scrollLeft = 0;
    if (opts._scrollDistance_) {
      scrollLeft = -opts._scrollDistance_ * scrollScreenWidth / scrollTotalWidth;
    }
    context.beginPath();
    context.setLineCap('round');
    context.setLineWidth(6 * opts.pixelRatio);
    context.setStrokeStyle(opts.xAxis.scrollBackgroundColor || "#EFEBEF");
    context.moveTo(startX, scrollY);
    context.lineTo(endX, scrollY);
    context.stroke();
    context.closePath();
    context.beginPath();
    context.setLineCap('round');
    context.setLineWidth(6 * opts.pixelRatio);
    context.setStrokeStyle(opts.xAxis.scrollColor || "#A6A6A6");
    context.moveTo(startX + scrollLeft, scrollY);
    context.lineTo(startX + scrollLeft + scrollWidth, scrollY);
    context.stroke();
    context.closePath();
    context.setLineCap('butt');
  }

  context.save();

  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {
    context.translate(opts._scrollDistance_, 0);
  }

  //绘制X轴刻度线
  if (opts.xAxis.calibration === true) {
    context.setStrokeStyle(opts.xAxis.gridColor || "#cccccc");
    context.setLineCap('butt');
    context.setLineWidth(1 * opts.pixelRatio);
    xAxisPoints.forEach(function (item, index) {
      if (index > 0) {
        context.beginPath();
        context.moveTo(item - eachSpacing / 2, startY);
        context.lineTo(item - eachSpacing / 2, startY + 3 * opts.pixelRatio);
        context.closePath();
        context.stroke();
      }
    });
  }
  //绘制X轴网格
  if (opts.xAxis.disableGrid !== true) {
    context.setStrokeStyle(opts.xAxis.gridColor || "#cccccc");
    context.setLineCap('butt');
    context.setLineWidth(1 * opts.pixelRatio);
    if (opts.xAxis.gridType == 'dash') {
      context.setLineDash([opts.xAxis.dashLength, opts.xAxis.dashLength]);
    }
    opts.xAxis.gridEval = opts.xAxis.gridEval || 1;
    xAxisPoints.forEach(function (item, index) {
      if (index % opts.xAxis.gridEval == 0) {
        context.beginPath();
        context.moveTo(item, startY);
        context.lineTo(item, endY);
        context.stroke();
      }
    });
    context.setLineDash([]);
  }


  //绘制X轴文案
  if (opts.xAxis.disabled !== true) {
    // 对X轴列表做抽稀处理
    //默认全部显示X轴标签
    var maxXAxisListLength = categories.length;
    //如果设置了X轴单屏数量
    if (opts.xAxis.labelCount) {
      //如果设置X轴密度
      if (opts.xAxis.itemCount) {
        maxXAxisListLength = Math.ceil(categories.length / opts.xAxis.itemCount * opts.xAxis.labelCount);
      } else {
        maxXAxisListLength = opts.xAxis.labelCount;
      }
      maxXAxisListLength -= 1;
    }

    var ratio = Math.ceil(categories.length / maxXAxisListLength);

    var newCategories = [];
    var cgLength = categories.length;
    for (var i = 0; i < cgLength; i++) {
      if (i % ratio !== 0) {
        newCategories.push("");
      } else {
        newCategories.push(categories[i]);
      }
    }
    newCategories[cgLength - 1] = categories[cgLength - 1];

    var xAxisFontSize = opts.xAxis.fontSize || config.fontSize;
    if (config._xAxisTextAngle_ === 0) {
      newCategories.forEach(function (item, index) {
        var offset = -measureText(String(item), xAxisFontSize) / 2;
        if (boundaryGap == 'center') {
          offset += eachSpacing / 2;
        }
        var scrollHeight = 0;
        if (opts.xAxis.scrollShow) {
          scrollHeight = 6 * opts.pixelRatio;
        }
        context.beginPath();
        context.setFontSize(xAxisFontSize);
        context.setFillStyle(opts.xAxis.fontColor || '#666666');
        context.fillText(String(item), xAxisPoints[index] + offset, startY + xAxisFontSize + (config.xAxisHeight - scrollHeight - xAxisFontSize) / 2);
        context.closePath();
        context.stroke();
      });

    } else {
      newCategories.forEach(function (item, index) {
        context.save();
        context.beginPath();
        context.setFontSize(xAxisFontSize);
        context.setFillStyle(opts.xAxis.fontColor || '#666666');
        var textWidth = measureText(String(item), xAxisFontSize);
        var offset = -textWidth;
        if (boundaryGap == 'center') {
          offset += eachSpacing / 2;
        }
        var _calRotateTranslate = calRotateTranslate(xAxisPoints[index] + eachSpacing / 2, startY + xAxisFontSize / 2 + 5, opts.height),
        transX = _calRotateTranslate.transX,
        transY = _calRotateTranslate.transY;

        context.rotate(-1 * config._xAxisTextAngle_);
        context.translate(transX, transY);
        context.fillText(String(item), xAxisPoints[index] + offset, startY + xAxisFontSize + 5);
        context.closePath();
        context.stroke();
        context.restore();
      });
    }
  }
  context.restore();

  //绘制X轴轴线
  if (opts.xAxis.axisLine) {
    context.beginPath();
    context.setStrokeStyle(opts.xAxis.axisLineColor);
    context.setLineWidth(1 * opts.pixelRatio);
    context.moveTo(startX, opts.height - opts.area[2]);
    context.lineTo(endX, opts.height - opts.area[2]);
    context.stroke();
  }
}

function drawYAxisGrid(categories, opts, config, context) {
  if (opts.yAxis.disableGrid === true) {
    return;
  }
  var spacingValid = opts.height - opts.area[0] - opts.area[2];
  var eachSpacing = spacingValid / opts.yAxis.splitNumber;
  var startX = opts.area[3];
  var xAxisPoints = opts.chartData.xAxisData.xAxisPoints,
  xAxiseachSpacing = opts.chartData.xAxisData.eachSpacing;
  var TotalWidth = xAxiseachSpacing * (xAxisPoints.length - 1);
  var endX = startX + TotalWidth;

  var points = [];
  for (var i = 0; i < opts.yAxis.splitNumber + 1; i++) {
    points.push(opts.height - opts.area[2] - eachSpacing * i);
  }

  context.save();
  if (opts._scrollDistance_ && opts._scrollDistance_ !== 0) {
    context.translate(opts._scrollDistance_, 0);
  }

  if (opts.yAxis.gridType == 'dash') {
    context.setLineDash([opts.yAxis.dashLength, opts.yAxis.dashLength]);
  }
  context.setStrokeStyle(opts.yAxis.gridColor);
  context.setLineWidth(1 * opts.pixelRatio);
  points.forEach(function (item, index) {
    context.beginPath();
    context.moveTo(startX, item);
    context.lineTo(endX, item);
    context.stroke();
  });
  context.setLineDash([]);

  context.restore();
}

function drawYAxis(series, opts, config, context) {
  if (opts.yAxis.disabled === true) {
    return;
  }
  var spacingValid = opts.height - opts.area[0] - opts.area[2];
  var eachSpacing = spacingValid / opts.yAxis.splitNumber;
  var startX = opts.area[3];
  var endX = opts.width - opts.area[1];
  var endY = opts.height - opts.area[2];
  var fillEndY = endY + config.xAxisHeight;
  if (opts.xAxis.scrollShow) {
    fillEndY -= 3 * opts.pixelRatio;
  }
  if (opts.xAxis.rotateLabel) {
    fillEndY = opts.height - opts.area[2] + 3;
  }
  // set YAxis background
  context.beginPath();
  context.setFillStyle(opts.background || '#ffffff');
  if (opts._scrollDistance_ < 0) {
    context.fillRect(0, 0, startX, fillEndY);
  }
  if (opts.enableScroll == true) {
    context.fillRect(endX, 0, opts.width, fillEndY);
  }
  context.closePath();
  context.stroke();

  var points = [];
  for (var i = 0; i <= opts.yAxis.splitNumber; i++) {
    points.push(opts.area[0] + eachSpacing * i);
  }

  var tStartLeft = opts.area[3];
  var tStartRight = opts.width - opts.area[1];var _loop4 = function _loop4(

  _i17) {
    var yData = opts.yAxis.data[_i17];
    if (yData.disabled !== true) {
      var rangesFormat = opts.chartData.yAxisData.rangesFormat[_i17];
      var yAxisFontSize = yData.fontSize || config.fontSize;
      var yAxisWidth = opts.chartData.yAxisData.yAxisWidth[_i17];
      //画Y轴刻度及文案
      rangesFormat.forEach(function (item, index) {
        var pos = points[index] ? points[index] : endY;
        context.beginPath();
        context.setFontSize(yAxisFontSize);
        context.setLineWidth(1 * opts.pixelRatio);
        context.setStrokeStyle(yData.axisLineColor || '#cccccc');
        context.setFillStyle(yData.fontColor || '#666666');
        if (yAxisWidth.position == 'left') {
          context.fillText(String(item), tStartLeft - yAxisWidth.width, pos + yAxisFontSize / 2);
          //画刻度线
          if (yData.calibration == true) {
            context.moveTo(tStartLeft, pos);
            context.lineTo(tStartLeft - 3 * opts.pixelRatio, pos);
          }
        } else {
          context.fillText(String(item), tStartRight + 4 * opts.pixelRatio, pos + yAxisFontSize / 2);
          //画刻度线
          if (yData.calibration == true) {
            context.moveTo(tStartRight, pos);
            context.lineTo(tStartRight + 3 * opts.pixelRatio, pos);
          }
        }
        context.closePath();
        context.stroke();
      });
      //画Y轴轴线

      if (yData.axisLine !== false) {
        context.beginPath();
        context.setStrokeStyle(yData.axisLineColor || '#cccccc');
        context.setLineWidth(1 * opts.pixelRatio);
        if (yAxisWidth.position == 'left') {
          context.moveTo(tStartLeft, opts.height - opts.area[2]);
          context.lineTo(tStartLeft, opts.area[0]);
        } else {
          context.moveTo(tStartRight, opts.height - opts.area[2]);
          context.lineTo(tStartRight, opts.area[0]);
        }
        context.stroke();
      }

      //画Y轴标题
      if (opts.yAxis.showTitle) {

        var titleFontSize = yData.titleFontSize || config.fontSize;
        var title = yData.title;
        context.beginPath();
        context.setFontSize(titleFontSize);
        context.setFillStyle(yData.titleFontColor || '#666666');
        if (yAxisWidth.position == 'left') {
          context.fillText(title, tStartLeft - measureText(title, titleFontSize) / 2, opts.area[0] - 10 * opts.pixelRatio);
        } else {
          context.fillText(title, tStartRight - measureText(title, titleFontSize) / 2, opts.area[0] - 10 * opts.pixelRatio);
        }
        context.closePath();
        context.stroke();
      }
      if (yAxisWidth.position == 'left') {
        tStartLeft -= yAxisWidth.width + opts.yAxis.padding;
      } else {
        tStartRight += yAxisWidth.width + opts.yAxis.padding;
      }
    }};for (var _i17 = 0; _i17 < opts.yAxis.data.length; _i17++) {_loop4(_i17);
  }
}

function drawLegend(series, opts, config, context, chartData) {
  if (opts.legend.show === false) {
    return;
  }
  var legendData = chartData.legendData;
  var legendList = legendData.points;
  var legendArea = legendData.area;
  var padding = opts.legend.padding;
  var fontSize = opts.legend.fontSize;
  var shapeWidth = 15 * opts.pixelRatio;
  var shapeRight = 5 * opts.pixelRatio;
  var itemGap = opts.legend.itemGap;
  var lineHeight = Math.max(opts.legend.lineHeight * opts.pixelRatio, fontSize);

  //画背景及边框
  context.beginPath();
  context.setLineWidth(opts.legend.borderWidth);
  context.setStrokeStyle(opts.legend.borderColor);
  context.setFillStyle(opts.legend.backgroundColor);
  context.moveTo(legendArea.start.x, legendArea.start.y);
  context.rect(legendArea.start.x, legendArea.start.y, legendArea.width, legendArea.height);
  context.closePath();
  context.fill();
  context.stroke();

  legendList.forEach(function (itemList, listIndex) {
    var width = 0;
    var height = 0;
    width = legendData.widthArr[listIndex];
    height = legendData.heightArr[listIndex];
    var startX = 0;
    var startY = 0;
    if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {
      startX = legendArea.start.x + (legendArea.width - width) / 2;
      startY = legendArea.start.y + padding + listIndex * lineHeight;
    } else {
      if (listIndex == 0) {
        width = 0;
      } else {
        width = legendData.widthArr[listIndex - 1];
      }
      startX = legendArea.start.x + padding + width;
      startY = legendArea.start.y + padding + (legendArea.height - height) / 2;
    }

    context.setFontSize(config.fontSize);
    for (var i = 0; i < itemList.length; i++) {
      var item = itemList[i];
      item.area = [0, 0, 0, 0];
      item.area[0] = startX;
      item.area[1] = startY;
      item.area[3] = startY + lineHeight;
      context.beginPath();
      context.setLineWidth(1 * opts.pixelRatio);
      context.setStrokeStyle(item.show ? item.color : opts.legend.hiddenColor);
      context.setFillStyle(item.show ? item.color : opts.legend.hiddenColor);
      switch (item.legendShape) {
        case 'line':
          context.moveTo(startX, startY + 0.5 * lineHeight - 2 * opts.pixelRatio);
          context.fillRect(startX, startY + 0.5 * lineHeight - 2 * opts.pixelRatio, 15 * opts.pixelRatio, 4 * opts.pixelRatio);
          break;
        case 'triangle':
          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          context.lineTo(startX + 2.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);
          context.lineTo(startX + 12.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);
          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          break;
        case 'diamond':
          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          context.lineTo(startX + 2.5 * opts.pixelRatio, startY + 0.5 * lineHeight);
          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight + 5 * opts.pixelRatio);
          context.lineTo(startX + 12.5 * opts.pixelRatio, startY + 0.5 * lineHeight);
          context.lineTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          break;
        case 'circle':
          context.moveTo(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight);
          context.arc(startX + 7.5 * opts.pixelRatio, startY + 0.5 * lineHeight, 5 * opts.pixelRatio, 0, 2 * Math.PI);
          break;
        case 'rect':
          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio, 15 * opts.pixelRatio, 10 * opts.pixelRatio);
          break;
        default:
          context.moveTo(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio);
          context.fillRect(startX, startY + 0.5 * lineHeight - 5 * opts.pixelRatio, 15 * opts.pixelRatio, 10 * opts.pixelRatio);}

      context.closePath();
      context.fill();
      context.stroke();

      startX += shapeWidth + shapeRight;
      var fontTrans = 0.5 * lineHeight + 0.5 * fontSize - 2;
      context.beginPath();
      context.setFontSize(fontSize);
      context.setFillStyle(item.show ? opts.legend.fontColor : opts.legend.hiddenColor);
      context.fillText(item.name, startX, startY + fontTrans);
      context.closePath();
      context.stroke();
      if (opts.legend.position == 'top' || opts.legend.position == 'bottom') {
        startX += measureText(item.name, fontSize) + itemGap;
        item.area[2] = startX;
      } else {
        item.area[2] = startX + measureText(item.name, fontSize) + itemGap;;
        startX -= shapeWidth + shapeRight;
        startY += lineHeight;
      }
    }
  });
}

function drawPieDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var pieOption = assign({}, {
    activeOpacity: 0.5,
    activeRadius: 10 * opts.pixelRatio,
    offsetAngle: 0,
    labelWidth: 15 * opts.pixelRatio,
    ringWidth: 0,
    border: false,
    borderWidth: 2,
    borderColor: '#FFFFFF' },
  opts.extra.pie);
  var centerPosition = {
    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,
    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };

  if (config.pieChartLinePadding == 0) {
    config.pieChartLinePadding = pieOption.activeRadius;
  }

  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);

  series = getPieDataPoints(series, radius, process);

  var activeRadius = pieOption.activeRadius;

  series = series.map(function (eachSeries) {
    eachSeries._start_ += pieOption.offsetAngle * Math.PI / 180;
    return eachSeries;
  });
  series.forEach(function (eachSeries, seriesIndex) {
    if (opts.tooltip) {
      if (opts.tooltip.index == seriesIndex) {
        context.beginPath();
        context.setFillStyle(hexToRgb(eachSeries.color, opts.extra.pie.activeOpacity || 0.5));
        context.moveTo(centerPosition.x, centerPosition.y);
        context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_ + activeRadius, eachSeries._start_,
        eachSeries._start_ + 2 *
        eachSeries._proportion_ * Math.PI);
        context.closePath();
        context.fill();
      }
    }
    context.beginPath();
    context.setLineWidth(pieOption.borderWidth * opts.pixelRatio);
    context.lineJoin = "round";
    context.setStrokeStyle(pieOption.borderColor);
    context.setFillStyle(eachSeries.color);
    context.moveTo(centerPosition.x, centerPosition.y);
    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 * eachSeries._proportion_ * Math.PI);
    context.closePath();
    context.fill();
    if (pieOption.border == true) {
      context.stroke();
    }
  });

  if (opts.type === 'ring') {
    var innerPieWidth = radius * 0.6;
    if (typeof opts.extra.pie.ringWidth === 'number' && opts.extra.pie.ringWidth > 0) {
      innerPieWidth = Math.max(0, radius - opts.extra.pie.ringWidth);
    }
    context.beginPath();
    context.setFillStyle(opts.background || '#ffffff');
    context.moveTo(centerPosition.x, centerPosition.y);
    context.arc(centerPosition.x, centerPosition.y, innerPieWidth, 0, 2 * Math.PI);
    context.closePath();
    context.fill();
  }

  if (opts.dataLabel !== false && process === 1) {
    var valid = false;
    for (var i = 0, len = series.length; i < len; i++) {
      if (series[i].data > 0) {
        valid = true;
        break;
      }
    }

    if (valid) {
      drawPieText(series, opts, config, context, radius, centerPosition);
    }
  }

  if (process === 1 && opts.type === 'ring') {
    drawRingTitle(opts, config, context, centerPosition);
  }

  return {
    center: centerPosition,
    radius: radius,
    series: series };

}

function drawRoseDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var roseOption = assign({}, {
    type: 'area',
    activeOpacity: 0.5,
    activeRadius: 10 * opts.pixelRatio,
    offsetAngle: 0,
    labelWidth: 15 * opts.pixelRatio,
    border: false,
    borderWidth: 2,
    borderColor: '#FFFFFF' },
  opts.extra.rose);
  if (config.pieChartLinePadding == 0) {
    config.pieChartLinePadding = roseOption.activeRadius;
  }
  var centerPosition = {
    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,
    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };

  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding - config._pieTextMaxLength_, (opts.height - opts.area[0] - opts.area[2]) / 2 - config.pieChartLinePadding - config.pieChartTextPadding);
  var minRadius = roseOption.minRadius || radius * 0.5;

  series = getRoseDataPoints(series, roseOption.type, minRadius, radius, process);

  var activeRadius = roseOption.activeRadius;

  series = series.map(function (eachSeries) {
    eachSeries._start_ += (roseOption.offsetAngle || 0) * Math.PI / 180;
    return eachSeries;
  });

  series.forEach(function (eachSeries, seriesIndex) {
    if (opts.tooltip) {
      if (opts.tooltip.index == seriesIndex) {
        context.beginPath();
        context.setFillStyle(hexToRgb(eachSeries.color, roseOption.activeOpacity || 0.5));
        context.moveTo(centerPosition.x, centerPosition.y);
        context.arc(centerPosition.x, centerPosition.y, activeRadius + eachSeries._radius_, eachSeries._start_,
        eachSeries._start_ + 2 * eachSeries._rose_proportion_ * Math.PI);
        context.closePath();
        context.fill();
      }
    }
    context.beginPath();
    context.setLineWidth(roseOption.borderWidth * opts.pixelRatio);
    context.lineJoin = "round";
    context.setStrokeStyle(roseOption.borderColor);
    context.setFillStyle(eachSeries.color);
    context.moveTo(centerPosition.x, centerPosition.y);
    context.arc(centerPosition.x, centerPosition.y, eachSeries._radius_, eachSeries._start_, eachSeries._start_ + 2 *
    eachSeries._rose_proportion_ * Math.PI);
    context.closePath();
    context.fill();
    if (roseOption.border == true) {
      context.stroke();
    }
  });

  if (opts.dataLabel !== false && process === 1) {
    var valid = false;
    for (var i = 0, len = series.length; i < len; i++) {
      if (series[i].data > 0) {
        valid = true;
        break;
      }
    }

    if (valid) {
      drawPieText(series, opts, config, context, radius, centerPosition);
    }
  }

  return {
    center: centerPosition,
    radius: radius,
    series: series };

}

function drawArcbarDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var arcbarOption = assign({}, {
    startAngle: 0.75,
    endAngle: 0.25,
    type: 'default',
    width: 12 * opts.pixelRatio,
    gap: 2 * opts.pixelRatio },
  opts.extra.arcbar);

  series = getArcbarDataPoints(series, arcbarOption, process);

  var centerPosition;
  if (arcbarOption.center) {
    centerPosition = arcbarOption.center;
  } else {
    centerPosition = {
      x: opts.width / 2,
      y: opts.height / 2 };

  }

  var radius;
  if (arcbarOption.radius) {
    radius = arcbarOption.radius;
  } else {
    radius = Math.min(centerPosition.x, centerPosition.y);
    radius -= 5 * opts.pixelRatio;
    radius -= arcbarOption.width / 2;
  }

  for (var i = 0; i < series.length; i++) {
    var eachSeries = series[i];
    //背景颜色
    context.setLineWidth(arcbarOption.width);
    context.setStrokeStyle(arcbarOption.backgroundColor || '#E9E9E9');
    context.setLineCap('round');
    context.beginPath();
    if (arcbarOption.type == 'default') {
      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, arcbarOption.startAngle * Math.PI, arcbarOption.endAngle * Math.PI, false);
    } else {
      context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, 0, 2 * Math.PI, false);
    }
    context.stroke();
    //进度条
    context.setLineWidth(arcbarOption.width);
    context.setStrokeStyle(eachSeries.color);
    context.setLineCap(opts.arcbarLineCap);
    context.beginPath();
    context.arc(centerPosition.x, centerPosition.y, radius - (arcbarOption.width + arcbarOption.gap) * i, arcbarOption.startAngle * Math.PI, eachSeries._proportion_ * Math.PI, false);
    context.stroke();
  }

  drawRingTitle(opts, config, context, centerPosition);

  return {
    center: centerPosition,
    radius: radius,
    series: series };

}

function drawGaugeDataPoints(categories, series, opts, config, context) {
  var process = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;
  var gaugeOption = assign({}, {
    type: 'default',
    startAngle: 0.75,
    endAngle: 0.25,
    width: 15,
    splitLine: {
      fixRadius: 0,
      splitNumber: 10,
      width: 15,
      color: '#FFFFFF',
      childNumber: 5,
      childWidth: 5 },

    pointer: {
      width: 15,
      color: 'auto' } },

  opts.extra.gauge);

  if (gaugeOption.oldAngle == undefined) {
    gaugeOption.oldAngle = gaugeOption.startAngle;
  }
  if (gaugeOption.oldData == undefined) {
    gaugeOption.oldData = 0;
  }
  categories = getGaugeAxisPoints(categories, gaugeOption.startAngle, gaugeOption.endAngle);

  var centerPosition = {
    x: opts.width / 2,
    y: opts.height / 2 };

  var radius = Math.min(centerPosition.x, centerPosition.y);
  radius -= 5 * opts.pixelRatio;
  radius -= gaugeOption.width / 2;
  var innerRadius = radius - gaugeOption.width;
  var totalAngle = 0;

  //判断仪表盘的样式：default百度样式，progress新样式
  if (gaugeOption.type == 'progress') {

    //## 第一步画中心圆形背景和进度条背景
    //中心圆形背景
    var pieRadius = radius - gaugeOption.width * 3;
    context.beginPath();
    var gradient = context.createLinearGradient(centerPosition.x, centerPosition.y - pieRadius, centerPosition.x, centerPosition.y + pieRadius);
    //配置渐变填充（起点：中心点向上减半径；结束点中心点向下加半径）
    gradient.addColorStop('0', hexToRgb(series[0].color, 0.3));
    gradient.addColorStop('1.0', hexToRgb("#FFFFFF", 0.1));
    context.setFillStyle(gradient);
    context.arc(centerPosition.x, centerPosition.y, pieRadius, 0, 2 * Math.PI, false);
    context.fill();
    //画进度条背景
    context.setLineWidth(gaugeOption.width);
    context.setStrokeStyle(hexToRgb(series[0].color, 0.3));
    context.setLineCap('round');
    context.beginPath();
    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, gaugeOption.endAngle * Math.PI, false);
    context.stroke();

    //## 第二步画刻度线
    totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;
    var splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;
    var childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;
    var startX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;
    var endX = -radius - gaugeOption.width - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;
    context.save();
    context.translate(centerPosition.x, centerPosition.y);
    context.rotate((gaugeOption.startAngle - 1) * Math.PI);
    var len = gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1;
    var proc = series[0].data * process;
    for (var i = 0; i < len; i++) {
      context.beginPath();
      //刻度线随进度变色
      if (proc > i / len) {
        context.setStrokeStyle(hexToRgb(series[0].color, 1));
      } else {
        context.setStrokeStyle(hexToRgb(series[0].color, 0.3));
      }
      context.setLineWidth(3 * opts.pixelRatio);
      context.moveTo(startX, 0);
      context.lineTo(endX, 0);
      context.stroke();
      context.rotate(childAngle * Math.PI);
    }
    context.restore();

    //## 第三步画进度条
    series = getArcbarDataPoints(series, gaugeOption, process);
    context.setLineWidth(gaugeOption.width);
    context.setStrokeStyle(series[0].color);
    context.setLineCap('round');
    context.beginPath();
    context.arc(centerPosition.x, centerPosition.y, innerRadius, gaugeOption.startAngle * Math.PI, series[0]._proportion_ * Math.PI, false);
    context.stroke();

    //## 第四步画指针
    var pointerRadius = radius - gaugeOption.width * 2.5;
    context.save();
    context.translate(centerPosition.x, centerPosition.y);
    context.rotate((series[0]._proportion_ - 1) * Math.PI);
    context.beginPath();
    context.setLineWidth(gaugeOption.width / 3);
    var gradient3 = context.createLinearGradient(0, -pointerRadius * 0.6, 0, pointerRadius * 0.6);
    gradient3.addColorStop('0', hexToRgb('#FFFFFF', 0));
    gradient3.addColorStop('0.5', hexToRgb(series[0].color, 1));
    gradient3.addColorStop('1.0', hexToRgb('#FFFFFF', 0));
    context.setStrokeStyle(gradient3);
    context.arc(0, 0, pointerRadius, 0.85 * Math.PI, 1.15 * Math.PI, false);
    context.stroke();
    context.beginPath();
    context.setLineWidth(1);
    context.setStrokeStyle(series[0].color);
    context.setFillStyle(series[0].color);
    context.moveTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);
    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2 - 4, 0);
    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, 4);
    context.lineTo(-pointerRadius - gaugeOption.width / 3 / 2, -4);
    context.stroke();
    context.fill();
    context.restore();

    //default百度样式
  } else {
    //画背景
    context.setLineWidth(gaugeOption.width);
    context.setLineCap('butt');
    for (var _i18 = 0; _i18 < categories.length; _i18++) {
      var eachCategories = categories[_i18];
      context.beginPath();
      context.setStrokeStyle(eachCategories.color);
      context.arc(centerPosition.x, centerPosition.y, radius, eachCategories._startAngle_ * Math.PI, eachCategories._endAngle_ * Math.PI, false);
      context.stroke();
    }
    context.save();

    //画刻度线
    totalAngle = gaugeOption.startAngle - gaugeOption.endAngle + 1;
    var _splitAngle = totalAngle / gaugeOption.splitLine.splitNumber;
    var _childAngle = totalAngle / gaugeOption.splitLine.splitNumber / gaugeOption.splitLine.childNumber;
    var _startX2 = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius;
    var _endX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.width;
    var childendX = -radius - gaugeOption.width * 0.5 - gaugeOption.splitLine.fixRadius + gaugeOption.splitLine.childWidth;

    context.translate(centerPosition.x, centerPosition.y);
    context.rotate((gaugeOption.startAngle - 1) * Math.PI);

    for (var _i19 = 0; _i19 < gaugeOption.splitLine.splitNumber + 1; _i19++) {
      context.beginPath();
      context.setStrokeStyle(gaugeOption.splitLine.color);
      context.setLineWidth(2 * opts.pixelRatio);
      context.moveTo(_startX2, 0);
      context.lineTo(_endX, 0);
      context.stroke();
      context.rotate(_splitAngle * Math.PI);
    }
    context.restore();

    context.save();
    context.translate(centerPosition.x, centerPosition.y);
    context.rotate((gaugeOption.startAngle - 1) * Math.PI);

    for (var _i20 = 0; _i20 < gaugeOption.splitLine.splitNumber * gaugeOption.splitLine.childNumber + 1; _i20++) {
      context.beginPath();
      context.setStrokeStyle(gaugeOption.splitLine.color);
      context.setLineWidth(1 * opts.pixelRatio);
      context.moveTo(_startX2, 0);
      context.lineTo(childendX, 0);
      context.stroke();
      context.rotate(_childAngle * Math.PI);
    }
    context.restore();

    //画指针
    series = getGaugeDataPoints(series, categories, gaugeOption, process);

    for (var _i21 = 0; _i21 < series.length; _i21++) {
      var eachSeries = series[_i21];
      context.save();
      context.translate(centerPosition.x, centerPosition.y);
      context.rotate((eachSeries._proportion_ - 1) * Math.PI);
      context.beginPath();
      context.setFillStyle(eachSeries.color);
      context.moveTo(gaugeOption.pointer.width, 0);
      context.lineTo(0, -gaugeOption.pointer.width / 2);
      context.lineTo(-innerRadius, 0);
      context.lineTo(0, gaugeOption.pointer.width / 2);
      context.lineTo(gaugeOption.pointer.width, 0);
      context.closePath();
      context.fill();
      context.beginPath();
      context.setFillStyle('#FFFFFF');
      context.arc(0, 0, gaugeOption.pointer.width / 6, 0, 2 * Math.PI, false);
      context.fill();
      context.restore();
    }

    if (opts.dataLabel !== false) {
      drawGaugeLabel(gaugeOption, radius, centerPosition, opts, config, context);
    }
  }

  //画仪表盘标题，副标题
  drawRingTitle(opts, config, context, centerPosition);

  if (process === 1 && opts.type === 'gauge') {
    opts.extra.gauge.oldAngle = series[0]._proportion_;
    opts.extra.gauge.oldData = series[0].data;
  }
  return {
    center: centerPosition,
    radius: radius,
    innerRadius: innerRadius,
    categories: categories,
    totalAngle: totalAngle };

}

function drawRadarDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var radarOption = assign({}, {
    gridColor: '#cccccc',
    labelColor: '#666666',
    opacity: 0.2,
    gridCount: 3 },
  opts.extra.radar);

  var coordinateAngle = getRadarCoordinateSeries(opts.categories.length);

  var centerPosition = {
    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,
    y: opts.area[0] + (opts.height - opts.area[0] - opts.area[2]) / 2 };


  var radius = Math.min(centerPosition.x - (getMaxTextListLength(opts.categories) + config.radarLabelTextMargin),
  centerPosition.y - config.radarLabelTextMargin);
  //TODO逻辑不对
  radius -= opts.padding[1];

  // draw grid
  context.beginPath();
  context.setLineWidth(1 * opts.pixelRatio);
  context.setStrokeStyle(radarOption.gridColor);
  coordinateAngle.forEach(function (angle) {
    var pos = convertCoordinateOrigin(radius * Math.cos(angle), radius * Math.sin(angle), centerPosition);
    context.moveTo(centerPosition.x, centerPosition.y);
    context.lineTo(pos.x, pos.y);
  });
  context.stroke();
  context.closePath();
  // draw split line grid

  var _loop = function _loop(i) {
    var startPos = {};
    context.beginPath();
    context.setLineWidth(1 * opts.pixelRatio);
    context.setStrokeStyle(radarOption.gridColor);
    coordinateAngle.forEach(function (angle, index) {
      var pos = convertCoordinateOrigin(radius / radarOption.gridCount * i * Math.cos(angle), radius / radarOption.gridCount * i * Math.sin(angle), centerPosition);
      if (index === 0) {
        startPos = pos;
        context.moveTo(pos.x, pos.y);
      } else {
        context.lineTo(pos.x, pos.y);
      }
    });
    context.lineTo(startPos.x, startPos.y);
    context.stroke();
    context.closePath();
  };

  for (var i = 1; i <= radarOption.gridCount; i++) {
    _loop(i);
  }

  var radarDataPoints = getRadarDataPoints(coordinateAngle, centerPosition, radius, series, opts, process);

  radarDataPoints.forEach(function (eachSeries, seriesIndex) {
    // 绘制区域数据
    context.beginPath();
    context.setFillStyle(hexToRgb(eachSeries.color, radarOption.opacity));
    eachSeries.data.forEach(function (item, index) {
      if (index === 0) {
        context.moveTo(item.position.x, item.position.y);
      } else {
        context.lineTo(item.position.x, item.position.y);
      }
    });
    context.closePath();
    context.fill();

    if (opts.dataPointShape !== false) {
      var points = eachSeries.data.map(function (item) {
        return item.position;
      });
      drawPointShape(points, eachSeries.color, eachSeries.pointShape, context, opts);
    }
  });
  // draw label text
  drawRadarLabel(coordinateAngle, radius, centerPosition, opts, config, context);

  return {
    center: centerPosition,
    radius: radius,
    angleList: coordinateAngle };

}

function normalInt(min, max, iter) {
  iter = iter == 0 ? 1 : iter;
  var arr = [];
  for (var i = 0; i < iter; i++) {
    arr[i] = Math.random();
  };
  return Math.floor(arr.reduce(function (i, j) {return i + j;}) / iter * (max - min)) + min;
};

function collisionNew(area, points, width, height) {
  var isIn = false;
  for (var i = 0; i < points.length; i++) {
    if (points[i].area) {
      if (area[3] < points[i].area[1] || area[0] > points[i].area[2] || area[1] > points[i].area[3] || area[2] < points[i].area[0]) {
        if (area[0] < 0 || area[1] < 0 || area[2] > width || area[3] > height) {
          isIn = true;
          break;
        } else {
          isIn = false;
        }
      } else {
        isIn = true;
        break;
      }
    }
  }
  return isIn;
};

function getBoundingBox(data) {
  var bounds = {},coords;
  bounds.xMin = 180;
  bounds.xMax = 0;
  bounds.yMin = 90;
  bounds.yMax = 0;
  for (var i = 0; i < data.length; i++) {
    var coorda = data[i].geometry.coordinates;
    for (var k = 0; k < coorda.length; k++) {
      coords = coorda[k];
      if (coords.length == 1) {
        coords = coords[0];
      }
      for (var j = 0; j < coords.length; j++) {
        var longitude = coords[j][0];
        var latitude = coords[j][1];
        var point = {
          x: longitude,
          y: latitude };

        bounds.xMin = bounds.xMin < point.x ? bounds.xMin : point.x;
        bounds.xMax = bounds.xMax > point.x ? bounds.xMax : point.x;
        bounds.yMin = bounds.yMin < point.y ? bounds.yMin : point.y;
        bounds.yMax = bounds.yMax > point.y ? bounds.yMax : point.y;
      }
    }
  }
  return bounds;
}

function coordinateToPoint(latitude, longitude, bounds, scale, xoffset, yoffset) {
  return {
    x: (longitude - bounds.xMin) * scale + xoffset,
    y: (bounds.yMax - latitude) * scale + yoffset };

}

function pointToCoordinate(pointY, pointX, bounds, scale, xoffset, yoffset) {
  return {
    x: (pointX - xoffset) / scale + bounds.xMin,
    y: bounds.yMax - (pointY - yoffset) / scale };

}

function isRayIntersectsSegment(poi, s_poi, e_poi) {
  if (s_poi[1] == e_poi[1]) {return false;}
  if (s_poi[1] > poi[1] && e_poi[1] > poi[1]) {return false;}
  if (s_poi[1] < poi[1] && e_poi[1] < poi[1]) {return false;}
  if (s_poi[1] == poi[1] && e_poi[1] > poi[1]) {return false;}
  if (e_poi[1] == poi[1] && s_poi[1] > poi[1]) {return false;}
  if (s_poi[0] < poi[0] && e_poi[1] < poi[1]) {return false;}
  var xseg = e_poi[0] - (e_poi[0] - s_poi[0]) * (e_poi[1] - poi[1]) / (e_poi[1] - s_poi[1]);
  if (xseg < poi[0]) {
    return false;
  } else {
    return true;
  }
}

function isPoiWithinPoly(poi, poly) {
  var sinsc = 0;
  for (var i = 0; i < poly.length; i++) {
    var epoly = poly[i][0];
    if (poly.length == 1) {
      epoly = poly[i][0];
    }
    for (var j = 0; j < epoly.length - 1; j++) {
      var s_poi = epoly[j];
      var e_poi = epoly[j + 1];
      if (isRayIntersectsSegment(poi, s_poi, e_poi)) {
        sinsc += 1;
      }
    }
  }

  if (sinsc % 2 == 1) {
    return true;
  } else {
    return false;
  }
}


function drawMapDataPoints(series, opts, config, context) {
  var mapOption = assign({}, {
    border: true,
    borderWidth: 1,
    borderColor: '#666666',
    fillOpacity: 0.6,
    activeBorderColor: '#f04864',
    activeFillColor: '#facc14',
    activeFillOpacity: 1 },
  opts.extra.map);
  var coords, point;
  var data = series;
  var bounds = getBoundingBox(data);
  var xScale = opts.width / Math.abs(bounds.xMax - bounds.xMin);
  var yScale = opts.height / Math.abs(bounds.yMax - bounds.yMin);
  var scale = xScale < yScale ? xScale : yScale;
  var xoffset = opts.width / 2 - Math.abs(bounds.xMax - bounds.xMin) / 2 * scale;
  var yoffset = opts.height / 2 - Math.abs(bounds.yMax - bounds.yMin) / 2 * scale;
  context.beginPath();
  context.clearRect(0, 0, opts.width, opts.height);
  context.setFillStyle(opts.background || '#FFFFFF');
  context.rect(0, 0, opts.width, opts.height);
  context.fill();
  for (var i = 0; i < data.length; i++) {
    context.beginPath();
    context.setLineWidth(mapOption.borderWidth * opts.pixelRatio);
    context.setStrokeStyle(mapOption.borderColor);
    context.setFillStyle(hexToRgb(series[i].color, mapOption.fillOpacity));
    if (opts.tooltip) {
      if (opts.tooltip.index == i) {
        context.setStrokeStyle(mapOption.activeBorderColor);
        context.setFillStyle(hexToRgb(mapOption.activeFillColor, mapOption.activeFillOpacity));
      }
    }
    var coorda = data[i].geometry.coordinates;
    for (var k = 0; k < coorda.length; k++) {
      coords = coorda[k];
      if (coords.length == 1) {
        coords = coords[0];
      }
      for (var j = 0; j < coords.length; j++) {
        point = coordinateToPoint(coords[j][1], coords[j][0], bounds, scale, xoffset, yoffset);
        if (j === 0) {
          context.beginPath();
          context.moveTo(point.x, point.y);
        } else {
          context.lineTo(point.x, point.y);
        }
      }
      context.fill();
      if (mapOption.border == true) {
        context.stroke();
      }
    }
    if (opts.dataLabel == true) {
      var centerPoint = data[i].properties.centroid;
      if (centerPoint) {
        point = coordinateToPoint(centerPoint[1], centerPoint[0], bounds, scale, xoffset, yoffset);
        var fontSize = data[i].textSize || config.fontSize;
        var text = data[i].properties.name;
        context.beginPath();
        context.setFontSize(fontSize);
        context.setFillStyle(data[i].textColor || '#666666');
        context.fillText(text, point.x - measureText(text, fontSize) / 2, point.y + fontSize / 2);
        context.closePath();
        context.stroke();
      }
    }
  }
  opts.chartData.mapData = {
    bounds: bounds,
    scale: scale,
    xoffset: xoffset,
    yoffset: yoffset };

  drawToolTipBridge(opts, config, context, 1);
  context.draw();
}

function getWordCloudPoint(opts, type) {
  var points = opts.series.sort(function (a, b) {return parseInt(b.textSize) - parseInt(a.textSize);});
  switch (type) {
    case 'normal':
      for (var i = 0; i < points.length; i++) {
        var text = points[i].name;
        var tHeight = points[i].textSize;
        var tWidth = measureText(text, tHeight);
        var x = void 0,y = void 0;
        var area = void 0;
        var breaknum = 0;
        while (true) {
          breaknum++;
          x = normalInt(-opts.width / 2, opts.width / 2, 5) - tWidth / 2;
          y = normalInt(-opts.height / 2, opts.height / 2, 5) + tHeight / 2;
          area = [x - 5 + opts.width / 2, y - 5 - tHeight + opts.height / 2, x + tWidth + 5 + opts.width / 2, y + 5 + opts.height / 2];
          var isCollision = collisionNew(area, points, opts.width, opts.height);
          if (!isCollision) break;
          if (breaknum == 1000) {
            area = [-100, -100, -100, -100];
            break;
          }
        };
        points[i].area = area;
      }
      break;
    case 'vertical':var
      Spin = function Spin() {
        //获取均匀随机值，是否旋转，旋转的概率为（1-0.5）
        if (Math.random() > 0.7) {
          return true;
        } else {return false;};
      };;
      for (var _i22 = 0; _i22 < points.length; _i22++) {
        var _text = points[_i22].name;
        var _tHeight = points[_i22].textSize;
        var _tWidth = measureText(_text, _tHeight);
        var isSpin = Spin();
        var _x = void 0,_y = void 0,_area = void 0,areav = void 0;
        var _breaknum = 0;
        while (true) {
          _breaknum++;
          var _isCollision = void 0;
          if (isSpin) {
            _x = normalInt(-opts.width / 2, opts.width / 2, 5) - _tWidth / 2;
            _y = normalInt(-opts.height / 2, opts.height / 2, 5) + _tHeight / 2;
            _area = [_y - 5 - _tWidth + opts.width / 2, -_x - 5 + opts.height / 2, _y + 5 + opts.width / 2, -_x + _tHeight + 5 + opts.height / 2];
            areav = [opts.width - (opts.width / 2 - opts.height / 2) - (-_x + _tHeight + 5 + opts.height / 2) - 5, opts.height / 2 - opts.width / 2 + (_y - 5 - _tWidth + opts.width / 2) - 5, opts.width - (opts.width / 2 - opts.height / 2) - (-_x + _tHeight + 5 + opts.height / 2) + _tHeight, opts.height / 2 - opts.width / 2 + (_y - 5 - _tWidth + opts.width / 2) + _tWidth + 5];
            _isCollision = collisionNew(areav, points, opts.height, opts.width);
          } else {
            _x = normalInt(-opts.width / 2, opts.width / 2, 5) - _tWidth / 2;
            _y = normalInt(-opts.height / 2, opts.height / 2, 5) + _tHeight / 2;
            _area = [_x - 5 + opts.width / 2, _y - 5 - _tHeight + opts.height / 2, _x + _tWidth + 5 + opts.width / 2, _y + 5 + opts.height / 2];
            _isCollision = collisionNew(_area, points, opts.width, opts.height);
          }
          if (!_isCollision) break;
          if (_breaknum == 1000) {
            _area = [-1000, -1000, -1000, -1000];
            break;
          }
        };
        if (isSpin) {
          points[_i22].area = areav;
          points[_i22].areav = _area;
        } else {
          points[_i22].area = _area;
        }
        points[_i22].rotate = isSpin;
      };
      break;}

  return points;
}


function drawWordCloudDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var wordOption = assign({}, {
    type: 'normal',
    autoColors: true },
  opts.extra.word);

  context.beginPath();
  context.setFillStyle(opts.background || '#FFFFFF');
  context.rect(0, 0, opts.width, opts.height);
  context.fill();
  context.save();
  var points = opts.chartData.wordCloudData;
  context.translate(opts.width / 2, opts.height / 2);

  for (var i = 0; i < points.length; i++) {
    context.save();
    if (points[i].rotate) {
      context.rotate(90 * Math.PI / 180);
    }
    var text = points[i].name;
    var tHeight = points[i].textSize;
    var tWidth = measureText(text, tHeight);
    context.beginPath();
    context.setStrokeStyle(points[i].color);
    context.setFillStyle(points[i].color);
    context.setFontSize(tHeight);
    if (points[i].rotate) {
      if (points[i].areav[0] > 0) {
        if (opts.tooltip) {
          if (opts.tooltip.index == i) {
            context.strokeText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);
          } else {
            context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);
          }
        } else {
          context.fillText(text, (points[i].areav[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].areav[1] + 5 + tHeight - opts.height / 2) * process);
        }
      }
    } else {
      if (points[i].area[0] > 0) {
        if (opts.tooltip) {
          if (opts.tooltip.index == i) {
            context.strokeText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);
          } else {
            context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);
          }
        } else {
          context.fillText(text, (points[i].area[0] + 5 - opts.width / 2) * process - tWidth * (1 - process) / 2, (points[i].area[1] + 5 + tHeight - opts.height / 2) * process);
        }

      }
    }

    context.stroke();
    context.restore();
  }
  context.restore();
}

function drawFunnelDataPoints(series, opts, config, context) {
  var process = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
  var funnelOption = assign({}, {
    activeWidth: 10,
    activeOpacity: 0.3,
    border: false,
    borderWidth: 2,
    borderColor: '#FFFFFF',
    fillOpacity: 1,
    labelAlign: 'right' },
  opts.extra.funnel);
  var eachSpacing = (opts.height - opts.area[0] - opts.area[2]) / series.length;
  var centerPosition = {
    x: opts.area[3] + (opts.width - opts.area[1] - opts.area[3]) / 2,
    y: opts.height - opts.area[2] };

  var activeWidth = funnelOption.activeWidth;
  var radius = Math.min((opts.width - opts.area[1] - opts.area[3]) / 2 - activeWidth, (opts.height - opts.area[0] - opts.area[2]) / 2 - activeWidth);
  series = getFunnelDataPoints(series, radius, process);
  context.save();
  context.translate(centerPosition.x, centerPosition.y);
  for (var i = 0; i < series.length; i++) {
    if (i == 0) {
      if (opts.tooltip) {
        if (opts.tooltip.index == i) {
          context.beginPath();
          context.setFillStyle(hexToRgb(series[i].color, funnelOption.activeOpacity));
          context.moveTo(-activeWidth, 0);
          context.lineTo(-series[i].radius - activeWidth, -eachSpacing);
          context.lineTo(series[i].radius + activeWidth, -eachSpacing);
          context.lineTo(activeWidth, 0);
          context.lineTo(-activeWidth, 0);
          context.closePath();
          context.fill();
        }
      }
      series[i].funnelArea = [centerPosition.x - series[i].radius, centerPosition.y - eachSpacing, centerPosition.x + series[i].radius, centerPosition.y];
      context.beginPath();
      context.setLineWidth(funnelOption.borderWidth * opts.pixelRatio);
      context.setStrokeStyle(funnelOption.borderColor);
      context.setFillStyle(hexToRgb(series[i].color, funnelOption.fillOpacity));
      context.moveTo(0, 0);
      context.lineTo(-series[i].radius, -eachSpacing);
      context.lineTo(series[i].radius, -eachSpacing);
      context.lineTo(0, 0);
      context.closePath();
      context.fill();
      if (funnelOption.border == true) {
        context.stroke();
      }
    } else {
      if (opts.tooltip) {
        if (opts.tooltip.index == i) {
          context.beginPath();
          context.setFillStyle(hexToRgb(series[i].color, funnelOption.activeOpacity));
          context.moveTo(0, 0);
          context.lineTo(-series[i - 1].radius - activeWidth, 0);
          context.lineTo(-series[i].radius - activeWidth, -eachSpacing);
          context.lineTo(series[i].radius + activeWidth, -eachSpacing);
          context.lineTo(series[i - 1].radius + activeWidth, 0);
          context.lineTo(0, 0);
          context.closePath();
          context.fill();
        }
      }
      series[i].funnelArea = [centerPosition.x - series[i].radius, centerPosition.y - eachSpacing * (i + 1), centerPosition.x + series[i].radius, centerPosition.y - eachSpacing * i];
      context.beginPath();
      context.setLineWidth(funnelOption.borderWidth * opts.pixelRatio);
      context.setStrokeStyle(funnelOption.borderColor);
      context.setFillStyle(hexToRgb(series[i].color, funnelOption.fillOpacity));
      context.moveTo(0, 0);
      context.lineTo(-series[i - 1].radius, 0);
      context.lineTo(-series[i].radius, -eachSpacing);
      context.lineTo(series[i].radius, -eachSpacing);
      context.lineTo(series[i - 1].radius, 0);
      context.lineTo(0, 0);
      context.closePath();
      context.fill();
      if (funnelOption.border == true) {
        context.stroke();
      }
    }
    context.translate(0, -eachSpacing);
  }
  context.restore();

  if (opts.dataLabel !== false && process === 1) {
    drawFunnelText(series, opts, context, eachSpacing, funnelOption.labelAlign, activeWidth, centerPosition);
  }

  return {
    center: centerPosition,
    radius: radius,
    series: series };

}

function drawFunnelText(series, opts, context, eachSpacing, labelAlign, activeWidth, centerPosition) {
  for (var i = 0; i < series.length; i++) {
    var item = series[i];
    var startX = void 0,endX = void 0,startY = void 0,fontSize = void 0;
    var text = item.format ? item.format(+item._proportion_.toFixed(2)) : util.toFixed(item._proportion_ * 100) + '%';
    if (labelAlign == 'right') {
      if (i == 0) {
        startX = (item.funnelArea[2] + centerPosition.x) / 2;
      } else {
        startX = (item.funnelArea[2] + series[i - 1].funnelArea[2]) / 2;
      }
      endX = startX + activeWidth * 2;
      startY = item.funnelArea[1] + eachSpacing / 2;
      fontSize = item.textSize || opts.fontSize;
      context.setLineWidth(1 * opts.pixelRatio);
      context.setStrokeStyle(item.color);
      context.setFillStyle(item.color);
      context.beginPath();
      context.moveTo(startX, startY);
      context.lineTo(endX, startY);
      context.stroke();
      context.closePath();
      context.beginPath();
      context.moveTo(endX, startY);
      context.arc(endX, startY, 2, 0, 2 * Math.PI);
      context.closePath();
      context.fill();
      context.beginPath();
      context.setFontSize(fontSize);
      context.setFillStyle(item.textColor || '#666666');
      context.fillText(text, endX + 5, startY + fontSize / 2 - 2);
      context.closePath();
      context.stroke();
      context.closePath();
    } else {
      if (i == 0) {
        startX = (item.funnelArea[0] + centerPosition.x) / 2;
      } else {
        startX = (item.funnelArea[0] + series[i - 1].funnelArea[0]) / 2;
      }
      endX = startX - activeWidth * 2;
      startY = item.funnelArea[1] + eachSpacing / 2;
      fontSize = item.textSize || opts.fontSize;
      context.setLineWidth(1 * opts.pixelRatio);
      context.setStrokeStyle(item.color);
      context.setFillStyle(item.color);
      context.beginPath();
      context.moveTo(startX, startY);
      context.lineTo(endX, startY);
      context.stroke();
      context.closePath();
      context.beginPath();
      context.moveTo(endX, startY);
      context.arc(endX, startY, 2, 0, 2 * Math.PI);
      context.closePath();
      context.fill();
      context.beginPath();
      context.setFontSize(fontSize);
      context.setFillStyle(item.textColor || '#666666');
      context.fillText(text, endX - 5 - measureText(text), startY + fontSize / 2 - 2);
      context.closePath();
      context.stroke();
      context.closePath();
    }

  }
}


function drawCanvas(opts, context) {
  context.draw();
}

var Timing = {
  easeIn: function easeIn(pos) {
    return Math.pow(pos, 3);
  },
  easeOut: function easeOut(pos) {
    return Math.pow(pos - 1, 3) + 1;
  },
  easeInOut: function easeInOut(pos) {
    if ((pos /= 0.5) < 1) {
      return 0.5 * Math.pow(pos, 3);
    } else {
      return 0.5 * (Math.pow(pos - 2, 3) + 2);
    }
  },
  linear: function linear(pos) {
    return pos;
  } };


function Animation(opts) {
  this.isStop = false;
  opts.duration = typeof opts.duration === 'undefined' ? 1000 : opts.duration;
  opts.timing = opts.timing || 'linear';
  var delay = 17;

  function createAnimationFrame() {
    if (typeof setTimeout !== 'undefined') {
      return function (step, delay) {
        setTimeout(function () {
          var timeStamp = +new Date();
          step(timeStamp);
        }, delay);
      };
    } else if (typeof requestAnimationFrame !== 'undefined') {
      return requestAnimationFrame;
    } else {
      return function (step) {
        step(null);
      };
    }
  };
  var animationFrame = createAnimationFrame();
  var startTimeStamp = null;
  var _step = function step(timestamp) {
    if (timestamp === null || this.isStop === true) {
      opts.onProcess && opts.onProcess(1);
      opts.onAnimationFinish && opts.onAnimationFinish();
      return;
    }
    if (startTimeStamp === null) {
      startTimeStamp = timestamp;
    }
    if (timestamp - startTimeStamp < opts.duration) {
      var process = (timestamp - startTimeStamp) / opts.duration;
      var timingFunction = Timing[opts.timing];
      process = timingFunction(process);

      opts.onProcess && opts.onProcess(process);
      animationFrame(_step, delay);
    } else {
      opts.onProcess && opts.onProcess(1);
      opts.onAnimationFinish && opts.onAnimationFinish();
    }
  };
  _step = _step.bind(this);
  animationFrame(_step, delay);
}

// stop animation immediately
// and tigger onAnimationFinish
Animation.prototype.stop = function () {
  this.isStop = true;
};

function drawCharts(type, opts, config, context) {
  var _this = this;
  var series = opts.series;
  var categories = opts.categories;
  series = fillSeries(series, opts, config);
  var duration = opts.animation ? opts.duration : 0;
  _this.animationInstance && _this.animationInstance.stop();
  var seriesMA = null;
  if (type == 'candle') {
    var average = assign({}, opts.extra.candle.average);
    if (average.show) {
      seriesMA = calCandleMA(average.day, average.name, average.color, series[0].data);
      seriesMA = fillSeries(seriesMA, opts, config);
      opts.seriesMA = seriesMA;
    } else if (opts.seriesMA) {
      seriesMA = opts.seriesMA = fillSeries(opts.seriesMA, opts, config);
    } else {
      seriesMA = series;
    }
  } else {
    seriesMA = series;
  }

  /* 过滤掉show=false的series */
  opts._series_ = series = filterSeries(series);

  //重新计算图表区域

  opts.area = new Array(4);
  //复位绘图区域
  for (var j = 0; j < 4; j++) {
    opts.area[j] = opts.padding[j];
  }

  //通过计算三大区域：图例、X轴、Y轴的大小，确定绘图区域
  var _calLegendData = calLegendData(seriesMA, opts, config, opts.chartData),
  legendHeight = _calLegendData.area.wholeHeight,
  legendWidth = _calLegendData.area.wholeWidth;

  switch (opts.legend.position) {
    case 'top':
      opts.area[0] += legendHeight;
      break;
    case 'bottom':
      opts.area[2] += legendHeight;
      break;
    case 'left':
      opts.area[3] += legendWidth;
      break;
    case 'right':
      opts.area[1] += legendWidth;
      break;}


  var _calYAxisData = {},yAxisWidth = 0;
  if (opts.type === 'line' || opts.type === 'column' || opts.type === 'area' || opts.type === 'mix' || opts.type === 'candle') {
    _calYAxisData = calYAxisData(series, opts, config);
    yAxisWidth = _calYAxisData.yAxisWidth;
    //如果显示Y轴标题
    if (opts.yAxis.showTitle) {
      var maxTitleHeight = 0;
      for (var i = 0; i < opts.yAxis.data.length; i++) {
        maxTitleHeight = Math.max(maxTitleHeight, opts.yAxis.data[i].titleFontSize ? opts.yAxis.data[i].titleFontSize : config.fontSize);
      }
      opts.area[0] += (maxTitleHeight + 6) * opts.pixelRatio;
    }
    var rightIndex = 0,leftIndex = 0;
    //计算主绘图区域左右位置
    for (var _i23 = 0; _i23 < yAxisWidth.length; _i23++) {
      if (yAxisWidth[_i23].position == 'left') {
        if (leftIndex > 0) {
          opts.area[3] += yAxisWidth[_i23].width + opts.yAxis.padding;
        } else {
          opts.area[3] += yAxisWidth[_i23].width;
        }
        leftIndex += 1;
      } else {
        if (rightIndex > 0) {
          opts.area[1] += yAxisWidth[_i23].width + opts.yAxis.padding;
        } else {
          opts.area[1] += yAxisWidth[_i23].width;
        }
        rightIndex += 1;
      }
    }
  } else {
    config.yAxisWidth = yAxisWidth;
  }
  opts.chartData.yAxisData = _calYAxisData;

  if (opts.categories && opts.categories.length) {
    opts.chartData.xAxisData = getXAxisPoints(opts.categories, opts, config);
    var _calCategoriesData = calCategoriesData(opts.categories, opts, config, opts.chartData.xAxisData.eachSpacing),
    xAxisHeight = _calCategoriesData.xAxisHeight,
    angle = _calCategoriesData.angle;
    config.xAxisHeight = xAxisHeight;
    config._xAxisTextAngle_ = angle;
    opts.area[2] += xAxisHeight;
    opts.chartData.categoriesData = _calCategoriesData;
  } else {
    if (opts.type === 'line' || opts.type === 'area' || opts.type === 'points') {
      opts.chartData.xAxisData = calXAxisData(series, opts, config);
      categories = opts.chartData.xAxisData.rangesFormat;
      var _calCategoriesData2 = calCategoriesData(categories, opts, config, opts.chartData.xAxisData.eachSpacing),
      _xAxisHeight = _calCategoriesData2.xAxisHeight,
      _angle = _calCategoriesData2.angle;
      config.xAxisHeight = _xAxisHeight;
      config._xAxisTextAngle_ = _angle;
      opts.area[2] += _xAxisHeight;
      opts.chartData.categoriesData = _calCategoriesData2;
    } else {
      opts.chartData.xAxisData = {
        xAxisPoints: [] };

    }
  }
  //计算右对齐偏移距离
  if (opts.enableScroll && opts.xAxis.scrollAlign == 'right' && opts._scrollDistance_ === undefined) {
    var offsetLeft = 0,
    xAxisPoints = opts.chartData.xAxisData.xAxisPoints,
    startX = opts.chartData.xAxisData.startX,
    endX = opts.chartData.xAxisData.endX,
    eachSpacing = opts.chartData.xAxisData.eachSpacing;
    var totalWidth = eachSpacing * (xAxisPoints.length - 1);
    var screenWidth = endX - startX;
    offsetLeft = screenWidth - totalWidth;
    _this.scrollOption = {
      currentOffset: offsetLeft,
      startTouchX: offsetLeft,
      distance: 0,
      lastMoveTime: 0 };

    opts._scrollDistance_ = offsetLeft;
  }

  if (type === 'pie' || type === 'ring' || type === 'rose') {
    config._pieTextMaxLength_ = opts.dataLabel === false ? 0 : getPieTextMaxLength(seriesMA);
  }

  switch (type) {
    case 'word':
      var wordOption = assign({}, {
        type: 'normal',
        autoColors: true },
      opts.extra.word);
      if (opts.updateData == true || opts.updateData == undefined) {
        opts.chartData.wordCloudData = getWordCloudPoint(opts, wordOption.type);
      }
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawWordCloudDataPoints(series, opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'map':
      context.clearRect(0, 0, opts.width, opts.height);
      drawMapDataPoints(series, opts, config, context);
      break;
    case 'funnel':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.funnelData = drawFunnelDataPoints(series, opts, config, context, process);
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'line':
      this.animationInstance = new Animation({
        timing: 'easeIn',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawYAxisGrid(categories, opts, config, context);
          drawXAxis(categories, opts, config, context);
          var _drawLineDataPoints = drawLineDataPoints(series, opts, config, context, process),
          xAxisPoints = _drawLineDataPoints.xAxisPoints,
          calPoints = _drawLineDataPoints.calPoints,
          eachSpacing = _drawLineDataPoints.eachSpacing;
          opts.chartData.xAxisPoints = xAxisPoints;
          opts.chartData.calPoints = calPoints;
          opts.chartData.eachSpacing = eachSpacing;
          drawYAxis(series, opts, config, context);
          if (opts.enableMarkLine !== false && process === 1) {
            drawMarkLine(opts, config, context);
          }
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);
          drawCanvas(opts, context);

        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'mix':
      this.animationInstance = new Animation({
        timing: 'easeIn',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawYAxisGrid(categories, opts, config, context);
          drawXAxis(categories, opts, config, context);
          var _drawMixDataPoints = drawMixDataPoints(series, opts, config, context, process),
          xAxisPoints = _drawMixDataPoints.xAxisPoints,
          calPoints = _drawMixDataPoints.calPoints,
          eachSpacing = _drawMixDataPoints.eachSpacing;
          opts.chartData.xAxisPoints = xAxisPoints;
          opts.chartData.calPoints = calPoints;
          opts.chartData.eachSpacing = eachSpacing;
          drawYAxis(series, opts, config, context);
          if (opts.enableMarkLine !== false && process === 1) {
            drawMarkLine(opts, config, context);
          }
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'column':
      this.animationInstance = new Animation({
        timing: 'easeIn',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawYAxisGrid(categories, opts, config, context);
          drawXAxis(categories, opts, config, context);
          var _drawColumnDataPoints = drawColumnDataPoints(series, opts, config, context, process),
          xAxisPoints = _drawColumnDataPoints.xAxisPoints,
          calPoints = _drawColumnDataPoints.calPoints,
          eachSpacing = _drawColumnDataPoints.eachSpacing;
          opts.chartData.xAxisPoints = xAxisPoints;
          opts.chartData.calPoints = calPoints;
          opts.chartData.eachSpacing = eachSpacing;
          drawYAxis(series, opts, config, context);
          if (opts.enableMarkLine !== false && process === 1) {
            drawMarkLine(opts, config, context);
          }
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'area':
      this.animationInstance = new Animation({
        timing: 'easeIn',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawYAxisGrid(categories, opts, config, context);
          drawXAxis(categories, opts, config, context);
          var _drawAreaDataPoints = drawAreaDataPoints(series, opts, config, context, process),
          xAxisPoints = _drawAreaDataPoints.xAxisPoints,
          calPoints = _drawAreaDataPoints.calPoints,
          eachSpacing = _drawAreaDataPoints.eachSpacing;
          opts.chartData.xAxisPoints = xAxisPoints;
          opts.chartData.calPoints = calPoints;
          opts.chartData.eachSpacing = eachSpacing;
          drawYAxis(series, opts, config, context);
          if (opts.enableMarkLine !== false && process === 1) {
            drawMarkLine(opts, config, context);
          }
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'ring':
    case 'pie':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.pieData = drawPieDataPoints(series, opts, config, context, process);
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'rose':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.pieData = drawRoseDataPoints(series, opts, config, context, process);
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'radar':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.radarData = drawRadarDataPoints(series, opts, config, context, process);
          drawLegend(opts.series, opts, config, context, opts.chartData);
          drawToolTipBridge(opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'arcbar':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.arcbarData = drawArcbarDataPoints(series, opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'gauge':
      this.animationInstance = new Animation({
        timing: 'easeInOut',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          opts.chartData.gaugeData = drawGaugeDataPoints(categories, series, opts, config, context, process);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;
    case 'candle':
      this.animationInstance = new Animation({
        timing: 'easeIn',
        duration: duration,
        onProcess: function onProcess(process) {
          context.clearRect(0, 0, opts.width, opts.height);
          if (opts.rotate) {
            contextRotate(context, opts);
          }
          drawYAxisGrid(categories, opts, config, context);
          drawXAxis(categories, opts, config, context);
          var _drawCandleDataPoints = drawCandleDataPoints(series, seriesMA, opts, config, context, process),
          xAxisPoints = _drawCandleDataPoints.xAxisPoints,
          calPoints = _drawCandleDataPoints.calPoints,
          eachSpacing = _drawCandleDataPoints.eachSpacing;
          opts.chartData.xAxisPoints = xAxisPoints;
          opts.chartData.calPoints = calPoints;
          opts.chartData.eachSpacing = eachSpacing;
          drawYAxis(series, opts, config, context);
          if (opts.enableMarkLine !== false && process === 1) {
            drawMarkLine(opts, config, context);
          }
          if (seriesMA) {
            drawLegend(seriesMA, opts, config, context, opts.chartData);
          } else {
            drawLegend(opts.series, opts, config, context, opts.chartData);
          }
          drawToolTipBridge(opts, config, context, process, eachSpacing, xAxisPoints);
          drawCanvas(opts, context);
        },
        onAnimationFinish: function onAnimationFinish() {
          _this.event.trigger('renderComplete');
        } });

      break;}

}

// simple event implement

function Event() {
  this.events = {};
}

Event.prototype.addEventListener = function (type, listener) {
  this.events[type] = this.events[type] || [];
  this.events[type].push(listener);
};

Event.prototype.trigger = function () {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var type = args[0];
  var params = args.slice(1);
  if (!!this.events[type]) {
    this.events[type].forEach(function (listener) {
      try {
        listener.apply(null, params);
      } catch (e) {
        console.error(e);
      }
    });
  }
};

var Charts = function Charts(opts) {
  opts.arcbarLineCap = opts.arcbarLineCap || "round";
  opts.pixelRatio = opts.pixelRatio ? opts.pixelRatio : 1;
  opts.fontSize = opts.fontSize ? opts.fontSize * opts.pixelRatio : 13 * opts.pixelRatio;
  opts.title = assign({}, opts.title);
  opts.subtitle = assign({}, opts.subtitle);
  opts.duration = opts.duration ? opts.duration : 1000;
  opts.yAxis = assign({}, {
    data: [],
    showTitle: false,
    disabled: false,
    disableGrid: false,
    splitNumber: 5,
    gridType: 'solid',
    dashLength: 4 * opts.pixelRatio,
    gridColor: '#cccccc',
    padding: 10,
    fontColor: '#666666' },
  opts.yAxis);
  opts.yAxis.dashLength *= opts.pixelRatio;
  opts.yAxis.padding *= opts.pixelRatio;
  opts.xAxis = assign({}, {
    rotateLabel: false,
    type: 'calibration',
    gridType: 'solid',
    dashLength: 4,
    scrollAlign: 'left',
    boundaryGap: 'center',
    axisLine: true,
    axisLineColor: '#cccccc' },
  opts.xAxis);
  opts.xAxis.dashLength *= opts.pixelRatio;
  opts.legend = assign({}, {
    show: true,
    position: 'bottom',
    float: 'center',
    backgroundColor: 'rgba(0,0,0,0)',
    borderColor: 'rgba(0,0,0,0)',
    borderWidth: 0,
    padding: 5,
    margin: 5,
    itemGap: 10,
    fontSize: opts.fontSize,
    lineHeight: opts.fontSize,
    fontColor: '#333333',
    format: {},
    hiddenColor: '#CECECE' },
  opts.legend);
  opts.legend.borderWidth = opts.legend.borderWidth * opts.pixelRatio;
  opts.legend.itemGap = opts.legend.itemGap * opts.pixelRatio;
  opts.legend.padding = opts.legend.padding * opts.pixelRatio;
  opts.legend.margin = opts.legend.margin * opts.pixelRatio;
  opts.extra = assign({}, opts.extra);
  opts.rotate = opts.rotate ? true : false;
  opts.animation = opts.animation ? true : false;
  opts.rotate = opts.rotate ? true : false;

  var config$$1 = JSON.parse(JSON.stringify(config));
  config$$1.colors = opts.colors ? opts.colors : config$$1.colors;
  config$$1.yAxisTitleWidth = opts.yAxis.disabled !== true && opts.yAxis.title ? config$$1.yAxisTitleWidth : 0;
  if (opts.type == 'pie' || opts.type == 'ring') {
    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.pie.labelWidth * opts.pixelRatio || config$$1.pieChartLinePadding * opts.pixelRatio;
  }
  if (opts.type == 'rose') {
    config$$1.pieChartLinePadding = opts.dataLabel === false ? 0 : opts.extra.rose.labelWidth * opts.pixelRatio || config$$1.pieChartLinePadding * opts.pixelRatio;
  }
  config$$1.pieChartTextPadding = opts.dataLabel === false ? 0 : config$$1.pieChartTextPadding * opts.pixelRatio;
  config$$1.yAxisSplit = opts.yAxis.splitNumber ? opts.yAxis.splitNumber : config.yAxisSplit;

  //屏幕旋转
  config$$1.rotate = opts.rotate;
  if (opts.rotate) {
    var tempWidth = opts.width;
    var tempHeight = opts.height;
    opts.width = tempHeight;
    opts.height = tempWidth;
  }

  //适配高分屏
  opts.padding = opts.padding ? opts.padding : config$$1.padding;
  for (var i = 0; i < 4; i++) {
    opts.padding[i] *= opts.pixelRatio;
  }
  config$$1.yAxisWidth = config.yAxisWidth * opts.pixelRatio;
  config$$1.xAxisHeight = config.xAxisHeight * opts.pixelRatio;
  if (opts.enableScroll && opts.xAxis.scrollShow) {
    config$$1.xAxisHeight += 6 * opts.pixelRatio;
  }
  config$$1.xAxisLineHeight = config.xAxisLineHeight * opts.pixelRatio;
  config$$1.fontSize = opts.fontSize;
  config$$1.titleFontSize = config.titleFontSize * opts.pixelRatio;
  config$$1.subtitleFontSize = config.subtitleFontSize * opts.pixelRatio;
  config$$1.toolTipPadding = config.toolTipPadding * opts.pixelRatio;
  config$$1.toolTipLineHeight = config.toolTipLineHeight * opts.pixelRatio;
  config$$1.columePadding = config.columePadding * opts.pixelRatio;
  opts.$this = opts.$this ? opts.$this : this;

  this.context = uni.createCanvasContext(opts.canvasId, opts.$this);
  /* 兼容原生H5
                                                                     this.context = document.getElementById(opts.canvasId).getContext("2d");
                                                                     this.context.setStrokeStyle = function(e){ return this.strokeStyle=e; }
                                                                     this.context.setLineWidth = function(e){ return this.lineWidth=e; }
                                                                     this.context.setLineCap = function(e){ return this.lineCap=e; }
                                                                     this.context.setFontSize = function(e){ return this.font=e+"px sans-serif"; }
                                                                     this.context.setFillStyle = function(e){ return this.fillStyle=e; }
                                                                     this.context.draw = function(){ }
                                                                     */

  opts.chartData = {};
  this.event = new Event();
  this.scrollOption = {
    currentOffset: 0,
    startTouchX: 0,
    distance: 0,
    lastMoveTime: 0 };


  this.opts = opts;
  this.config = config$$1;

  drawCharts.call(this, opts.type, opts, config$$1, this.context);
};

Charts.prototype.updateData = function () {
  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  this.opts = assign({}, this.opts, data);
  this.opts.updateData = true;
  var scrollPosition = data.scrollPosition || 'current';
  switch (scrollPosition) {
    case 'current':
      this.opts._scrollDistance_ = this.scrollOption.currentOffset;
      break;
    case 'left':
      this.opts._scrollDistance_ = 0;
      this.scrollOption = {
        currentOffset: 0,
        startTouchX: 0,
        distance: 0,
        lastMoveTime: 0 };

      break;
    case 'right':
      var _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config),
      yAxisWidth = _calYAxisData.yAxisWidth;
      this.config.yAxisWidth = yAxisWidth;
      var offsetLeft = 0;
      var _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),
      xAxisPoints = _getXAxisPoints0.xAxisPoints,
      startX = _getXAxisPoints0.startX,
      endX = _getXAxisPoints0.endX,
      eachSpacing = _getXAxisPoints0.eachSpacing;
      var totalWidth = eachSpacing * (xAxisPoints.length - 1);
      var screenWidth = endX - startX;
      offsetLeft = screenWidth - totalWidth;
      this.scrollOption = {
        currentOffset: offsetLeft,
        startTouchX: offsetLeft,
        distance: 0,
        lastMoveTime: 0 };

      this.opts._scrollDistance_ = offsetLeft;
      break;}

  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);
};

Charts.prototype.zoom = function () {
  var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.opts.xAxis.itemCount;
  if (this.opts.enableScroll !== true) {
    console.log('请启用滚动条后使用！');
    return;
  }
  //当前屏幕中间点
  var centerPoint = Math.round(Math.abs(this.scrollOption.currentOffset) / this.opts.chartData.eachSpacing) + Math.round(
  this.opts.xAxis.itemCount / 2);
  this.opts.animation = false;
  this.opts.xAxis.itemCount = val.itemCount;
  //重新计算x轴偏移距离
  var _calYAxisData = calYAxisData(this.opts.series, this.opts, this.config),
  yAxisWidth = _calYAxisData.yAxisWidth;
  this.config.yAxisWidth = yAxisWidth;
  var offsetLeft = 0;
  var _getXAxisPoints0 = getXAxisPoints(this.opts.categories, this.opts, this.config),
  xAxisPoints = _getXAxisPoints0.xAxisPoints,
  startX = _getXAxisPoints0.startX,
  endX = _getXAxisPoints0.endX,
  eachSpacing = _getXAxisPoints0.eachSpacing;
  var centerLeft = eachSpacing * centerPoint;
  var screenWidth = endX - startX;
  var MaxLeft = screenWidth - eachSpacing * (xAxisPoints.length - 1);
  offsetLeft = screenWidth / 2 - centerLeft;
  if (offsetLeft > 0) {
    offsetLeft = 0;
  }
  if (offsetLeft < MaxLeft) {
    offsetLeft = MaxLeft;
  }
  this.scrollOption = {
    currentOffset: offsetLeft,
    startTouchX: offsetLeft,
    distance: 0,
    lastMoveTime: 0 };

  this.opts._scrollDistance_ = offsetLeft;
  drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);
};

Charts.prototype.stopAnimation = function () {
  this.animationInstance && this.animationInstance.stop();
};

Charts.prototype.addEventListener = function (type, listener) {
  this.event.addEventListener(type, listener);
};

Charts.prototype.getCurrentDataIndex = function (e) {
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  if (touches) {
    var _touches$ = getTouches(touches, this.opts, e);
    if (this.opts.type === 'pie' || this.opts.type === 'ring' || this.opts.type === 'rose') {
      return findPieChartCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts.chartData.pieData);
    } else if (this.opts.type === 'radar') {
      return findRadarChartCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts.chartData.radarData, this.opts.categories.length);
    } else if (this.opts.type === 'funnel') {
      return findFunnelChartCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts.chartData.funnelData);
    } else if (this.opts.type === 'map') {
      return findMapChartCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts);
    } else if (this.opts.type === 'word') {
      return findWordChartCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts.chartData.wordCloudData);
    } else {
      return findCurrentIndex({
        x: _touches$.x,
        y: _touches$.y },
      this.opts.chartData.calPoints, this.opts, this.config, Math.abs(this.scrollOption.currentOffset));
    }
  }
  return -1;
};

Charts.prototype.getLegendDataIndex = function (e) {
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  if (touches) {
    var _touches$ = getTouches(touches, this.opts, e);
    return findLegendIndex({
      x: _touches$.x,
      y: _touches$.y },
    this.opts.chartData.legendData);
  }
  return -1;
};

Charts.prototype.touchLegend = function (e) {
  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  if (touches) {
    var _touches$ = getTouches(touches, this.opts, e);
    var index = this.getLegendDataIndex(e);
    if (index >= 0) {
      this.opts.series[index].show = !this.opts.series[index].show;
      this.opts.animation = option.animation ? true : false;
      this.opts._scrollDistance_ = this.scrollOption.currentOffset;
      drawCharts.call(this, this.opts.type, this.opts, this.config, this.context);
    }
  }

};

Charts.prototype.showToolTip = function (e) {
  var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  if (!touches) {
    console.log("touchError");
  }
  var _touches$ = getTouches(touches, this.opts, e);
  var currentOffset = this.scrollOption.currentOffset;
  var opts = assign({}, this.opts, {
    _scrollDistance_: currentOffset,
    animation: false });

  if (this.opts.type === 'line' || this.opts.type === 'area' || this.opts.type === 'column') {
    var index = this.getCurrentDataIndex(e);
    if (index > -1) {
      var seriesData = getSeriesDataItem(this.opts.series, index);
      if (seriesData.length !== 0) {
        var _getToolTipData = getToolTipData(seriesData, this.opts.chartData.calPoints, index, this.opts.categories, option),
        textList = _getToolTipData.textList,
        offset = _getToolTipData.offset;
        offset.y = _touches$.y;
        opts.tooltip = {
          textList: textList,
          offset: offset,
          option: option,
          index: index };

      }
    }
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
  if (this.opts.type === 'mix') {
    var index = this.getCurrentDataIndex(e);
    if (index > -1) {
      var currentOffset = this.scrollOption.currentOffset;
      var opts = assign({}, this.opts, {
        _scrollDistance_: currentOffset,
        animation: false });

      var seriesData = getSeriesDataItem(this.opts.series, index);
      if (seriesData.length !== 0) {
        var _getMixToolTipData = getMixToolTipData(seriesData, this.opts.chartData.calPoints, index, this.opts.categories, option),
        textList = _getMixToolTipData.textList,
        offset = _getMixToolTipData.offset;
        offset.y = _touches$.y;
        opts.tooltip = {
          textList: textList,
          offset: offset,
          option: option,
          index: index };

      }
    }
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
  if (this.opts.type === 'candle') {
    var index = this.getCurrentDataIndex(e);
    if (index > -1) {
      var currentOffset = this.scrollOption.currentOffset;
      var opts = assign({}, this.opts, {
        _scrollDistance_: currentOffset,
        animation: false });

      var seriesData = getSeriesDataItem(this.opts.series, index);
      if (seriesData.length !== 0) {
        var _getToolTipData = getCandleToolTipData(this.opts.series[0].data, seriesData, this.opts.chartData.calPoints,
        index, this.opts.categories, this.opts.extra.candle, option),
        textList = _getToolTipData.textList,
        offset = _getToolTipData.offset;
        offset.y = _touches$.y;
        opts.tooltip = {
          textList: textList,
          offset: offset,
          option: option,
          index: index };

      }
    }
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
  if (this.opts.type === 'pie' || this.opts.type === 'ring' || this.opts.type === 'rose' || this.opts.type === 'funnel') {
    var index = this.getCurrentDataIndex(e);
    if (index > -1) {
      var currentOffset = this.scrollOption.currentOffset;
      var opts = assign({}, this.opts, {
        _scrollDistance_: currentOffset,
        animation: false });

      var seriesData = this.opts._series_[index];
      var textList = [{
        text: option.format ? option.format(seriesData) : seriesData.name + ': ' + seriesData.data,
        color: seriesData.color }];

      var offset = {
        x: _touches$.x,
        y: _touches$.y };

      opts.tooltip = {
        textList: textList,
        offset: offset,
        option: option,
        index: index };

    }
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
  if (this.opts.type === 'map' || this.opts.type === 'word') {
    var index = this.getCurrentDataIndex(e);
    if (index > -1) {
      var currentOffset = this.scrollOption.currentOffset;
      var opts = assign({}, this.opts, {
        _scrollDistance_: currentOffset,
        animation: false });

      var seriesData = this.opts._series_[index];
      var textList = [{
        text: option.format ? option.format(seriesData) : seriesData.properties.name,
        color: seriesData.color }];

      var offset = {
        x: _touches$.x,
        y: _touches$.y };

      opts.tooltip = {
        textList: textList,
        offset: offset,
        option: option,
        index: index };

    }
    opts.updateData = false;
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
  if (this.opts.type === 'radar') {
    var index = this.getCurrentDataIndex(e);
    if (index > -1) {
      var currentOffset = this.scrollOption.currentOffset;
      var opts = assign({}, this.opts, {
        _scrollDistance_: currentOffset,
        animation: false });

      var seriesData = getSeriesDataItem(this.opts.series, index);
      if (seriesData.length !== 0) {
        var textList = seriesData.map(function (item) {
          return {
            text: option.format ? option.format(item) : item.name + ': ' + item.data,
            color: item.color };

        });
        var offset = {
          x: _touches$.x,
          y: _touches$.y };

        opts.tooltip = {
          textList: textList,
          offset: offset,
          option: option,
          index: index };

      }
    }
    drawCharts.call(this, opts.type, opts, this.config, this.context);
  }
};

Charts.prototype.translate = function (distance) {
  this.scrollOption = {
    currentOffset: distance,
    startTouchX: distance,
    distance: 0,
    lastMoveTime: 0 };

  var opts = assign({}, this.opts, {
    _scrollDistance_: distance,
    animation: false });

  drawCharts.call(this, this.opts.type, opts, this.config, this.context);
};

Charts.prototype.scrollStart = function (e) {
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  var _touches$ = getTouches(touches, this.opts, e);
  if (touches && this.opts.enableScroll === true) {
    this.scrollOption.startTouchX = _touches$.x;
  }
};

Charts.prototype.scroll = function (e) {
  if (this.scrollOption.lastMoveTime === 0) {
    this.scrollOption.lastMoveTime = Date.now();
  }
  var Limit = this.opts.extra.touchMoveLimit || 20;
  var currMoveTime = Date.now();
  var duration = currMoveTime - this.scrollOption.lastMoveTime;
  if (duration < Math.floor(1000 / Limit)) return;
  this.scrollOption.lastMoveTime = currMoveTime;
  var touches = null;
  if (e.changedTouches) {
    touches = e.changedTouches[0];
  } else {
    touches = e.mp.changedTouches[0];
  }
  if (touches && this.opts.enableScroll === true) {
    var _touches$ = getTouches(touches, this.opts, e);
    var _distance;
    _distance = _touches$.x - this.scrollOption.startTouchX;
    var currentOffset = this.scrollOption.currentOffset;
    var validDistance = calValidDistance(this, currentOffset + _distance, this.opts.chartData, this.config, this.opts);
    this.scrollOption.distance = _distance = validDistance - currentOffset;
    var opts = assign({}, this.opts, {
      _scrollDistance_: currentOffset + _distance,
      animation: false });

    drawCharts.call(this, opts.type, opts, this.config, this.context);
    return currentOffset + _distance;
  }
};

Charts.prototype.scrollEnd = function (e) {
  if (this.opts.enableScroll === true) {
    var _scrollOption = this.scrollOption,
    currentOffset = _scrollOption.currentOffset,
    distance = _scrollOption.distance;
    this.scrollOption.currentOffset = currentOffset + distance;
    this.scrollOption.distance = 0;
  }
};
if ( true && typeof module.exports === "object") {
  module.exports = Charts;
  //export default Charts;//建议使用nodejs的module导出方式，如报错请使用export方式导出
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ })

}]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map